<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>1panel面板部署哪吒监控v1</title>
    <url>/undefined/aad1ff9e.html</url>
    <content><![CDATA[<h1 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h1><p>面板域名以<code>nezha.a.com</code>为例</p>
<p>Cloudflare中添加A记录<code>nezha.a.com</code>指向Dashboard 服务器 IP，开启小黄云。<code>a.com</code>域名设置页面——网络，选择开启WebSockets 和 gRPC ；SSL&#x2F;TLS模式选择完全（严格）。</p>
<h1 id="哪吒搭建"><a href="#哪吒搭建" class="headerlink" title="哪吒搭建"></a>哪吒搭建</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo mkdir -p /opt/nezha &amp;&amp; cd /opt/nezha</span><br><span class="line">nano docker-compose.yml</span><br><span class="line">docker compose up -d</span><br></pre></td></tr></table></figure>

<p>docker-compose.yml文件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">services:</span><br><span class="line">  dashboard:</span><br><span class="line">    container_name: nezha-dashboard</span><br><span class="line">    image: ghcr.io/nezhahq/nezha:latest</span><br><span class="line">    restart: unless-stopped</span><br><span class="line">    volumes:</span><br><span class="line">      - ./dashboard/data:/dashboard/data</span><br><span class="line">    ports:</span><br><span class="line">      - 8008:8008</span><br></pre></td></tr></table></figure>

<h1 id="反代设置"><a href="#反代设置" class="headerlink" title="反代设置"></a>反代设置</h1><p>反代设置代码来源：<a href="https://www.nodeseek.com/jump?to=https://misaka.es/archives/42.html">https://misaka.es/archives/42.html</a></p>
<p>1panel面板中新建反向代理网站，<code>网站 —— 创建网站 —— 反向代理</code>，主域名填写<code>nezha.a.com</code>，代理地址填写<code>127.0.0.1:8008</code></p>
<p>证书页面自行设置Acme账户、DNS账户为<code>nezha.a.com</code>申请证书。</p>
<p>网站页面点击<code>nezha.a.com</code>进入网站设置，开启https。</p>
<p>点击配置文件，最下方添加以下代码，保存并重载。<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202501031701543.png" alt="image"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># upstream 配置</span><br><span class="line">upstream dashboard &#123;</span><br><span class="line">    keepalive 512; </span><br><span class="line">    server 127.0.0.1:8008; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>打开<code>网站 —— 反向代理 —— 源文</code>，使用以下代码替换原内容，点击确认。至此，反向代理设置完成。<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202501031701795.png" alt="image"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">location ^~ / &#123;</span><br><span class="line">    proxy_pass http://127.0.0.1:8008; </span><br><span class="line">    proxy_set_header Host $host; </span><br><span class="line">    proxy_set_header X-Real-IP $remote_addr; </span><br><span class="line">    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; </span><br><span class="line">    proxy_set_header REMOTE-HOST $remote_addr; </span><br><span class="line">    proxy_set_header Upgrade $http_upgrade; </span><br><span class="line">    proxy_set_header nz-realip $http_cf_connecting_ip;</span><br><span class="line">    proxy_set_header Connection &quot;upgrade&quot;;</span><br><span class="line">    proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">    proxy_http_version 1.1; </span><br><span class="line">    proxy_read_timeout 3600s;</span><br><span class="line">    proxy_send_timeout 3600s;</span><br><span class="line">    proxy_buffer_size 128k;</span><br><span class="line">    proxy_buffers 4 128k; </span><br><span class="line">    proxy_busy_buffers_size 256k;</span><br><span class="line">    proxy_max_temp_file_size 0;</span><br><span class="line">    add_header X-Cache $upstream_cache_status; </span><br><span class="line">    add_header Cache-Control no-cache; </span><br><span class="line">    proxy_ssl_server_name off; </span><br><span class="line">    proxy_ssl_name $proxy_host; </span><br><span class="line">    add_header Strict-Transport-Security &quot;max-age=31536000&quot;; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">underscores_in_headers on;</span><br><span class="line">set_real_ip_from 0.0.0.0/0; # CDN 回源 IP 地址段</span><br><span class="line">real_ip_header CF-Connecting-IP; # CDN 私有 header，此处为 CloudFlare 默认</span><br><span class="line"></span><br><span class="line"># gRPC 服务</span><br><span class="line">location ^~ /proto.NezhaService/ &#123;</span><br><span class="line">    grpc_set_header Host $host;</span><br><span class="line">    grpc_set_header nz-realip $http_CF_Connecting_IP; </span><br><span class="line">    grpc_read_timeout 600s;</span><br><span class="line">    grpc_send_timeout 600s;</span><br><span class="line">    grpc_socket_keepalive on;</span><br><span class="line">    client_max_body_size 10m;</span><br><span class="line">    grpc_buffer_size 4m;</span><br><span class="line">    grpc_pass grpc://dashboard;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># WebSocket 服务</span><br><span class="line">location ~* ^/api/v1/ws/(server|terminal|file)(.*)$ &#123;</span><br><span class="line">    proxy_set_header Host $host;</span><br><span class="line">    proxy_set_header nz-realip $http_cf_connecting_ip; </span><br><span class="line">    proxy_set_header Origin https://$host;</span><br><span class="line">    proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">    proxy_set_header Connection &quot;upgrade&quot;;</span><br><span class="line">    proxy_read_timeout 3600s;</span><br><span class="line">    proxy_send_timeout 3600s;</span><br><span class="line">    proxy_pass http://127.0.0.1:8008;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="面板设置"><a href="#面板设置" class="headerlink" title="面板设置"></a>面板设置</h1><p>登录到 Dashboard 配置界面<code>https://nezha.a.com/dashboard</code>，初始用户名、密码均为<code>admin</code>，登录后立即进入管理页面点击<code>头像 —— 个人信息 —— 更新个人资料</code>修改用户名和密码。</p>
<p>点击<code>头像 —— 系统设置</code>，填写站点名称、设置语言，<code>Agent对接地址【域名/IP:端口】</code>填写<code>nezha.a.com:443</code>，勾选<code>Agent 使用 TLS 连接</code>，点击<code>确认</code>即可。</p>
<p><strong>添加TCP-Ping延迟测试：</strong></p>
<p>全国各省份三网 TCP-Ping IPv4 地址：<a href="https://www.nodeseek.com/post-68572-1">https://www.nodeseek.com/post-68572-1</a></p>
<p>全国各省份三网 TCP-Ping IPv6 地址：<a href="https://www.nodeseek.com/post-129987-1">https://www.nodeseek.com/post-129987-1</a></p>
<p>以浙江移动为例，<code>服务</code>页面创建服务，名称：浙江移动，目标：<a href="https://www.nodeseek.com/jump?to=http://zj-cm-v4.ip.zstaticcdn.com:80">zj-cm-v4.ip.zstaticcdn.com:80</a>，类型：TCPing</p>
<p><strong>添加telegram通知：</strong></p>
<p><code>通知</code>页面点击“+”，创建通知，名称自定，URL填写<code>https://api.telegram.org/bot&lt;你的机器人Token&gt;/sendMessage?chat_id=&lt;你的用户ID&gt;&amp;text=#NEZHA#</code>，将 <code>&lt;你的机器人Token&gt;</code> 和 <code>&lt;你的用户ID&gt;</code> 替换为实际值。</p>
<p>获取 URL 参数<br>获取机器人 Token：与 <code>@BotFather </code>对话，发送<code>/newbot</code>创建新机器人，获取 Token。<br>获取用户 ID：与 <code>@userinfobot </code>对话，获取你的用户 ID。<br>与机器人对话：先与新创建的机器人发送一条消息，确保机器人可以发送消息给你。</p>
<p><code>分组</code>——<code>通知</code>，页面点击“+”，编辑通知分组，名称自定，<code>通知</code>勾选提前创建的telegram通知，确认即可。</p>
<p>警报规则参考<a href="https://www.nodeseek.com/jump?to=https://nezha.wiki/guide/notifications.html">哪吒官方文档</a>，以离线通知为例：</p>
<p><code>通知</code>——<code>警报规则</code>，点击“+”，创建警报规则，名称：<code>离线通知</code>，规则：<code>[&#123;&quot;Type&quot;: &quot;offline&quot;, &quot;Duration&quot;: 10&#125;]</code>，通知组：勾选</p>
<p>telegram通知，启用：勾选，点击确认。</p>
<p>面板设置完成，可至<code>服务器</code>页面，点击<code>安装命令</code>，根据系统选择安装命令前往被控vps运行。</p>
<p>注：被控端禁用网页SSH</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sed -i &#x27;s/disable_command_execute: false/disable_command_execute: true/&#x27; /opt/nezha/agent/config.yml &amp;&amp; systemctl restart nezha-agent</span><br></pre></td></tr></table></figure>

<h1 id="接入微软登录"><a href="#接入微软登录" class="headerlink" title="接入微软登录"></a>接入微软登录</h1><p>原wiki地址 <a href="https://www.nodeseek.com/jump?to=https://nezha.wiki/guide/q14.html">https://nezha.wiki/guide/q14.html</a></p>
<p>补充微软登陆</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">oauth2:</span></span><br><span class="line">    <span class="attr">Microsoft:</span></span><br><span class="line">        <span class="attr">clientid:</span> <span class="string">&quot;XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX&quot;</span></span><br><span class="line">        <span class="attr">clientsecret:</span> <span class="string">&quot;XXXXX&quot;</span></span><br><span class="line">        <span class="attr">endpoint:</span></span><br><span class="line">            <span class="attr">authurl:</span> <span class="string">&quot;https://login.microsoftonline.com/consumers/oauth2/v2.0/authorize&quot;</span></span><br><span class="line">            <span class="attr">tokenurl:</span> <span class="string">&quot;https://login.microsoftonline.com/consumers/oauth2/v2.0/token&quot;</span></span><br><span class="line">        <span class="attr">scopes:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&quot;User.Read&quot;</span></span><br><span class="line">        <span class="attr">userinfourl:</span> <span class="string">&quot;https://graph.microsoft.com/v1.0/me&quot;</span></span><br><span class="line">        <span class="attr">useridpath:</span> <span class="string">&quot;id&quot;</span></span><br></pre></td></tr></table></figure>

<p>配置格式如上，需要自己注册应用以获得clientid、clientsecret</p>
<ol>
<li>注册<br><a href="https://www.nodeseek.com/jump?to=https://entra.microsoft.com/%23view/Microsoft_AAD_RegisteredApps/CreateApplicationBlade/quickStartType~/null/isMSAApp~/false">https://entra.microsoft.com/#view/Microsoft_AAD_RegisteredApps&#x2F;CreateApplicationBlade&#x2F;quickStartType<del>&#x2F;null&#x2F;isMSAApp</del>&#x2F;false</a><br>输入项：<br>名称 – 随便写<br>受支持的帐户类型 – 仅 Microsoft 个人帐户<br>重定向 URI (可选) – WEB <a href="https://www.nodeseek.com/jump?to=https://xx.com/api/v1/oauth2/callback">https://xx.com/api/v1/oauth2/callback</a></li>
<li>获得clientid<br><a href="https://www.nodeseek.com/jump?to=https://entra.microsoft.com/%23view/Microsoft_AAD_RegisteredApps/ApplicationsListBlade/quickStartType~/null/sourceType/Microsoft_AAD_IAM">https://entra.microsoft.com/#view/Microsoft_AAD_RegisteredApps&#x2F;ApplicationsListBlade&#x2F;quickStartType~&#x2F;null&#x2F;sourceType&#x2F;Microsoft_AAD_IAM</a><br>在最左边 所有应用程序 找到自己刚才注册的 点进去<br>概述页面有个 应用程序(客户端) ID，这个就是。</li>
<li>获得clientsecret<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202501031707326.png" alt="uS3yGRHdgnCIGTAi9IVkpS"><br>提交后会出现 一个 值，复制，后续会不可见。</li>
<li>修改配置文件 并且 重启 面板服务</li>
<li>在个人信息里面绑定即可</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>5G21第二批刷机以及不同作者间的固件切换</title>
    <url>/undefined/7ae0e921.html</url>
    <content><![CDATA[<p>lean 的 q-wrt 可以进行 webui 直接更新 进入 webui 后依次点击系统-服务&#x2F;备份-刷写新的固件上传固件后升级。切记不要勾选保留配置。<br>切换到志平或狂风固件请使用 winscp 等工具上传到 tmp 目录后，ssh 输入以下的命令，记得先 cd 到 tmp 目录。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sysupgrade -F -n xxx.bin</span><br></pre></td></tr></table></figure>

<p>或者使用以下命令强刷</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sysupgrade -F -n -v xxx.bin</span><br></pre></td></tr></table></figure>

<p><strong>xxx 为固件名字</strong></p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>路由器</tag>
      </tags>
  </entry>
  <entry>
    <title>ABPLC通过Modbus TCP读取设备压力值</title>
    <url>/undefined/3529204a.html</url>
    <content><![CDATA[<h1 id="ABPLC通过Modbus-TCP读取设备压力值"><a href="#ABPLC通过Modbus-TCP读取设备压力值" class="headerlink" title="ABPLC通过Modbus TCP读取设备压力值"></a>ABPLC通过Modbus TCP读取设备压力值</h1><p>使用罗克韦尔（AB）-PLC以客户端形式通过Modbus TCP于设备通讯，并读取压力值。</p>
<h1 id="Modbus-TCP客户端AOI程序导入"><a href="#Modbus-TCP客户端AOI程序导入" class="headerlink" title="Modbus TCP客户端AOI程序导入"></a>Modbus TCP客户端AOI程序导入</h1><p>在<a href="https://www.rockwellautomation.com.cn/">罗克韦尔官网</a>搜索<strong>Modbus TCP Add-On</strong> ，并下载例程，或者点击<a href="https://yunzhongzhuan.com.publicdn.com/download/2764037/VmhKbiki/ModbusTCPAOIver2.04.zip">链接</a>直接下载。</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312111124321.png"></p>
<p>在Studio 5000中新建一个梯级例程，选中梯级右键导入例程。</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312111128174.png" alt="image-20231208160530699"></p>
<p>选择<strong>raC_Opr_NetModbusTCPClient_Rung.L5X</strong>文件，并单击<strong>导入</strong>。</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312111128106.png" alt="image-20231208160926802"></p>
<p>导入对话框打开后选择<strong>Tag</strong>，根据需要修改<strong>Tag</strong>名字。</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312111128074.png" alt="image-20231208161312164"></p>
<p>单击<strong>确认</strong>按钮，完成导入。</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312111128521.png" alt="image-20231208161626725"></p>
<h1 id="配置本地运行参数"><a href="#配置本地运行参数" class="headerlink" title="配置本地运行参数"></a>配置本地运行参数</h1><p>Modbus TCP客户端要求EtherNet&#x2F;IP模块支持Logix套接字。详见<a href="https://rockwellautomation.custhelp.com/app/answers/detail/a_id/470690">链接</a></p>
<p>右键单击连接到<strong>Ref_Connection</strong>参数的Tag，然后选择监控。</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312111128582.png" alt="image-20231208162556767"></p>
<p>打开参数<strong>Tag</strong>，设置相应参数。</p>
<table>
<thead>
<tr>
<th align="left">Tag</th>
<th>参数</th>
</tr>
</thead>
<tbody><tr>
<td align="left">LocalSlot</td>
<td>本地EtherNet&#x2F;IP模块的插槽</td>
</tr>
<tr>
<td align="left">LocalAddress</td>
<td>EtherNet&#x2F;IP模块的.LocalAddress地址。仅对于双IP模式的CompactLogix 5380 和 5480，用于指定Modbus TCP通讯的本地以太网连接的IP地址。其他情况，此字段为空。</td>
</tr>
<tr>
<td align="left">DestAddress</td>
<td>指定Modbus服务端设备的以太网IP地址。该地址必须指定，不可为空。</td>
</tr>
<tr>
<td align="left">DestinationPort</td>
<td>指定ModbusTCP端口为502，该值为ModbusTCP协议标准值。</td>
</tr>
</tbody></table>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312111128823.png" alt="image-20231208162756121"></p>
<p>将连接到<strong>Inp_Enable</strong>参数的Tag值设置为1，启动ModbusTCP客户端。</p>
<p>如果在运行中修改了参数，请务必重置<strong>Inp_Enable</strong>参数。</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312111129829.png" alt="image-20231208164403827"></p>
<h1 id="确认数据位置"><a href="#确认数据位置" class="headerlink" title="确认数据位置"></a>确认数据位置</h1><p>根据压力测量模块寄存器地址表格，确认压力值读取地址：40001&#x2F;40002。</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312111129828.png" alt="image-20231211091447848"></p>
<h1 id="配置数据交换"><a href="#配置数据交换" class="headerlink" title="配置数据交换"></a>配置数据交换</h1><p>监控<strong>Ref_Transactions</strong>参数连接的Tag。</p>
<ol>
<li><p>在<strong>PollInterval</strong>标签中配置轮询间隔时间（单位：毫秒）。</p>
<p>默认值为1000（1秒），最小值为80毫秒，如何轮询低于80毫秒的任务都将以1000毫秒的速率进行轮询。</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312111129617.png" alt="image-20231208165214734"></p>
</li>
<li><p>在<strong>TransType</strong>标签中设置Modbus功能代码。</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312111129658.png" alt="image-20231208165523479"></p>
<table>
<thead>
<tr>
<th>功能代码</th>
<th>名称</th>
<th>说明</th>
<th>Modbus地址范围</th>
</tr>
</thead>
<tbody><tr>
<td>01</td>
<td>读取线圈</td>
<td>用于读取线圈的状态，它可以读取一个或多个线圈的状态，返回结果为状态字节，每个字节可以表示8个线圈的状态。</td>
<td>本地地址：00001-01024；服务端地址：00001-065536</td>
</tr>
<tr>
<td>02</td>
<td>读取离散输入</td>
<td>用于读取离散输入的状态，它可以读取一个或多个离散输入的状态，返回结果为状态字节，每个字节可以表示8个离散输入的状态。</td>
<td>本地地址：10001-11024；服务端地址：10001-165536</td>
</tr>
<tr>
<td>03</td>
<td>读取保持寄存器</td>
<td>用于读取保持寄存器的值，它可以读取一个或多个保持寄存器的值，返回结果为寄存器值，每个寄存器可以表示一个16位二进制值。</td>
<td>本地地址：40001-41024；服务端地址：40001-465536</td>
</tr>
<tr>
<td>04</td>
<td>读取输入寄存器</td>
<td>用于读取输入寄存器的值，它可以读取一个或多个输入寄存器的值，返回结果为寄存器值，每个寄存器可以表示一个16位二进制值。</td>
<td>本地地址：30001-31024；服务端地址：30001-365536</td>
</tr>
<tr>
<td>05</td>
<td>写单个线圈</td>
<td>用于写入单个线圈的状态，它可以写入一个线圈的状态，返回结果为写入的状态字节，每个字节可以表示8个线圈的状态。</td>
<td>本地地址：00001-01024；服务端地址：00001-065536</td>
</tr>
<tr>
<td>06</td>
<td>写单个保持寄存器</td>
<td>用于写入单个寄存器的值，它可以写入一个寄存器的值，返回结果为写入的寄存器值，每个寄存器可以表示一个16位二进制值。</td>
<td>本地地址：40001-41024；服务端地址：40001-465536</td>
</tr>
<tr>
<td>15</td>
<td>写入多个线圈</td>
<td>用于写入多个线圈，它可以写入一个或多个线圈的状态。</td>
<td>本地地址：00001-01024；服务端地址：00001-065536</td>
</tr>
<tr>
<td>16</td>
<td>写入多个保持寄存器</td>
<td>用于写入多个保持寄存器，它可以写入一个或多个保持寄存器的状态。</td>
<td>本地地址：40001-41024；服务端地址：40001-465536</td>
</tr>
</tbody></table>
</li>
<li><p>在对等服务器设备中需要设置<strong>StationID</strong>标签，大多数情况下ModbusTCP服务器会忽略该字段。</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312111129534.png" alt="image-20231208171706660"></p>
</li>
<li><p>设置<strong>BeginAddress</strong>标签。该值表示要从TCP服务端读取或者写入的起始地址。</p>
<p>根据上面设置功能代码，该数值分别代表不同的Modbus地址。</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312111129088.png" alt="image-20231208172013912"></p>
</li>
<li><p>设置<strong>Count</strong>标签。该值表示要从ModbusTCP服务端读取或写入的项目数。</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312111129874.png" alt="image-20231211092051869"></p>
</li>
<li><p>设置<strong>LocalAddress</strong>标签。该值表示从ModbusTCP服务端读取或写入的数据放置到“<strong>Data</strong>”数组的起始地址。</p>
<p>前面配置的功能代码为读取保持寄存器，所以读取地址为4xxx。</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312111129730.png" alt="image-20231211092952178"></p>
<p>将读取数据从数组的第0为开始存放。</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312111129844.png" alt="image-20231211093045827"></p>
</li>
<li><p>将<strong>Enabled</strong>标签设置为1，启用第一组参数。</p>
</li>
</ol>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312111129436.png" alt="image-20231208164957692"></p>
<h1 id="使用限制"><a href="#使用限制" class="headerlink" title="使用限制"></a>使用限制</h1><ol>
<li>必须使用Import Rung函数来实现，以保留Message指令配置。不要使用复制&#x2F;粘贴，因为它不会带来完整的消息指令配置和标签。一旦rung实现，不要使用Search&#x2F;Replace标签。所有的替换只能在梯级导入期间进行。</li>
<li>每个控制器支持多个客户机AOI实例。每个实例必须使用自己的一组backing和Message标记，但是“…_Data”标记结构可以在aoi之间共享。</li>
<li>Modbus TCP Server和Modbus TCP Client aoi可以驻留在同一个程序中。但是，服务器应用程序可能会由于共享的Logix Sockets对象而导致客户端暂时断开连接。</li>
<li>当在ControlLogix Redundancy系统中实现时，用户应该期望在Modbus TCP Client AOI导致控制器切换后至少有5秒的Modbus通信丢失。由于正在使用的服务器设备的行为，可能会有额外的Modbus通信延迟。</li>
</ol>
<h1 id="监控Modbus-TCP客户端"><a href="#监控Modbus-TCP客户端" class="headerlink" title="监控Modbus TCP客户端"></a>监控Modbus TCP客户端</h1><ol>
<li><p><strong>ModbusTCP</strong>数据标签位于<strong>Ref_ModbusData</strong>参数标签下。</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312111129703.png" alt="image-20231211100839818"></p>
<p>该标签包含线圈(0xxxx)，离散输入(1xxxx)，输入寄存器(3xxxx)和保持寄存器(4xxxx)四个独立的数据区域。<br>用户应用程序可以不受任何限制地读取和填充这些标记值。</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312111130298.png" alt="image-20231211101008143"></p>
</li>
<li><p>Modbus TCP AOI 状态位</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312111130002.png" alt="image-20231211101427161"></p>
<p>a. Sts_EN输出表示Modbus TCP Client功能已启用。</p>
<p>b. “Sts_Connected”输出表示客户端连接请求被服务器接受。它不指示活动数据流。<br>应该检查单个事务的状态以验证数据交换。</p>
<p>c. Sts_Faulted输出表示消息指令有一条出错。</p>
<p>d. Sts_Overlap输出表示一个或多个事务在下一次触发之前没有完成</p>
<p>e. Sts_Overload输出表示在一个或多个事务中存在过多的重叠。</p>
</li>
<li><p>单个任务状态信息。这些TAg存在于5个内建任务中的每个任务中。<br>任务0 - 4)。</p>
<p>当请求的任务完成时，<strong>TransComplete</strong>位被置位。当它被要求进行下一次任务时，被程序清除。</p>
<p><strong>TransStatus</strong>值表示任务的当前状态。0&#x3D;成功，1&#x3D;正在处理中，2&#x3D;重试，-1&#x3D;异常。</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312111130362.png" alt="image-20231211102538268"></p>
</li>
<li><p>任务诊断Tag表示任务在处于活动状态时提供的内部动态信息。<strong>请勿修改这些Tag</strong></p>
</li>
</ol>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312111130326.png" alt="image-20231211102759109"></p>
<h1 id="中文参考文档下载"><a href="#中文参考文档下载" class="headerlink" title="中文参考文档下载"></a>中文参考文档下载</h1><p><a href="https://yunzhongzhuan.com.publicdn.com/download/2764038/aIx6vZpt/ModbusTCPClient-AOIbasedcodeforControlLogixv2.04.00zh.pdf">Modbus TCP 客户端AOI中文文档</a></p>
<p><a href="https://yunzhongzhuan.com.publicdn.com/download/2764040/QDbjnDZ5/Modbus+TCP+Server+-+AOI+based+code+for+ControlLogix+v+2.04.00+zh.pdf">Modbus TCP服务端AOI中文文档</a></p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>PLC</tag>
      </tags>
  </entry>
  <entry>
    <title>AI绘画-webui使用教程</title>
    <url>/undefined/ef6f9b71.html</url>
    <content><![CDATA[<h1 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h1><h2 id="pychon-的下载及安装"><a href="#pychon-的下载及安装" class="headerlink" title="pychon 的下载及安装"></a>pychon 的下载及安装</h2><p>直接点击下方按钮下载安装</p>
<a class="btn-beautify green larger" href="https://www.python.org/ftp/python/3.11.2/python-3.11.2-amd64.exe" title="点击下载"><i class="far fa-hand-point-right"></i><span>点击下载</span></a>

<p>打开安装即可，注意勾选上安装页面的的选项</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202302281848503.png"></p>
<p>然后点击下面的选项，就安装完成了。</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202302281850492.png"></p>
<h2 id="cuda-的下载及安装"><a href="#cuda-的下载及安装" class="headerlink" title="cuda 的下载及安装"></a>cuda 的下载及安装</h2><h3 id="查看适合的-cuda-版本"><a href="#查看适合的-cuda-版本" class="headerlink" title="查看适合的 cuda 版本"></a>查看适合的 cuda 版本</h3><p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303030811620.png"></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303030811238.png"></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303030812926.png"></p>
<p>这里看到我电脑上支持的 cuda 是 11.7 的</p>
<h3 id="cuda-toolkit-下载"><a href="#cuda-toolkit-下载" class="headerlink" title="cuda toolkit 下载"></a>cuda toolkit 下载</h3><p>进入下面网页，找到适合的 cuda</p>
<a class="btn-beautify green larger" href="https://developer.nvidia.com/cuda-toolkit-archive" title="点击进入"><i class="far fa-hand-point-right"></i><span>点击进入</span></a>

<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303030815008.png"></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303030816433.png"></p>
<p>Version 是选系统的，win10 就选 10，win11 就选 11，选好后点击下载</p>
<h3 id="cuda-toolkit-安装"><a href="#cuda-toolkit-安装" class="headerlink" title="cuda toolkit 安装"></a>cuda toolkit 安装</h3><p>双击 exe 文件进行安装即可</p>
<p>一直下一步，直到安装完成。</p>
<h2 id="Git-的下载及安装"><a href="#Git-的下载及安装" class="headerlink" title="Git 的下载及安装"></a>Git 的下载及安装</h2><p>进入下面网页</p>
<a class="btn-beautify green larger" href="https://git-scm.com/download/win" title="点击进入"><i class="far fa-hand-point-right"></i><span>点击进入</span></a>

<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303030830575.png"></p>
<p>点击下载</p>
<p>下载完成后，双击 exe 文件进行安装即可</p>
<p>一直下一步，直到安装完成。</p>
<h1 id="webui-的下载及启动"><a href="#webui-的下载及启动" class="headerlink" title="webui 的下载及启动"></a>webui 的下载及启动</h1><a class="btn-beautify green larger" href="https://pan.baidu.com/s/1dj9Dglfh7th9jE-ZDvuMIA?pwd=yuqi" title="点击下载"><i class="far fa-hand-point-right"></i><span>点击下载</span></a>

<p>下载完成后，将 novelai-webui-aki-v3 解压出来</p>
<p>然后将 sd-webui 启动器文件夹里面的启动器运行依赖安装一下</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303030835622.png"></p>
<p>如果提示这个，则不用再安装</p>
<p>最后将 sd-webui 启动器压缩包里面的文件全部放进解压好的 novelai-webui-aki-v3 文件夹里面</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303030837999.png"></p>
<p>双击启动即可，第一次打开会自动下载依赖。</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303030840462.png"></p>
<p>启动器会自动生成启动参数，直接一键启动</p>
<p>然后按照提示阅读并同意用户协议，再次点击一键启动</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303030843786.png"></p>
<p>最后进入到这个自动打开的网页就大功告成了</p>
<h1 id="webui-的其他操作"><a href="#webui-的其他操作" class="headerlink" title="webui 的其他操作"></a>webui 的其他操作</h1><h2 id="添加模型"><a href="#添加模型" class="headerlink" title="添加模型"></a>添加模型</h2><p>一开始我们下载的文件里面就自带了一个模型，可以把它拖放到如图的文件夹里面，如果你还有其他的模型也可以放在这个文件夹里面进行使用</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303030839190.png"></p>
<p><a href="https://civitai.com/">https://civitai.com/</a></p>
<p>上面的网站就有很多模型，可以根据自己喜好进行下载添加</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>AI绘画</tag>
      </tags>
  </entry>
  <entry>
    <title>AList搭建</title>
    <url>/undefined/1f49e4a4.html</url>
    <content><![CDATA[<h1 id="一、项目展示"><a href="#一、项目展示" class="headerlink" title="一、项目展示"></a>一、项目展示</h1><p>GitHub 项目地址：<a href="https://github.com/Xhofe/alist">https://github.com/Xhofe/alist</a></p>
<p>Demo：<a href="https://alist.nn.ci/">https://alist.nn.ci</a></p>
<p>Alist 文档地址：<a href="https://alist-doc.nn.ci/en/">https://alist-doc.nn.ci/en/</a></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303040811308.png" alt="成品预览"></p>
<h1 id="二、搭建环境"><a href="#二、搭建环境" class="headerlink" title="二、搭建环境"></a>二、搭建环境</h1><p>服务器：阿里云香港轻量应用服务器 24 元&#x2F;月 VPS 一台（最好是选非大陆的服务器，无需备案）</p>
<p>系统：Centos7</p>
<p>域名一枚，并做好解析到服务器上</p>
<h1 id="三、搭建方式"><a href="#三、搭建方式" class="headerlink" title="三、搭建方式"></a>三、搭建方式</h1><h2 id="1、一键脚本安装（本次使用）"><a href="#1、一键脚本安装（本次使用）" class="headerlink" title="1、一键脚本安装（本次使用）"></a>1、一键脚本安装（本次使用）</h2><p>仅支持 Linux-x86_64&#x2F;aarch64 平台。</p>
<p>》》<strong>安装</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -fsSL <span class="string">&quot;https://nn.ci/alist.sh&quot;</span> | bash -s install</span><br></pre></td></tr></table></figure>

<p>注意：</p>
<p>已经安装过再次执行安装会删除之前的数据，更新请使用更新命令。</p>
<p>》》<strong>更新</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -fsSL <span class="string">&quot;https://nn.ci/alist.sh&quot;</span> | bash -s update</span><br></pre></td></tr></table></figure>

<p>》》<strong>卸载</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -fsSL <span class="string">&quot;https://nn.ci/alist.sh&quot;</span> | bash -s uninstall</span><br></pre></td></tr></table></figure>

<p>》》<strong>自定义路径</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -fsSL <span class="string">&quot;https://nn.ci/alist.sh&quot;</span> | bash -s install</span><br></pre></td></tr></table></figure>

<p>默认安装在&#x2F;opt&#x2F;alist，要自定义安装路径，添加安装路径为第二个参数，必须是绝对路径（路径以 alist 结尾时直接安装到给定路径，否则会安装在给定路径 alist 目录下），如安装到&#x2F;root：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line"></span><br><span class="line">curl -fsSL <span class="string">&quot;https://nn.ci/alist.sh&quot;</span> | bash -s install /root</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新</span></span><br><span class="line"></span><br><span class="line">curl -fsSL <span class="string">&quot;https://nn.ci/alist.sh&quot;</span> | bash -s update /root</span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载</span></span><br><span class="line"></span><br><span class="line">curl -fsSL <span class="string">&quot;https://nn.ci/alist.sh&quot;</span> | bash -s uninstall /root</span><br></pre></td></tr></table></figure>

<h2 id="2、手动搭建"><a href="#2、手动搭建" class="headerlink" title="2、手动搭建"></a>2、手动搭建</h2><p>参考文档：<a href="https://alist-doc.nn.ci/docs/install/manual">https://alist-doc.nn.ci/docs/install/manual</a></p>
<h2 id="3、Docker"><a href="#3、Docker" class="headerlink" title="3、Docker"></a>3、Docker</h2><p>参考文档：<a href="https://alist-doc.nn.ci/docs/install/docker">https://alist-doc.nn.ci/docs/install/docker</a></p>
<h1 id="四、开始搭建（以一键脚本安装为例子）"><a href="#四、开始搭建（以一键脚本安装为例子）" class="headerlink" title="四、开始搭建（以一键脚本安装为例子）"></a>四、开始搭建（以一键脚本安装为例子）</h1><h2 id="1、运行安装代码"><a href="#1、运行安装代码" class="headerlink" title="1、运行安装代码"></a>1、运行安装代码</h2><p>》》<strong>输入以下命令等待自动安装</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -fsSL <span class="string">&quot;https://nn.ci/alist.sh&quot;</span> | bash -s install</span><br></pre></td></tr></table></figure>

<p>注意：安装完成会输出默认后台密码。</p>
<h2 id="2、放行相关端口"><a href="#2、放行相关端口" class="headerlink" title="2、放行相关端口"></a>2、放行相关端口</h2><p>遇到访问不了，请在宝塔面板的防火墙和服务商的后台防火墙里打开对应端口。</p>
<h2 id="3、配置反向代理"><a href="#3、配置反向代理" class="headerlink" title="3、配置反向代理"></a>3、配置反向代理</h2><p>以宝塔为例，新建一个网站，域名使用你自己的域名，在配置文件里面注释掉 Nginx 配置文件中的这部分内容：</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$</span><br><span class="line">&#123;</span><br><span class="line">    expires      <span class="number">30</span>d;</span><br><span class="line">    error_log /dev/<span class="literal">null</span>;</span><br><span class="line">    access_log off;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location ~ .*\.(js|css)?$</span><br><span class="line">&#123;</span><br><span class="line">    expires      <span class="number">12</span>h;</span><br><span class="line">    error_log /dev/<span class="literal">null</span>;</span><br><span class="line">    access_log off;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然后再下面粘贴这段代码：</p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">    proxy_pass http:<span class="comment">//127.0.0.1:5244/;</span></span><br><span class="line">    rewrite ^/(.*)$ /$<span class="number">1</span> <span class="keyword">break</span>;</span><br><span class="line">    proxy_redirect off;</span><br><span class="line">    proxy_set_header Host $host;</span><br><span class="line">    proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">    proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">    proxy_set_header Upgrade-Insecure-Requests <span class="number">1</span>;</span><br><span class="line">    proxy_set_header X-Forwarded-Proto https;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="4、访问域名配置账号"><a href="#4、访问域名配置账号" class="headerlink" title="4、访问域名配置账号"></a>4、访问域名配置账号</h2><p>此时，输入反向代理的域名就能正常访问网站了，输入刚刚安装完成之后终端输出的密码就能正常登陆后台了。为了方便起见，建议更改一个自己能记住的密码。</p>
<h1 id="五、结束"><a href="#五、结束" class="headerlink" title="五、结束"></a>五、结束</h1><p>祝大家用得开心，有问题可以去 GitHub 提 <a href="https://github.com/Xhofe/alist/issues">Issues</a>，也可以在评论区互相交流探讨。</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>Alist</tag>
      </tags>
  </entry>
  <entry>
    <title>Butterfly主题添加一图流背景与顶部图修改</title>
    <url>/undefined/f7d3fad8.html</url>
    <content><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>本文将会详细介绍一图流背景与顶部图的修改过程。</p>
<h2 id="设置图片"><a href="#设置图片" class="headerlink" title="设置图片"></a>设置图片</h2><p>这个是 <a href="https://butterfly.js.org/">Butterfly</a> 自带的功能，修改主题的配置文件 <code>_config.butterfly.yml</code>。</p>
<p>编辑 <code>index_img</code>、<code>background</code>、<code>footer_bg</code> 选项。<br>设置网站背景，并将主页顶部图和页脚背景改为透明。<br>(需要将以下示例地址替换为自己的图片地址。)</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Image (圖片設置)</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The banner image of home page</span></span><br><span class="line"><span class="attr">index_img:</span> <span class="string">transparent</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Beautify/Effect (美化/效果)</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Website Background (設置網站背景)</span></span><br><span class="line"><span class="comment"># can set it to color or image (可設置圖片 或者 顔色)</span></span><br><span class="line"><span class="comment"># The formal of image: url(http://xxxxxx.com/xxx.jpg)</span></span><br><span class="line"><span class="attr">background:</span> <span class="string">url(https://example.com/img/background.jpg)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Footer Background</span></span><br><span class="line"><span class="attr">footer_bg:</span> <span class="string">transparent</span></span><br></pre></td></tr></table></figure>

<h2 id="引入相关样式"><a href="#引入相关样式" class="headerlink" title="引入相关样式"></a>引入相关样式</h2><p>新建一个文件，位于 <code>source/css/modify.styl</code>，并增加以下内容。<br>(此处只是举例，也可以使用自己已有的样式文件。)</p>
<figure class="highlight styl"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@import</span> <span class="string">&#x27;nib&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 顶部图</span></span><br><span class="line"><span class="selector-id">#page-header</span></span><br><span class="line">  &amp;, <span class="selector-pseudo">&amp;:before</span></span><br><span class="line">    <span class="attribute">background</span>: transparent <span class="meta">!important</span></span><br><span class="line">  &amp;<span class="selector-class">.post-bg</span>, &amp;<span class="selector-class">.not-home-page</span></span><br><span class="line">    <span class="attribute">height</span>: <span class="number">280px</span> <span class="meta">!important</span></span><br><span class="line">  <span class="selector-id">#post-info</span></span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">40px</span> <span class="meta">!important</span></span><br><span class="line">  <span class="selector-id">#page-site-info</span></span><br><span class="line">    <span class="attribute">top</span>: <span class="number">140px</span> <span class="meta">!important</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">768px</span>)</span><br><span class="line">    &amp;.not-home-page</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">200px</span> !important</span><br><span class="line">    #post-info</span><br><span class="line">      bottom: <span class="number">10px</span> !important</span><br><span class="line">    #page-site-info</span><br><span class="line">      top: <span class="number">100px</span> !important</span><br><span class="line"></span><br><span class="line">.top-img</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">250px</span></span><br><span class="line">  margin: -<span class="number">50px</span> -<span class="number">40px</span> <span class="number">50px</span></span><br><span class="line">  border-top-left-radius: inherit</span><br><span class="line">  border-top-right-radius: inherit</span><br><span class="line">  background-position: center center</span><br><span class="line">  background-size: cover</span><br><span class="line">  transition: all <span class="number">0.3s</span></span><br><span class="line"></span><br><span class="line">  @media screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">768px</span>)</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">230px</span></span><br><span class="line">    margin: -<span class="number">36px</span> -<span class="number">14px</span> <span class="number">36px</span></span><br><span class="line"></span><br><span class="line">  [data-theme=&#x27;dark&#x27;] &amp;</span><br><span class="line">    filter: brightness(<span class="number">0.8</span>)</span><br><span class="line"></span><br><span class="line">// 页脚</span><br><span class="line">#footer:before</span><br><span class="line">  background-color: alpha(#FFF, .<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">  [data-theme=&#x27;dark&#x27;] &amp;</span><br><span class="line">    background-color: alpha(#<span class="number">000</span>, .<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">#footer-wrap, #footer-wrap a</span><br><span class="line">  <span class="attribute">color</span>: #<span class="number">111</span></span><br><span class="line">  transition: unset</span><br><span class="line"></span><br><span class="line">  [data-theme=&#x27;dark&#x27;] &amp;</span><br><span class="line">    <span class="attribute">color</span>: var(--light-grey)</span><br></pre></td></tr></table></figure>

<p>在主题配置文件 <code>_config.butterfly.yml</code> 的 <code>inject.head</code> 引入样式。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># other (其他)</span></span><br><span class="line"><span class="comment"># --------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Inject</span></span><br><span class="line"><span class="comment"># Insert the code to head (before &#x27;&lt;/head&gt;&#x27; tag) and the bottom (before &#x27;&lt;/body&gt;&#x27; tag)</span></span><br><span class="line"><span class="comment"># 插入代码到头部 &lt;/head&gt; 之前 和 底部 &lt;/body&gt; 之前</span></span><br><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/modify.css&quot;&gt;</span></span><br></pre></td></tr></table></figure>

<p><code>modify.styl</code> 会被 Hexo 渲染成 <code>modify.css</code> 文件，所以此处应为 <code>modify.css</code>。</p>
<h2 id="增加插件脚本"><a href="#增加插件脚本" class="headerlink" title="增加插件脚本"></a>增加插件脚本</h2><p>因为使用了 <code>cheerio</code> 来解析 HTML，所以需要先安装此依赖。</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">npm install cheerio</span><br></pre></td></tr></table></figure>

<p>新建一个文件，位于 <code>scripts/modify.js</code>，并增加以下内容。<br>(此处只是举例，也可以使用自己已有的插件脚本文件。)</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="meta">&quot;use strict&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> cheerio = <span class="built_in">require</span>(<span class="string">&quot;cheerio&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在页面插入新顶部图</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> &#123;<span class="type">cheerio.Root</span>&#125; $ Root</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">insertTopImg</span>(<span class="params">$</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> header = $(<span class="string">&quot;#page-header&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> (header.<span class="property">length</span> === <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">  <span class="keyword">let</span> background = header.<span class="title function_">css</span>(<span class="string">&quot;background-image&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> (!background) <span class="keyword">return</span>;</span><br><span class="line">  $(<span class="string">&quot;#post, #page, #archive, #tag, #category&quot;</span>).<span class="title function_">prepend</span>(</span><br><span class="line">    <span class="string">`&lt;div class=&quot;top-img&quot; style=&quot;background-image: <span class="subst">$&#123;background&#125;</span>;&quot;&gt;&lt;/div&gt;`</span></span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">hexo.<span class="property">extend</span>.<span class="property">filter</span>.<span class="title function_">register</span>(<span class="string">&quot;after_render:html&quot;</span>, <span class="keyword">function</span> (<span class="params">str, data</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> $ = cheerio.<span class="title function_">load</span>(str, &#123;</span><br><span class="line">    <span class="attr">decodeEntities</span>: <span class="literal">false</span>,</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="title function_">insertTopImg</span>($);</span><br><span class="line">  <span class="keyword">return</span> $.<span class="title function_">html</span>();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h2 id="大功告成"><a href="#大功告成" class="headerlink" title="大功告成"></a>大功告成</h2><p>👏 恭喜你完成了修改，可以使用以下命令进行预览。</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">hexo cl</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>其实在早些时候，有篇最终效果差不多的修改教程。<br><a href="https://www.nesxc.com/">@Nesxc</a> 大佬写的<a href="https://www.nesxc.com/60/">butterfly 文章页美化教程</a>。<br>是通过直接修改主题源文件的方式实现的。<br>而本文的修改方式是使用了 Hexo 的<a href="https://hexo.io/zh-cn/docs/plugins">插件</a>系统实现的。</p>
<p>插件版的优点是更新主题时，只要结构变化不大，便无需任何操作即可继续使用。并且在管理上比较方便。<br>源文件版的优点是效率会略高一点，毕竟是直接修改的主题源文件。</p>
<p>如果像我一样，不想每次升级主题都可能要重新改一遍，或是为了方便管理，则可以选择插件版。<br>如果是本来就修改了源文件，也不介意再多修改这一个，则可以选择源文件版。</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>Butterfly</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Butterfly主题添加本地搜索功能</title>
    <url>/undefined/f2a576c2.html</url>
    <content><![CDATA[<p>安装插件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure>

<p>修改_config.yml文件，添加以下内容</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 添加本地搜索</span></span><br><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">content:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br></pre></td></tr></table></figure>

<p>修改_config.butterfly.yml文件，添加以下内容</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Local search</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Preload the search data when the page loads.</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># Unescape html strings to the readable one.</span></span><br><span class="line">  <span class="attr">unescape:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">CDN:</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>Butterfly</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Clash Verge规则配置</title>
    <url>/undefined/97aa67fb.html</url>
    <content><![CDATA[<h1 id="下载Clash-Meta内核客户端"><a href="#下载Clash-Meta内核客户端" class="headerlink" title="下载Clash.Meta内核客户端"></a>下载Clash.Meta内核客户端</h1><ul>
<li><a href="https://github.com/zzzgydi/clash-verge">Clash Verge 下载地址</a></li>
</ul>
<h1 id="本地配置（推荐）"><a href="#本地配置（推荐）" class="headerlink" title="本地配置（推荐）"></a>本地配置（推荐）</h1><blockquote>
<p>以处<code>Clash Verge</code>为例</p>
</blockquote>
<h4 id="0-设置内核为-Clash-Meta"><a href="#0-设置内核为-Clash-Meta" class="headerlink" title="0.设置内核为 Clash.Meta"></a>0.设置内核为 <code>Clash.Meta</code></h4><p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312120915849.png" alt="0"></p>
<h2 id="下载配置文件ClashVerge-yaml文件到本地"><a href="#下载配置文件ClashVerge-yaml文件到本地" class="headerlink" title="下载配置文件ClashVerge.yaml文件到本地"></a>下载配置文件<code>ClashVerge.yaml</code>文件到本地</h2><ul>
<li>ClashVerge.yaml</li>
</ul>
<ul>
<li><input checked="" disabled="" type="checkbox"> 地区分流（香港、美国、日本、台湾、新加坡）</li>
<li><input checked="" disabled="" type="checkbox"> 苹果、谷歌、微软、电报、推特分流</li>
<li><input checked="" disabled="" type="checkbox"> 流媒体（不支持单独分流）</li>
<li><input checked="" disabled="" type="checkbox"> 自动选择最低延迟</li>
<li><input disabled="" type="checkbox"> 负载均衡</li>
<li><input checked="" disabled="" type="checkbox"> 故障转移</li>
<li><input checked="" disabled="" type="checkbox"> 广告屏蔽</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://raw.githubusercontent.com/Repcz/Tool/X/Clash/Meta/ClashVerge.yaml</span><br></pre></td></tr></table></figure>

<h2 id="修改配置-proxy-providers-中的机场订阅地址"><a href="#修改配置-proxy-providers-中的机场订阅地址" class="headerlink" title="修改配置 proxy-providers 中的机场订阅地址"></a>修改配置 <code>proxy-providers</code> 中的机场订阅地址</h2><ul>
<li>请自行将 <code>proxy-providers</code> 中的 <code>机场订阅</code> 替换为机场订阅地址</li>
</ul>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312120915850.png" alt="1"></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">proxy-providers:</span></span><br><span class="line">  <span class="attr">Subscribe:</span> &#123;<span class="string">&lt;&lt;:</span> <span class="string">*p</span>, <span class="attr">path:</span> <span class="string">./all.yaml</span>, <span class="attr">url:</span> <span class="string">机场订阅</span>&#125;</span><br><span class="line">    <span class="comment"># Meta支持机场通用订阅</span></span><br></pre></td></tr></table></figure>


<h2 id="Clash-Verge-中导入-配置"><a href="#Clash-Verge-中导入-配置" class="headerlink" title="Clash Verge 中导入 配置"></a>Clash Verge 中导入 <strong>配置</strong></h2><ul>
<li>打开Clash Verge，点击 <strong>配置</strong>，点击右上角<strong>新建</strong></li>
<li>类型选择<strong>Local</strong>，点击下方 <strong>选择文件</strong>，选择修改好的文件</li>
<li>选择导入的配置，右键-启用</li>
<li>点击 <strong>代理</strong> ，设置分流</li>
</ul>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312120915851.png" alt="5"></p>
<h2 id="策略组修改为手动选择节点"><a href="#策略组修改为手动选择节点" class="headerlink" title="策略组修改为手动选择节点"></a>策略组修改为手动选择节点</h2><blockquote>
<p>默认为自动选择延迟最低节点，<strong>按需</strong> 修改为手动选择</p>
</blockquote>
<ul>
<li>在自定义策略下的分流策略组中选择需要的地区节点，此处以 <strong>国外网站</strong> 举例，选择 <strong>香港节点</strong></li>
<li>下拉到下方的 <strong>香港节点</strong> 策略组，此时该策略组以 <code>url-test</code> 运行，即按最低延迟选择节点</li>
<li>如果要修改为手动选择节点，则需要编辑配置文件，在 <strong>配置</strong> ，右键需要修改的配置文件，点击 <strong>编辑</strong></li>
<li>找到<code> - &#123;name: 🇭🇰 香港节点, &lt;&lt;: *auto, filter: ....&quot;&#125;</code>，将 <code>*auto</code> 修改为 <code>*select</code></li>
<li>在 <strong>香港节点</strong> 策略组中选择需要的节点，则 <strong>国外网站</strong> 策略组走 <strong>香港节点</strong> 中选择的节点</li>
</ul>
<p>eg:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">...</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> &#123;<span class="attr">name:</span> <span class="string">🇭🇰</span> <span class="string">香港节点</span>, <span class="string">&lt;&lt;:</span> <span class="string">*auto</span>, <span class="attr">filter:</span> <span class="string">&quot;^(?=.*((?i)🇭🇰|香港|(\b(HK|Hong)\b)))(?!.*((?i)回国|校园|游戏|(\b(GAME)\b))).*$&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="string">👇</span></span><br><span class="line"></span><br><span class="line">  <span class="bullet">-</span> &#123;<span class="attr">name:</span> <span class="string">🇭🇰</span> <span class="string">香港节点</span>, <span class="string">&lt;&lt;:</span> <span class="string">*select</span>, <span class="attr">filter:</span> <span class="string">&quot;^(?=.*((?i)🇭🇰|香港|(\b(HK|Hong)\b)))(?!.*((?i)回国|校园|游戏|(\b(GAME)\b))).*$&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="string">...</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="订阅转换（懒人方法）"><a href="#订阅转换（懒人方法）" class="headerlink" title="订阅转换（懒人方法）"></a>订阅转换（懒人方法）</h1><h2 id="在线订阅转换"><a href="#在线订阅转换" class="headerlink" title="在线订阅转换"></a>在线订阅转换</h2><p>在线订阅转换可能出现订阅泄露</p>
<h2 id="打开ACL4SSR"><a href="#打开ACL4SSR" class="headerlink" title="打开ACL4SSR"></a>打开<a href="https://acl4ssr-sub.github.io/">ACL4SSR</a></h2><h2 id="填入-机场订阅-和-远程配置"><a href="#填入-机场订阅-和-远程配置" class="headerlink" title="填入 机场订阅 和 远程配置"></a>填入 <strong>机场订阅</strong> 和 <strong>远程配置</strong></h2><p><strong><em>自用 多流媒体分组 自动测速 配置</em></strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://raw.githubusercontent.com/Repcz/Tool/X/Clash/Meta/Online_Full_Auto.ini</span><br></pre></td></tr></table></figure>
<h2 id="选择后端地址并生成订阅"><a href="#选择后端地址并生成订阅" class="headerlink" title="选择后端地址并生成订阅"></a>选择后端地址并生成订阅</h2><ul>
<li>强烈建议使用自建后端，自建后端订阅转换可以有效防止订阅泄露以及规则下载不全等问题，具体方法见<a href="https://github.com/Repcz/Tool/tree/X/subconverter">自建subconverter订阅转换</a></li>
</ul>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312120915852.png" alt="4"></p>
<h2 id="本地后端订阅转换（推荐）"><a href="#本地后端订阅转换（推荐）" class="headerlink" title="本地后端订阅转换（推荐）"></a>本地后端订阅转换（推荐）</h2><p>详细使用方法见<a href="https://github.com/Repcz/Tool/tree/X/subconverter">自建subconverter订阅转换</a></p>
<h2 id="导入Clash-Verge"><a href="#导入Clash-Verge" class="headerlink" title="导入Clash Verge"></a>导入Clash Verge</h2><ul>
<li>打开Clash Verge，点击 <strong>配置</strong>，导入<strong>订阅转换</strong>后的链接</li>
<li>点击 <strong>代理</strong> ，设置分流</li>
</ul>
<h1 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h1><p><a href="https://github.com/Repcz/Tool">https://github.com/Repcz/Tool</a></p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>科学上网</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML总复习</title>
    <url>/undefined/e79fa3f4.html</url>
    <content><![CDATA[<h1 id="导读"><a href="#导读" class="headerlink" title="导读"></a>导读</h1><h2 id="网页"><a href="#网页" class="headerlink" title="网页"></a>网页</h2><p>网站是指在因特网中根据一定的规则，使用<strong>HTML</strong>等制作的用于展示特定内容相关的网页集合</p>
<p>网页是网站中的一页，通常就是 HTML 格式的文件</p>
<h2 id="什么是-HTML"><a href="#什么是-HTML" class="headerlink" title="什么是 HTML"></a>什么是 HTML</h2><p>一种描述网页的超文本语言</p>
<p>它并非编程语言，是一套标记标签</p>
<p>而所谓超文本有两种含义</p>
<ol>
<li><p><strong>超越了文本限制：</strong> 可以加入图片、声音、动漫等内容</p>
</li>
<li><p><strong>含超级链接：</strong> 可以从一个文件跳转到另一个文件，也就是网站中网页的替换呈现</p>
</li>
</ol>
<h2 id="🌟Web-标准"><a href="#🌟Web-标准" class="headerlink" title="🌟Web 标准"></a>🌟Web 标准</h2><p>（<strong>面试考点</strong>）</p>
<p>由 W3C 组织和其他标准化组织制定的一系列标准<a href="https://so.csdn.net/so/search?q=%E9%9B%86%E5%90%88&spm=1001.2101.3001.7020">集合</a><br>制定标准就像是制定规则，增大了设备、浏览器、搜索引擎的等兼容性</p>
<table>
<thead>
<tr>
<th>标准</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>结构</td>
<td>结构用于对网页元素进行整理和分类</td>
</tr>
<tr>
<td>表现</td>
<td>设置网页元素的版式、颜色、大小等外观样式（CSS）</td>
</tr>
<tr>
<td>行为</td>
<td>网页模型的定义以及交互的编写（JavaScript）</td>
</tr>
</tbody></table>
<p>以上三类规定分离，即 html 文件写结构、css 文件写表现、JavaScript 文件写行为</p>
<h1 id="1-基本标签"><a href="#1-基本标签" class="headerlink" title="1.基本标签"></a>1.基本标签</h1><h2 id="1-1-HTML-标签"><a href="#1-1-HTML-标签" class="headerlink" title="1.1 HTML 标签"></a>1.1 HTML 标签</h2><p>称之为根标签，是最大的标签，文件从&lt; html &gt;开始到&lt; &#x2F;html &gt;结束</p>
<h2 id="1-2-头部标签-head"><a href="#1-2-头部标签-head" class="headerlink" title="1.2 头部标签&lt; head &gt;"></a>1.2 头部标签&lt; head &gt;</h2><p>定义一些往往不可见的内容</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span>内部标签|    说明</span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>        定义网页标题</span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span>&gt;</span>         定义网页基本内容（搜索引擎的关键字）</span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-xml">        定义CSS样式</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">link</span>&gt;</span>         链接外部CSS文件或脚本文件</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-handlebars"><span class="language-xml">       定义脚本语言</span></span></span></span><br><span class="line"><span class="language-xml"><span class="language-handlebars"><span class="language-xml"><span class="tag">&lt;<span class="name">base</span>&gt;</span>         定义页面所有链接的基础定位（少用）</span></span></span></span><br></pre></td></tr></table></figure>

<p>前期除 title 标签外，其他只需认识就行</p>
<h2 id="1-3-身体标签-body"><a href="#1-3-身体标签-body" class="headerlink" title="1.3 身体标签&lt; body &gt;"></a>1.3 身体标签&lt; body &gt;</h2><p>定义的就是网页展示出来的内容</p>
<h2 id="1-4-类型声明标签"><a href="#1-4-类型声明标签" class="headerlink" title="1.4 类型声明标签"></a>1.4 类型声明标签</h2><p>&lt; !DOCTYPE html &gt;<br>告诉浏览器采取 HTML5 版本<br>开头声明</p>
<h2 id="1-5-部分标签内部属性"><a href="#1-5-部分标签内部属性" class="headerlink" title="1.5 部分标签内部属性"></a>1.5 部分标签内部属性</h2><p><code>&lt;html lang= “en” &gt;</code> 本页面采用英文显示</p>
<p>en 是英文显示、zh-CN 是中文显示</p>
<p><code>&lt;meta charset= “UTF-8” /&gt;</code> 采用 UTF-8 来保存文字，不写会出现乱码的情况</p>
<p>charset 是字符集的意思，而 UTF-8 基本包含所有的字符</p>
<h1 id="2-常用标签"><a href="#2-常用标签" class="headerlink" title="2.常用标签"></a>2.常用标签</h1><h2 id="2-1-标题标签"><a href="#2-1-标题标签" class="headerlink" title="2.1 标题标签"></a>2.1 标题标签</h2><p>双标签从<code>&lt;h1&gt;到&lt;h6&gt;</code>重要性以此递减<br>表达格式：<code>&lt;h1&gt; 一级标签 &lt;/h1&gt;</code><br>注意： 一个标题独占一行且文字会变粗变大</p>
<h2 id="2-2-段落与换行标签"><a href="#2-2-段落与换行标签" class="headerlink" title="2.2 段落与换行标签"></a>2.2 段落与换行标签</h2><p>段落标签：<br><code>&lt;p&gt; 某段落 &lt;/p&gt;</code><br>段落文本会根据浏览器窗口的大小自动换行<br>段落之间存在空行间隙<br>换行标签：<br><code>&lt;br /&gt;</code><br>强制换行<br>与段落不同，换行不会出现间距<br>有时会看到<code>&lt;hr/&gt;</code>标签，这是显示水平线的标签</p>
<h2 id="2-3-文本格式化标签"><a href="#2-3-文本格式化标签" class="headerlink" title="2.3 文本格式化标签"></a>2.3 文本格式化标签</h2><p>加粗：<br><code>&lt;strong&gt; 加粗文字 &lt;/strong&gt;</code><br>strong 也可用 b 替代</p>
<p>倾斜：<br><code>&lt;em&gt; 倾斜文字 &lt;/em&gt;</code><br>em 也可用 i 替代</p>
<p>删除线：<br><code>&lt;del&gt; 删除线文字 &lt;/del&gt;</code><br>del 也可用 s 替代</p>
<p>下划线：<br><code>&lt;ins&gt; 下划线文字 &lt;ins&gt;</code><br>ins 也可以 u 替代</p>
<p>上标：<br><code>&lt;sup&gt; 上标文字&lt;/sup&gt;</code></p>
<p>下标：<br><code>&lt;sub&gt; 下标文字 &lt;/sub&gt;</code></p>
<h2 id="2-4-“盒子”标签"><a href="#2-4-“盒子”标签" class="headerlink" title="2.4 “盒子”标签"></a>2.4 “盒子”标签</h2><p><code>&lt;div&gt;</code>标签<br>division，表示分割分区，一行只能放一个大盒子<code>&lt;div&gt;</code><br><code>&lt;div&gt; &lt;/div&gt;</code></p>
<p><code>&lt;span&gt;</code>标签<br>span，表示跨度、跨距，一行可以放多个小盒子<code>&lt;span&gt;</code><br><code>&lt;span&gt; &lt;/span&gt;</code></p>
<h2 id="2-5-图像标签和路径"><a href="#2-5-图像标签和路径" class="headerlink" title="2.5 图像标签和路径"></a>2.5 图像标签和路径</h2><h3 id="2-5-1-图像标签"><a href="#2-5-1-图像标签" class="headerlink" title="2.5.1 图像标签"></a>2.5.1 图像标签</h3><p><code>&lt;img src=&quot;图像URL&quot; /&gt;</code><br><code>&lt;img&gt;</code>标签用于定义 HTML 页面中的图像<br>src 是其里面的 必须属性<br>指定图像文件的路径和文件名</p>
<p>img 标签的其他属性：</p>
<table>
<thead>
<tr>
<th>属性</th>
<th>属性值（输入类型）</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>alt</td>
<td>文本</td>
<td>替换文本，当文本不能显示时，在其后面显示的文字</td>
</tr>
<tr>
<td>title</td>
<td>文本</td>
<td>提示文本，鼠标放在图像上显示的文字</td>
</tr>
<tr>
<td>width</td>
<td>像素</td>
<td>图像宽度</td>
</tr>
<tr>
<td>height</td>
<td>像素</td>
<td>图像高度</td>
</tr>
<tr>
<td>border</td>
<td>像素</td>
<td>图像边框粗细</td>
</tr>
</tbody></table>
<p>属性之间不分先后、以空格隔开</p>
<h3 id="2-5-2-路径"><a href="#2-5-2-路径" class="headerlink" title="2.5.2 路径"></a>2.5.2 路径</h3><p>相对路径<br>以引用文件所在位置为参考基础<br>如某一图片名 nb.gif</p>
<table>
<thead>
<tr>
<th>分类</th>
<th>符号</th>
<th>表达</th>
</tr>
</thead>
<tbody><tr>
<td>同一级</td>
<td></td>
<td><code>&lt;img src=“nb.gif” /&gt;</code></td>
</tr>
<tr>
<td>下一级</td>
<td>&#x2F;</td>
<td><code>&lt;img src =“images/nb.gif” /&gt;</code></td>
</tr>
<tr>
<td>上一级</td>
<td>…&#x2F;</td>
<td><code>&lt;img src=“…/nb.gif” /&gt;</code></td>
</tr>
</tbody></table>
<p>绝对路径<br>指目录下的绝对位置，直接到达目标位置，通常从盘符开始的路径<br>例如：<br><code>D:\web\img\baidu.gif</code><br>或完整的网络地址<br><code>http://www.baidu.com</code><br>前者实际开发中基本不用，不能在每个电脑兼容<br>后者由于网络地址具有唯一性，可以实现兼容情况</p>
<h2 id="2-6-超链接标签"><a href="#2-6-超链接标签" class="headerlink" title="2.6 超链接标签"></a>2.6 超链接标签</h2><h3 id="2-6-1-标签"><a href="#2-6-1-标签" class="headerlink" title="2.6.1 &lt;a&gt;标签"></a>2.6.1<code> &lt;a&gt;</code>标签</h3><p><code>&lt;a href=&quot;跳转目标&quot; target=&quot;目标窗口的弹出方式&quot;&gt; 文本或图像 &lt;/a&gt;</code><br>anchor 表示为锚<br>herf： 制定链接的 URL 地址（必须属性）</p>
<p>target： 打开链接页面方式<br>（1）_self 为默认值，在当前窗口打开<br>（2）_blank ，在新窗口打开</p>
<h3 id="2-6-2-链接分类"><a href="#2-6-2-链接分类" class="headerlink" title="2.6.2 链接分类"></a>2.6.2 链接分类</h3><p>1.外部链接，如网络链接 2.内部链接：网站内页面之间的相互链接，如<br><code>&lt;a href=&quot;index.html&quot;&gt;首页 &lt;/a&gt;</code> 3.空链接：当还没有确定的链接目标，可以先指向空<br><code>&lt;a href=&quot;#&quot; 目录 &lt;/a&gt;</code> 4.下载链接：如指向 rar 压缩包，便会下载该包 5.网页元素链接，在网页中，文本、图像、表格等等都可添加超链接，如给图片添加超链接：<br><code>&lt;a href =&quot;https//www.baidu.com &gt; &lt;img src=&quot;index.html&quot; /&gt;&lt;/a&gt;</code> 6.锚点链接：点击链接跳转到本页面的某个位置<br>需两步：<br>（1）在链接标签的 href 属性中，设置为”#名字”的形式，如<code>&lt;a href=&quot;#power&quot; 力量&lt;/a&gt;</code><br>（2）在目标位置标签，添加 id 属性&#x3D; 名字，如：<br><code>&lt;h2 id= &quot;power&quot; &gt;</code><br>此时点击文本中的力量，便可跳转到目的位置</p>
<h2 id="2-7-音频标签"><a href="#2-7-音频标签" class="headerlink" title="2.7 音频标签"></a>2.7 音频标签</h2><p><code>&lt;audio&gt;&lt;/audio&gt;</code>标签，插入音频链接<br>属性：</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303040840110.png" alt="a26ecd107a6b42beb03f83607ad81a47"></p>
<p><strong>语法：</strong></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&lt;<span class="selector-tag">audio</span> <span class="attribute">src</span>=&quot;音频地址&quot; controls autoplay loop&gt;</span><br><span class="line">&lt;/<span class="selector-tag">audio</span>&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>注意：<br>音频链接目前支持三种格式：MP3、WAV、Ogg</p>
<h2 id="2-8-视频链接"><a href="#2-8-视频链接" class="headerlink" title="2.8 视频链接"></a>2.8 视频链接</h2><p><code>&lt;video&gt;&lt;/video&gt;</code>标签，插入视频链接</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303040840963.png" alt="b7177e5a67274104b67b9a6858748980"></p>
<p><strong>语法：</strong></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&lt;<span class="selector-tag">video</span> <span class="attribute">src</span>=&quot;视频地址&quot; controls autoplay loop</span><br><span class="line">&lt;/<span class="selector-tag">video</span>&gt;</span><br></pre></td></tr></table></figure>

<p>注意：<br>视频静音下，谷歌浏览器才给自动播放</p>
<h2 id="2-9-有语义的结构标签"><a href="#2-9-有语义的结构标签" class="headerlink" title="2.9 有语义的结构标签"></a>2.9 有语义的结构标签</h2><p>H5 新版本推出的语义化标签，主要用于手机端网页的制作</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303040840734.png" alt="9c9f1473d7494d25b250dbc822f473d7"></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303040840001.png" alt="1ff5c6115d68409a9b8966abeee9ee56"></p>
<h1 id="3-注释和特殊字符"><a href="#3-注释和特殊字符" class="headerlink" title="3.注释和特殊字符"></a>3.注释和特殊字符</h1><h2 id="3-1-注释"><a href="#3-1-注释" class="headerlink" title="3.1 注释"></a>3.1 注释</h2><p><code>&lt;! -- 注释语句 --&gt;</code>,一些编辑器，可以直接<code>ctrl</code> <code>+</code> <code>/</code></p>
<h2 id="3-2-特殊字符表"><a href="#3-2-特殊字符表" class="headerlink" title="3.2 特殊字符表"></a>3.2 特殊字符表</h2><p>收藏一下，忘了可以直接在目录点过来查哦 🤗🤗🤗</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303040840096.png" alt="image-20220608125023224"></p>
<p>常用的主要是空格、大于号和小于号,其他的查个几次就记住了 🤪</p>
<h1 id="4-表格"><a href="#4-表格" class="headerlink" title="4.表格"></a>4.表格</h1><h2 id="4-1-基本语法"><a href="#4-1-基本语法" class="headerlink" title="4.1 基本语法"></a>4.1 基本语法</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  …</span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>以下进行解释：</p>
<p><code>&lt;table&gt;&lt;/table&gt;</code>是用于定义表格的标签，需要将整个表格包含<br><code>&lt;tr&gt;&lt;/tr&gt;</code>定义行，<code>&lt;td&gt;&lt;/td&gt;</code>定义单元格，因此一个表格中有几列，则 tr 标签嵌套几个 td 标签<br>td 标签内放内容<br>还有一个表头标签（table head 的缩写），是标题加成效果，因此一般是将第一行的包含，突出重要性</p>
<h2 id="4-2-表格属性"><a href="#4-2-表格属性" class="headerlink" title="4.2 表格属性"></a>4.2 表格属性</h2><p>ps:<br>这部分属性实际开发并不常用，后面通过 CSS 设置</p>
<p><strong>学习目的</strong>主要是这里用到的单词后面 CSS 也会用到<br>同时直观感受表格的外观形态</p>
<table>
<thead>
<tr>
<th><strong>属性名</strong></th>
<th><strong>属性值</strong></th>
<th><strong>描述</strong></th>
</tr>
</thead>
<tbody><tr>
<td>align</td>
<td>left\center\right</td>
<td>表格的对齐方式</td>
</tr>
<tr>
<td>border</td>
<td>1 或“”</td>
<td>是否拥有边框，默认为“”“，表示无边框</td>
</tr>
<tr>
<td>cellpadding</td>
<td>像素值</td>
<td>单元边沿与其内容之间的空白，默认为 1 像素</td>
</tr>
<tr>
<td>cellspacing</td>
<td>像素值</td>
<td>单元格之间的空白，默认 2 像素</td>
</tr>
<tr>
<td>width</td>
<td>像素值或百分比</td>
<td>规定表格的宽度</td>
</tr>
</tbody></table>
<h2 id="4-3-表格结构标签"><a href="#4-3-表格结构标签" class="headerlink" title="4.3 表格结构标签"></a>4.3 表格结构标签</h2><p><code>&lt;thead&gt;</code>标签，表示表格的头部，包含第一行<br><code>&lt;tbody&gt;</code>标签，表示表格的主体，包含第二行及以下的<br><code>&lt;caption&gt;</code>标签，表示表格的标题</p>
<p>以上三个是使表格结构更加清晰的工具，可以不用</p>
<h2 id="4-4-合并单元格"><a href="#4-4-合并单元格" class="headerlink" title="4.4 合并单元格"></a>4.4 合并单元格</h2><h3 id="4-4-1-跨行合并"><a href="#4-4-1-跨行合并" class="headerlink" title="4.4.1 跨行合并"></a>4.4.1 跨行合并</h3><p>在最上面单元格的标签中加入——<code>rowspan=&quot;单元格合并个数&quot;</code>，再将下面被合并的单元格<code>&lt;td&gt;</code>标签删去</p>
<h3 id="4-4-2-跨列合并"><a href="#4-4-2-跨列合并" class="headerlink" title="4.4.2 跨列合并"></a>4.4.2 跨列合并</h3><p>在最左边的单元格的标签中加入——<code>colspan=&quot;单元格合并个数&quot;</code>，再将右边被合并的单元格<code>&lt;td&gt;</code>标签删去</p>
<h1 id="5-列表标签"><a href="#5-列表标签" class="headerlink" title="5.列表标签"></a>5.列表标签</h1><h2 id="5-1-无序列表"><a href="#5-1-无序列表" class="headerlink" title="5.1 无序列表"></a>5.1 无序列表</h2><h3 id="5-1-1-语法"><a href="#5-1-1-语法" class="headerlink" title="5.1.1 语法"></a>5.1.1 语法</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&lt;<span class="selector-tag">ul</span>&gt;</span><br><span class="line">   &lt;<span class="selector-tag">li</span>&gt;列表项<span class="number">1</span>&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">   &lt;<span class="selector-tag">li</span>&gt;列表项<span class="number">2</span>&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">   &lt;<span class="selector-tag">li</span>&gt;列表项<span class="number">3</span>&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">ul</span>&gt;</span><br></pre></td></tr></table></figure>

<h3 id="5-1-2-type-属性"><a href="#5-1-2-type-属性" class="headerlink" title="5.1.2 type 属性"></a>5.1.2 type 属性</h3><p><code>&lt;ul&gt;</code>标签中只能嵌套<code>&lt;li&gt;</code><br>属性</p>
<table>
<thead>
<tr>
<th>type 属性值</th>
<th>列表项的序号类型</th>
</tr>
</thead>
<tbody><tr>
<td>disc</td>
<td>默认值，实心圆</td>
</tr>
<tr>
<td>circle</td>
<td>空心圆</td>
</tr>
<tr>
<td>square</td>
<td>实心正方形</td>
</tr>
</tbody></table>
<h2 id="5-2-有序列表"><a href="#5-2-有序列表" class="headerlink" title="5.2 有序列表"></a>5.2 有序列表</h2><h3 id="5-2-1-语法"><a href="#5-2-1-语法" class="headerlink" title="5.2.1 语法"></a>5.2.1 语法</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&lt;<span class="selector-tag">ol</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">li</span>&gt;列表项<span class="number">1</span>&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">li</span>&gt;列表项<span class="number">2</span>&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">li</span>&gt;列表项<span class="number">3</span>&lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">ol</span>&gt;</span><br><span class="line"><span class="number">12345</span></span><br></pre></td></tr></table></figure>

<p><code>&lt;ol&gt;</code>中只可嵌套<code>&lt;li&gt;</code></p>
<h3 id="5-2-2-type-属性"><a href="#5-2-2-type-属性" class="headerlink" title="5.2.2 type 属性"></a>5.2.2 type 属性</h3><table>
<thead>
<tr>
<th>type 属性值</th>
<th>列表项的序号类型</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>数字</td>
</tr>
<tr>
<td>a</td>
<td>a,b,c…</td>
</tr>
<tr>
<td>A</td>
<td>A,B,C…</td>
</tr>
<tr>
<td>i</td>
<td>小写罗马数字 i,ii,iii…</td>
</tr>
<tr>
<td>I</td>
<td>大写罗马数字 I,II,III…</td>
</tr>
</tbody></table>
<p>学习 CSS 后，列表列表项符号由 list-style-type 定义，到时候会摒弃 type 属性</p>
<h2 id="5-3-定义列表"><a href="#5-3-定义列表" class="headerlink" title="5.3 定义列表"></a>5.3 定义列表</h2><h3 id="5-3-1-语法"><a href="#5-3-1-语法" class="headerlink" title="5.3.1 语法"></a>5.3.1 语法</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">&lt;<span class="selector-tag">dl</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">dt</span>&gt; 定义名词 &lt;/<span class="selector-tag">dt</span>&gt;</span><br><span class="line">    &lt;<span class="selector-tag">dd</span>&gt; 定义描述 &lt;/<span class="selector-tag">dd</span>&gt;</span><br><span class="line">    ...</span><br><span class="line">&lt;/<span class="selector-tag">dl</span>&gt;</span><br></pre></td></tr></table></figure>

<p>效果呈现如下：</p>
<p><code>通常是一个&lt;dt&gt;标签对应多个&lt;dd&gt;标签</code></p>
<h1 id="6-表单标签"><a href="#6-表单标签" class="headerlink" title="6.表单标签"></a>6.表单标签</h1><p>使用表单——收集用户信息</p>
<h2 id="6-1-组成"><a href="#6-1-组成" class="headerlink" title="6.1 组成"></a>6.1 组成</h2><p>表单&#x3D;<code>表单域</code>+<code>表单控件（元素）</code>+<code>提示信息</code></p>
<h2 id="6-2-表单域"><a href="#6-2-表单域" class="headerlink" title="6.2 表单域"></a>6.2 表单域</h2><p>包含表单元素的区域</p>
<p><code>&lt;form&gt;</code>标签——定义表单域<br><code>&lt;form&gt;</code>会把其范围内的表单元素提交给服务器</p>
<p>常用属性：</p>
<table>
<thead>
<tr>
<th>属性</th>
<th>属性值</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>action</td>
<td>url 地址</td>
<td>用于指定接收并处理表单数据的服务器程序的 url 地址</td>
</tr>
<tr>
<td>method</td>
<td>get&#x2F;post</td>
<td>设置表单的提交方式</td>
</tr>
<tr>
<td>name</td>
<td>名称</td>
<td>用于指定表单的名称，以区别同一个页面的多个表单域</td>
</tr>
</tbody></table>
<h2 id="6-3-表单控件（表单元素）"><a href="#6-3-表单控件（表单元素）" class="headerlink" title="6.3 表单控件（表单元素）"></a>6.3 表单控件（表单元素）</h2><h3 id="6-3-1-表单元素"><a href="#6-3-1-表单元素" class="headerlink" title="6.3.1 &lt;input&gt;表单元素"></a>6.3.1 <code>&lt;input&gt;</code>表单元素</h3><ol>
<li><p>input 是输入的意思，因此在表单元素中，<code>&lt;input&gt;</code>标签用于收集用户信息</p>
</li>
<li><p>单标签</p>
</li>
<li><p>属性：type 属性（输入字段的形式）<br><code>&lt;input type=&quot;属性值&quot; /&gt;</code></p>
</li>
</ol>
<table>
<thead>
<tr>
<th><strong>属性值</strong></th>
<th><strong>描述</strong></th>
</tr>
</thead>
<tbody><tr>
<td>button</td>
<td>定义可点击按钮（多数情况下通过<code>JavaScript启动脚本</code>）</td>
</tr>
<tr>
<td>checkbox</td>
<td>定义复选框</td>
</tr>
<tr>
<td>file</td>
<td>定义输入字段和“浏览”按钮，，供文件上传</td>
</tr>
<tr>
<td>hidden</td>
<td>定义隐藏的输入字段</td>
</tr>
<tr>
<td>image</td>
<td>定义图像形式的提交按钮</td>
</tr>
<tr>
<td>password</td>
<td>定义密码字段，该字段中的字符被掩码</td>
</tr>
<tr>
<td>radio</td>
<td>定义单选按钮</td>
</tr>
<tr>
<td>reset</td>
<td>定义重置按钮，<code>重置按钮会清除表单中所有数据</code></td>
</tr>
<tr>
<td>submit</td>
<td>定义提交按钮，<code>提交按钮会把表单数据发送到服务器中</code></td>
</tr>
<tr>
<td>text</td>
<td>定义单行输入字段，用户可在其中输入文本，默认宽度为 20 字符</td>
</tr>
</tbody></table>
<ol start="4">
<li>其他常用属性：</li>
</ol>
<table>
<thead>
<tr>
<th>属性</th>
<th>属性值</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>name</td>
<td>由用户自定义</td>
<td>定义 input 元素的名称</td>
</tr>
<tr>
<td>value</td>
<td>由用户自定义</td>
<td>规定 input 元素的值</td>
</tr>
<tr>
<td>checked</td>
<td>checked</td>
<td>规定此 input 元素<strong>首次加载时应当被选中</strong></td>
</tr>
<tr>
<td>maxlength</td>
<td>正整数</td>
<td>规定输入字段中的字符的最大长度</td>
</tr>
</tbody></table>
<ul>
<li>单选按钮和复选框需要相同的 name 值</li>
<li>checked 属性主要针对单选按钮和复选框，主要作用是一打开页面，就默认选中某个表单元素</li>
<li>maxlength,规定输入的最大字符数</li>
</ul>
<ol start="5">
<li><code>&lt;label&gt;</code>标签</li>
</ol>
<p>绑定一个表单元素，当点击<label>标签内文本时，自动将焦点转到或者选择对应的表单元素，来增加用户体验<br>语法：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;sex&quot;</span>&quot;&gt;</span>男 <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">id</span>=<span class="string">&quot;sex&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>

<p>for 属性与相关元素的 id 属性相同</p>
<h2 id="6-3-2-表单元素"><a href="#6-3-2-表单元素" class="headerlink" title="6.3.2 &lt;select&gt;表单元素"></a>6.3.2 <code>&lt;select&gt;</code>表单元素</h2><p>功能：当有多个选项供用户选择，且想节约空间时，可以用<code>&lt;select&gt;</code>标签定义下拉列表</p>
<p>语法：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span>&gt;</span>选项一<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span>&gt;</span>选项二<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span>&gt;</span>选项三<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><code>&lt;select&gt;</code>标签中至少包含一对<code>&lt;option&gt;</code><br>在<code>&lt;option&gt; 中定义 selected =“ selected &quot;</code> 时，当前项即为默认选中项。<br>6.3.3 <code>&lt;textarea&gt;</code>表单元素<br>功能：用于定义多行文本输入的控件<br>常见于留言板、评论等等</p>
<p>语法：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">rows</span>=<span class="string">&quot;3&quot;</span> <span class="attr">cols</span>=<span class="string">&quot;20&quot;</span>&gt;</span></span><br><span class="line">文本内容</span><br><span class="line"><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><code>cols=&quot;每行中的字符数&quot;，rows=&quot;显示的行数&quot;</code><br>&#x3D;&#x3D;实际开发不常用，基本依靠 CSS<br>🍔🍔🍔</p>
]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>HTML</tag>
        <tag>css</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo中插入PDF</title>
    <url>/undefined/4cd4322f.html</url>
    <content><![CDATA[<h2 id="安装-hexo-pdf"><a href="#安装-hexo-pdf" class="headerlink" title="安装 hexo-pdf"></a>安装 hexo-pdf</h2><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-pdf</span><br></pre></td></tr></table></figure>

<h2 id="本地-PDF-引用"><a href="#本地-PDF-引用" class="headerlink" title="本地 PDF 引用"></a>本地 PDF 引用</h2><p>最简单的引用方法：把相应 pdf 文件存到<strong>source 文件夹</strong>下，引用格式为：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">&#123;% pdf /引用文档名字.pdf %&#125;</span><br></pre></td></tr></table></figure>

<p>当然，你也可以新建一个文件夹方便管理 PDF 文档（）在这里我主要参考了<a href="https://link.zhihu.com/?target=https://www.jianshu.com/p/cccc7058a08c">https://www.jianshu.com/p/cccc7058a08c</a>，但是它并没有解决问题 orz 经过苦逼的尝试发现缺少&#x2F;</p>
<p><strong>也就是说，方法为：</strong></p>
<p>xxxxxxxxxx .md 文件中的 HTML 代码要用  和  包起来，使其能正确编译里面的代码。markdown</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">&#123;% pdf /pdf/xxx.pdf %&#125;</span><br></pre></td></tr></table></figure>

<p>尝试后可以看到，hexo-pdf 对 PDF 文档展示效果非常不错 lol</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客部署到云服务器</title>
    <url>/undefined/bda2f0d3.html</url>
    <content><![CDATA[<h1 id="将Hexo部署到云服务器"><a href="#将Hexo部署到云服务器" class="headerlink" title="将Hexo部署到云服务器"></a>将<code>Hexo</code>部署到云服务器</h1><p>为了解决<code>Hexo</code>部署到 <a href="https://github.com/">GitHub</a> 访问速度慢的问题，我们可以将<code>Hexo</code>部署到云服务器上。</p>
<p>这篇博客使用宝塔面板将<code>Hexo</code>部署到阿里云服务器上。</p>
<h1 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h1><ol>
<li>已经搭建好 hexo 的相关环境，并将 hexo 部署到了 GitHub 上</li>
<li>已经购买好云服务器</li>
<li>已经购买并备案好域名 （可选项，没有也可以用 ip 地址访问 hexo）</li>
</ol>
<h1 id="安装宝塔面板"><a href="#安装宝塔面板" class="headerlink" title="安装宝塔面板"></a>安装宝塔面板</h1><p>宝塔面板可以可视化地操作远端服务器（这样就不用自己手动装 nginx 了）</p>
<p>进入宝塔面板的下载页面 <a href="https://www.bt.cn/new/download.html">宝塔面板下载</a> ，找到 Linux 面板，点击安装脚本 <strong>(如果买的服务器是 Windows 的就点 Windows 的)</strong></p>
<p>根据自己服务器的类型，复制对应的代码</p>
<p>进入阿里云的控制台，选择自己的云服务器，点击登录，进入终端。</p>
<p>粘贴刚才复制的代码，回车，一路确认。</p>
<p>在浏览器中访问外网面板地址，使用宝塔提供的用户名和密码登录。</p>
<p>进入面板后，点击一键安装 LNMP。就能直接将 Nginx，MySQL 等网站所需内容一键安装好。</p>
<h1 id="安装并配置-Git-仓库"><a href="#安装并配置-Git-仓库" class="headerlink" title="安装并配置 Git 仓库"></a>安装并配置 Git 仓库</h1><p>在远程服务器上配置好 Git 仓库后，才能将本地的 hexo push 到远端。</p>
<h2 id="创建博客目录"><a href="#创建博客目录" class="headerlink" title="创建博客目录"></a>创建博客目录</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /home</span><br><span class="line"></span><br><span class="line">mkdir www</span><br><span class="line"></span><br><span class="line">cd www</span><br><span class="line"></span><br><span class="line">mkdir hexo</span><br></pre></td></tr></table></figure>
<p>我么们在本地上传的blog文件都会存放在这个文件夹中</p>
<p>回到home目录修改权限</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /home</span><br><span class="line"></span><br><span class="line">chmod -R 777 ./www</span><br><span class="line"></span><br><span class="line">chmod -R 777 ./www/hexo</span><br></pre></td></tr></table></figure>

<h2 id="安装Git和node"><a href="#安装Git和node" class="headerlink" title="安装Git和node"></a>安装Git和node</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">//安装Git</span><br><span class="line">yum install git</span><br><span class="line"></span><br><span class="line">// 安装Node</span><br><span class="line">curl -sL https://rpm.nodesource.com/setup_10.x | bash -</span><br><span class="line">yum install -y nodejs</span><br></pre></td></tr></table></figure>

<h2 id="新建用户"><a href="#新建用户" class="headerlink" title="新建用户"></a>新建用户</h2><p>新建一个git用户并修改权限</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">adduser git</span><br><span class="line"></span><br><span class="line">chmod 740 /etc/sudoers</span><br><span class="line"></span><br><span class="line">vim /etc/sudoers</span><br></pre></td></tr></table></figure>

<p>修改配置文件,如下:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># Allow root to run any commands anywhere</span></span></span><br><span class="line">root    ALL=(ALL)     ALL</span><br><span class="line"></span><br><span class="line">添加以下内容</span><br><span class="line"></span><br><span class="line">git 	ALL=(ALL)     ALL</span><br></pre></td></tr></table></figure>

<p>再将权限修改过来</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">chmod 400 /etc/sudoers</span><br></pre></td></tr></table></figure>

<h2 id="配置免密登录"><a href="#配置免密登录" class="headerlink" title="配置免密登录"></a>配置免密登录</h2><p>在本机桌面,右键GIt Bash Here打开终端,执行如下命令(三次回车)</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure>

<p>在C:\Users\用户名.ssh中找到id_rsa.pub</p>
<p>回到服务器端执行如下操作:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo passwd git  //设置git密码</span><br><span class="line"></span><br><span class="line">su git	//切换到git用户</span><br><span class="line"></span><br><span class="line">cd ~	//切换目录</span><br><span class="line"></span><br><span class="line">mkdir .ssh	//新建.ssh文件夹</span><br><span class="line"></span><br><span class="line">cd .ssh	//进入文件夹</span><br><span class="line"></span><br><span class="line">vim ~/.ssh/authorized_keys</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">然后将win10中生成的id_rsa.pub文件中的公钥复制到authorized_keys</span></span><br><span class="line"></span><br><span class="line">chmod 600 ~/.ssh/authorized_keys</span><br><span class="line"></span><br><span class="line">chmod 700 ~/.ssh</span><br></pre></td></tr></table></figure>

<p>在本地Git终端测试连接云服务器</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh -v git@你的公网IP</span><br></pre></td></tr></table></figure>

<p>如果不需要输入密码就可以连接说明配置成功了,如果配置失败也不是什么大问题,只不过以后每次git需要输入密码</p>
<h2 id="创建git仓库"><a href="#创建git仓库" class="headerlink" title="创建git仓库"></a>创建git仓库</h2><p>在服务器端 创建git仓库</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd ~</span><br><span class="line"></span><br><span class="line">git init --bare blog.git</span><br><span class="line"></span><br><span class="line">vi ~/blog.git/hooks/post-receive</span><br></pre></td></tr></table></figure>

<p>添加下面的代码:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git --work-tree=/home/www/hexo --git-dir=/home/git/blog.git checkout -f</span><br></pre></td></tr></table></figure>

<p>修改权限</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">chmod +x ~/blog.git/hooks/post-receive</span><br></pre></td></tr></table></figure>

<p>至此服务端已经配置完成。</p>
<h1 id="部署-hexo"><a href="#部署-hexo" class="headerlink" title="部署 hexo"></a>部署 hexo</h1><p>打开 hexo 的配置文件 _config.yml 修改 Deployment 位置的配置</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@你的服务器公网IP:/home/git/blog.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br><span class="line">  <span class="attr">message:</span> </span><br></pre></td></tr></table></figure>

<p>保存配置文件，打开终端进入 hexo 博客所在文件夹</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd blog //进入自己博客所在文件夹</span><br><span class="line">hexo clean</span><br><span class="line">hexo g //编译</span><br><span class="line">hexo d //部署</span><br></pre></td></tr></table></figure>

<h1 id="宝塔创建网站"><a href="#宝塔创建网站" class="headerlink" title="宝塔创建网站"></a>宝塔创建网站</h1><p>如图</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303040814143.png"></p>
<p><code>Test.com</code>为你的网站域名，也可用服务器 IP</p>
<p>提交创建即可</p>
<h1 id="网站设置"><a href="#网站设置" class="headerlink" title="网站设置"></a>网站设置</h1><p>打开宝塔后台，进入网站的设置界面，点击<code>网站目录</code>，选择目录为<code>/home/hexo</code>这是我们部署到云服务器的博客根目录</p>
<h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>最后就是在本地执行两条命令来生成你博客的静态网页文件了。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean <span class="comment"># 清除缓存</span></span><br><span class="line">hexo g <span class="comment"># 生成网页</span></span><br><span class="line">hexo d <span class="comment"># 部署</span></span><br></pre></td></tr></table></figure>

<p>现在就可以用 你的域名来访问博客了。</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo建立一个独立的HTML页面</title>
    <url>/undefined/12482e7.html</url>
    <content><![CDATA[<p>Hexo 是一个轻量、快速，简单和强大的博客框架，当我们需要发布博文的时候，只需要将写好的文章（MarkDown 文件）放入本地的 <code>\source\_posts</code> 文件夹，然后再推送上去就行了，原理就是当我们在执行 <code>hexo g</code> 命令时，<code>.md</code> 文件就会被转化成 HTML 文件，但是有时候我们需要新建一个独立的页面，这个页面不使用主题的渲染，具有自己独立的样式，可以放一些自己的作品，相册什么的，以下就介绍这种独立页面的实现方法。</p>
<h1 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a>方法一：</h1><p>使用 Hexo 提供的跳过渲染配置，在博客根目录的配置文件 <code>_config.yml</code> 里找到 <code>skip_render</code> 关键字，在后面添加想要跳过渲染的页面，比如我们创建 <code>\source\about\index.html</code>， 配置文件填写：<code>skip_render: about\**</code>，那么就表示 <code>\source\about</code> 里所有的文件将跳过渲染，里面的文件将会被直接复制到 public 文件夹，此时就会得到一个独立的 about 页面；官方文档：<a href="https://hexo.io/docs/configuration">https://hexo.io/docs/configuration</a></p>
<h1 id="方法-2"><a href="#方法-2" class="headerlink" title="方法 2"></a>方法 2</h1><p>在文章头部的 Front-matter 里添加配置 <code>layout: false</code> 来跳过渲染配置，比如我们要使 about 页面跳过渲染，创建 <code>\source\about\index.md</code>，将这个页面的相关 HTML 代码写进<code>.md</code>文件并保存，然后在 <code>index.md</code> 的头部写入：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="section">layout: false</span></span><br><span class="line"><span class="section">---</span></span><br><span class="line"></span><br><span class="line">&#123;% raw %&#125;</span><br><span class="line">xxxxxxxxxxxxx</span><br><span class="line">xx HTML 代码 xx</span><br><span class="line">xxxxxxxxxxxxx</span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure>

<p>PS：Front-matter 是 <code>.md</code> 文件最上方以 — 分隔的区域，用于指定个别文件的变量，官方文档：<a href="https://hexo.io/docs/front-matter">https://hexo.io/docs/front-matter</a></p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">.md 文件中的 HTML 代码要用 &#123;% raw %&#125; 和 &#123;% endraw %&#125; 包起来，使其能正确编译里面的代码。</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo搭建</title>
    <url>/undefined/57ee7c1d.html</url>
    <content><![CDATA[<h1 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h1><p>作为基础教程，本文以本地搭建 Hexo 环境生成静态文件推送到 GitHub 仓库并使用 GitHub Pages 托管为例，了解了基本流程后，后续您可以更换自己喜欢的主题、使用其他平台托管网站等等</p>
<h1 id="二、简介"><a href="#二、简介" class="headerlink" title="二、简介"></a>二、简介</h1><p>Hexo 是一款基于 Node.js 快速、简洁且高效的博客框架，通过 Node.js 将本地的每一篇 Markdown 文章渲染成 html 网页文件，这样我们的博客就是纯静态的网页，如果我们需要修改文章直接修改对应的 Markdown 文件再重新生成静态网页就好了。Node.js 默认的包管理器是 npm ，<a href="https://www.dejavu.moe/">笔者</a> 建议使用 yarn 做为 Hexo 的包管理器，当然根据自己喜好即可。如果使用 Git 管理文章的话，就不用担心文章丢失了，也可以随意回滚版本，这属于 Git 的范畴，本文不做深入讨论。</p>
<p><a href="https://hexo.io/zh-cn/index.html">Hexo 官方页面</a></p>
<h1 id="三、准备工作"><a href="#三、准备工作" class="headerlink" title="三、准备工作"></a>三、准备工作</h1><ul>
<li>一个域名（最好有 最好备案）</li>
<li>一台电脑并且联网</li>
<li>一个 github 账号</li>
<li>一个腾讯云账号</li>
</ul>
<h1 id="四、本地安装"><a href="#四、本地安装" class="headerlink" title="四、本地安装"></a>四、本地安装</h1><h2 id="1、安装-node-js、git"><a href="#1、安装-node-js、git" class="headerlink" title="1、安装 node.js、git"></a>1、安装 node.js、git</h2><ul>
<li><p><a href="http://nodejs.org/">Node.js</a> (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)</p>
</li>
<li><p><a href="http://git-scm.com/">Git</a></p>
</li>
<li><p>自行查询官网文档 一直下一步即可</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">node -v</span><br><span class="line">v16.15.0</span><br><span class="line"></span><br><span class="line">git version</span><br><span class="line">git version 2.31.1.windows.1</span><br></pre></td></tr></table></figure></li>
</ul>
<p>cmd 下能查出版本号就是安装成功。</p>
<h2 id="2、安装-Hexo"><a href="#2、安装-Hexo" class="headerlink" title="2、安装 Hexo"></a>2、安装 Hexo</h2><p>node 安装完后即可使用 npm 安装 hexo</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init hexo</span><br><span class="line"><span class="built_in">cd</span> hexo</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>

<p><code>hexo</code>为安装目录，可以自定义。</p>
<p>在<code>_config.yml</code>中编辑你网站参数.</p>
<p><code>scaffolds</code>模版文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。</p>
<p>Hexo 的模板是指在新建的文章文件中默认填充的内容。例如，如果您修改 scaffold&#x2F;post.md 中的 Front-matter 内容，那么每次新建一篇文章时都会包含这个修改。</p>
<p>至此 你就可以用 <code>hexo n yourfilename</code>去创建一篇新的文章了,<code>yourfilename</code>是你文章的名字。</p>
<p>hexo 使用<code>markdown</code>语法进行编写。</p>
<h1 id="五、使用-github-page-搭建博客（可能对国内用户直接访问不太友好）"><a href="#五、使用-github-page-搭建博客（可能对国内用户直接访问不太友好）" class="headerlink" title="五、使用 github page 搭建博客（可能对国内用户直接访问不太友好）"></a>五、使用 github page 搭建博客（可能对国内用户直接访问不太友好）</h1><p>设置 git 参数 <code>your name</code>为 github 用户名 <code>email</code>为登录邮箱</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;Your Name&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;email@example.com&quot;</span></span><br></pre></td></tr></table></figure>

<p>新建一个 repository</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303040839275.png"></p>
<p><strong>项目名一定是 你的用户名.github.io</strong></p>
<p>在<code>_config.yml</code>中最后的地方设置你的 git 地址</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  - <span class="built_in">type</span>: <span class="string">&#x27;git&#x27;</span></span><br><span class="line">    repo:</span><br><span class="line">      github: <span class="string">&#x27;your git&#x27;</span></span><br><span class="line">    branch: master</span><br></pre></td></tr></table></figure>

<p>注意空格 缩进表示层级关系</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean <span class="comment"># 清除缓存</span></span><br><span class="line">hexo g <span class="comment"># 生成网页</span></span><br><span class="line">hexo d <span class="comment"># 发布到deploy配置的地址</span></span><br><span class="line">hexo s <span class="comment"># 创建本地网站服务</span></span><br></pre></td></tr></table></figure>

<p><strong>正常发布和生成本地网站前都要清除缓存和生成网页</strong></p>
<p>找到设置</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303040839282.png" alt="image-20220607123530611"></p>
<p>选择<code>master</code>分支</p>
<p>可以在<code>Custom domain</code>绑定你的域名</p>
<p>在域名中用<code>CNAME</code>解析到 你的昵称.github.io 即可访问</p>
<p><strong>注意</strong></p>
<p>如果你本地的<code>source</code>文件中没有<code>CNAME</code>那么当你用<code>hexo d</code>推送的时候会删除 github 中的<code>CNAME</code>文件</p>
<p><strong>解决办法</strong></p>
<ul>
<li><p>在本地新<code>source</code>建一个 CNAME 文件 用记事本编辑 里面填上你的域名即可</p>
</li>
<li><p>下载 github 中的<code>CNAME</code>文件到本地的<code>source</code></p>
<h1 id="六、使用自己的云服务器托管"><a href="#六、使用自己的云服务器托管" class="headerlink" title="六、使用自己的云服务器托管"></a>六、使用自己的云服务器托管</h1></li>
</ul>
<h2 id="1、安装宝塔以及微力同步"><a href="#1、安装宝塔以及微力同步" class="headerlink" title="1、安装宝塔以及微力同步"></a>1、安装宝塔以及微力同步</h2><p><a href="https://www.bt.cn/new/download.html">宝塔面板</a></p>
<p>服务器端直接一键安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Centos安装脚本</span></span><br><span class="line">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh ed8484bec</span><br><span class="line"><span class="comment">#Ubuntu/Deepin安装脚本</span></span><br><span class="line">wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; <span class="built_in">sudo</span> bash install.sh ed8484bec</span><br><span class="line"><span class="comment">#Debian安装脚本</span></span><br><span class="line">wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; bash install.sh ed8484bec</span><br><span class="line"><span class="comment">#万能安装脚本</span></span><br><span class="line"><span class="keyword">if</span> [ -f /usr/bin/curl ];<span class="keyword">then</span> curl -sSO https://download.bt.cn/install/install_panel.sh;<span class="keyword">else</span> wget -O install_panel.sh https://download.bt.cn/install/install_panel.sh;<span class="keyword">fi</span>;bash install_panel.sh ed8484bec</span><br></pre></td></tr></table></figure>

<p><a href="http://www.verysync.com/download.html">微力同步下载页面</a></p>
<p>PC 端下载下来解压后打开就能使用</p>
<p>服务器端运行以下命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#(如果需要指定索引存放位置请在最后面添加-d 路径 如 -d /data/verysync)</span></span><br><span class="line">curl http://www.verysync.com/shell/verysync-linux-installer/go-installer.sh &gt; go-installer.sh</span><br><span class="line"><span class="built_in">chmod</span> +x go-installer.sh</span><br><span class="line">./go-installer.sh</span><br></pre></td></tr></table></figure>

<p>安装完成后就可以用浏览器打开 <a href="http://你的ip地址:8886/">http:&#x2F;&#x2F;你的 IP 地址:8886</a> 管理微力内容了</p>
<p><strong>注意</strong></p>
<p>如果不能访问服务器端的微力同步页面，一定要检查防火墙是否打开 8886 端口，还有宝塔安全页面是否放行。</p>
<h2 id="2、宝塔创建网站"><a href="#2、宝塔创建网站" class="headerlink" title="2、宝塔创建网站"></a>2、宝塔创建网站</h2><p>如图</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303040839521.png" alt="image-20220607125209845"></p>
<p><code>Test.com</code>为你的网站域名，也可用服务器 IP</p>
<p>提交创建即可</p>
<p>记住网站的根目录，等下会用到</p>
<h2 id="3、同步"><a href="#3、同步" class="headerlink" title="3、同步"></a>3、同步</h2><p>打开 PC 端微力同步，<code>新建同步</code> <code>标准文件夹</code>然后选择你的 hexo 的主目录，点击确定，然后会生成一个链接地址。</p>
<p>打开服务器端微力同步后台，<code>新建同步</code> <code>连接密钥或链接</code>输入刚刚 PC 端生成的链接，保存的位置就填你网站的根目录，点击连接。</p>
<h2 id="4、网站设置"><a href="#4、网站设置" class="headerlink" title="4、网站设置"></a>4、网站设置</h2><p>打开宝塔后台，进入网站的设置界面，点击<code>网站目录</code>，选择到你 hexo 目录里面的<code>public</code>文件夹，点击保存。</p>
<h2 id="5、最后"><a href="#5、最后" class="headerlink" title="5、最后"></a>5、最后</h2><p>最后就是在本地执行两条命令来生成你博客的静态网页文件了。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean <span class="comment"># 清除缓存</span></span><br><span class="line">hexo g <span class="comment"># 生成网页</span></span><br></pre></td></tr></table></figure>

<p>生成好后会自动同步到服务器本地，然后访问你的域名就可以看见服务器端部署的博客了。</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>MOVIDRIVE MDX61B 故障查询</title>
    <url>/undefined/6acf57b4.html</url>
    <content><![CDATA[<br>



	<div class="row">
    <embed src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/MOVIDRIVE%20MDX61B%20%E6%95%85%E9%9A%9C%E6%9F%A5%E8%AF%A2.pdf" width="100%" height="550" type="application/pdf">
	</div>




<br>]]></content>
  </entry>
  <entry>
    <title>MT7981B安博通ABT_ASR3000刷机指南</title>
    <url>/undefined/2c4b11e5.html</url>
    <content><![CDATA[<h1 id="刷机方法"><a href="#刷机方法" class="headerlink" title="刷机方法"></a>刷机方法</h1><h2 id="一："><a href="#一：" class="headerlink" title="一："></a>一：</h2><p>下载附件e-202306161250-cfg.tar.gz，原厂系统：系统工具&#x3D;&gt;配置管理&#x3D;&gt;导入配置，重启；</p>
<h2 id="二："><a href="#二：" class="headerlink" title="二："></a>二：</h2><p>开机后原来的wifi密码和后台密码不变，进入系统提示root无密码，不要搭理，<strong>系统工具&#x3D;&gt;重启&#x3D;&gt;立即重启</strong>；</p>
<h2 id="三："><a href="#三：" class="headerlink" title="三："></a>三：</h2><p>重启后已开启telnet,使用putty或其它工具登录telnet，用户名root，无密码；</p>
<h2 id="四："><a href="#四：" class="headerlink" title="四："></a>四：</h2><p>路由器联网，逐条运行以下命令开启SSH：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">echo arch aarch64_cortex-a53 300 &gt;&gt; /etc/opkg.conf</span><br><span class="line">cd /tmp</span><br><span class="line">wget https://downloads.openwrt.org/releases/packages-19.07/aarch64_cortex-a53/base/dropbear_2019.78-2_aarch64_cortex-a53.ipk</span><br><span class="line">opkg install ./dropbear_2019.78-2_aarch64_cortex-a53.ipk -f /etc/opkg.conf --force-depends</span><br><span class="line">/etc/init.d/dropbear enable</span><br><span class="line">/etc/init.d/dropbear start</span><br></pre></td></tr></table></figure>

<h2 id="五："><a href="#五：" class="headerlink" title="五："></a>五：</h2><p>winscp连接路由器，putty里逐条运行以下命令备份原厂固件（注意：mtd0备份之后应立即下载到本地并删除路由器里的文件，然后再继续备份mtd1-8，否则会爆内存重启）：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">dd if=/dev/mtd0 | gzip &gt;/tmp/mtd0_spi0.0.bin.gz</span><br><span class="line">dd if=/dev/mtd1 of=/tmp/mtd1_BL2.bin</span><br><span class="line">dd if=/dev/mtd2 of=/tmp/mtd2_u-boot-env.bin</span><br><span class="line">dd if=/dev/mtd3 of=/tmp/mtd3_art.bin</span><br><span class="line">dd if=/dev/mtd4 of=/tmp/mtd4_Factory.bin</span><br><span class="line">dd if=/dev/mtd5 of=/tmp/mtd5_FIP.bin</span><br><span class="line">dd if=/dev/mtd6 of=/tmp/mtd6_ubi.bin</span><br><span class="line">dd if=/dev/mtd7 of=/tmp/mtd7_ubi_backup.bin</span><br><span class="line">dd if=/dev/mtd8 of=/tmp/mtd8_Config_backup.bin</span><br></pre></td></tr></table></figure>

<h2 id="六："><a href="#六：" class="headerlink" title="六："></a>六：</h2><p>winscp进入路由器tmp文件夹，上传uboot：mt7981_abt-asr3000-fip-fixed-parts.bin，逐条运行以下命令刷入大分区uboot：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /tmp</span><br><span class="line">md5sum mt7981_abt-asr3000-fip-fixed-parts.bin</span><br><span class="line">mtd write mt7981_abt-asr3000-fip-fixed-parts.bin FIP</span><br><span class="line">mtd verify mt7981_abt-asr3000-fip-fixed-parts.bin FIP</span><br></pre></td></tr></table></figure>

<p>看到结果显示success后拔电</p>
<p>当然也可以不校验MD5直接刷：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /tmp</span><br><span class="line">mtd write mt7981_abt-asr3000-fip-fixed-parts.bin FIP</span><br></pre></td></tr></table></figure>

<h2 id="七："><a href="#七：" class="headerlink" title="七："></a>七：</h2><p><strong>按住路由器MESH键插电</strong>，电脑网卡设置IP：192.168.1.100，网线插路由器LAN口，登录192.168.1.1进入uboot webui，刷入asr3000-squashfs-factory.bin，重启；wifi密码：无；后台192.168.1.1，密码：password</p>
<h1 id="附件"><a href="#附件" class="headerlink" title="附件"></a>附件</h1><h2 id="固件及原厂dts如下："><a href="#固件及原厂dts如下：" class="headerlink" title="固件及原厂dts如下："></a>固件及原厂dts如下：</h2><p><a href="https://cloud.189.cn/t/U7rqaqmINJ3e">https://cloud.189.cn/t/U7rqaqmINJ3e</a> （访问码：4snw）</p>
<h1 id="转载于恩山无线论坛"><a href="#转载于恩山无线论坛" class="headerlink" title="转载于恩山无线论坛"></a>转载于恩山无线论坛</h1><p><a href="https://www.right.com.cn/forum/thread-8302537-1-1.html">https://www.right.com.cn/forum/thread-8302537-1-1.html</a></p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>路由器</tag>
      </tags>
  </entry>
  <entry>
    <title>OnlyFans 公共存档器 免费查看OnlyFans付费内容-Coomer</title>
    <url>/undefined/1082bb6d.html</url>
    <content><![CDATA[<p>Coomer，一个 OnlyFans 公共存档器，可以免费查看 OnlyFans 付费内容，上面所以内容都由网友搬运、贡献的 OnlyFans 付费内容，想要查看哪位艺术家、作者的付费内容，直接搜索名字即可免费查看 OnlyFans 上的付费内容，当然你也可以共享你的。</p>
<p>地址：<a href="https://coomer.party/">https://coomer.party/</a></p>
<p>可以尝试点击&gt;creators&gt;然后搜索 ‘hongkongdoll’ ，‘juneliu’；</p>
<p>更多的关键词待你挖掘</p>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>其他</tag>
      </tags>
  </entry>
  <entry>
    <title>Openwrt编译</title>
    <url>/undefined/72c5b323.html</url>
    <content><![CDATA[<h1 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h1><ol>
<li><strong>不要用 root 用户进行编译</strong></li>
<li>国内用户编译前最好准备好梯子</li>
<li>默认登陆 IP 192.168.1.1 密码 password</li>
</ol>
<h1 id="编译命令"><a href="#编译命令" class="headerlink" title="编译命令"></a>编译命令</h1><ol>
<li><p>首先装好 Linux 系统，推荐 Debian 11 或 Ubuntu LTS</p>
</li>
<li><p>安装编译依赖</p>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt update -y</span><br><span class="line"><span class="built_in">sudo</span> apt full-upgrade -y</span><br><span class="line"><span class="built_in">sudo</span> apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \</span><br><span class="line">bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \</span><br><span class="line">git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev \</span><br><span class="line">libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz \</span><br><span class="line">mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pyelftools \</span><br><span class="line">libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip \</span><br><span class="line">vim wget xmlto xxd zlib1g-dev</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>下载源代码，更新 feeds 并选择配置<br>lede源：<a href="https://github.com/coolsnowwolf/lede">https://github.com/coolsnowwolf/lede</a><br>插件库：<a href="https://github.com/kenzok8/small-package">https://github.com/kenzok8/small-package</a><br>西瓜皮：<a href="https://github.com/6ang996/lede/tree/rk356x-xgp_support">https://github.com/6ang996/lede/tree/rk356x-xgp_support</a><br>克隆指定分支：git clone -b 分支 源</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/coolsnowwolf/lede</span><br><span class="line"><span class="built_in">cd</span> lede</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;src-git small8 https://github.com/kenzok8/small-package&#x27;</span> &gt;&gt;feeds.conf.default</span><br><span class="line">./scripts/feeds update -a</span><br><span class="line">./scripts/feeds install -a</span><br><span class="line">make menuconfig</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>下载 dl 库，编译固件<br>（-j 后面是线程数，第一次编译推荐用单线程）</li>
</ol>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">make download -j8</span><br><span class="line">make V=s -j1</span><br><span class="line"><span class="keyword">time</span> make V=s -j$(<span class="built_in">nproc</span>)可以看到编译用时</span><br></pre></td></tr></table></figure>

<p>本套代码保证肯定可以编译成功。里面包括了 R23 所有源代码，包括 IPK 的。</p>
<p>你可以自由使用，但源码编译二次发布请注明我的 GitHub 仓库链接。谢谢合作！</p>
<p>二次编译：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> lede</span><br><span class="line">git pull</span><br><span class="line">./scripts/feeds update -a</span><br><span class="line">./scripts/feeds install -a</span><br><span class="line">make defconfig</span><br><span class="line">make download -j8</span><br><span class="line">make V=s -j$(<span class="built_in">nproc</span>)</span><br></pre></td></tr></table></figure>

<p>如果需要重新配置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">rm</span> -rf ./tmp &amp;&amp; <span class="built_in">rm</span> -rf .config</span><br><span class="line">make menuconfig</span><br><span class="line">make V=s -j$(<span class="built_in">nproc</span>)</span><br></pre></td></tr></table></figure>

<p>编译完成后输出路径：bin&#x2F;targets</p>
<h2 id="如果你使用-WSL-WSL2-进行编译"><a href="#如果你使用-WSL-WSL2-进行编译" class="headerlink" title="如果你使用 WSL&#x2F;WSL2 进行编译"></a>如果你使用 WSL&#x2F;WSL2 进行编译</h2><p>由于 WSL 的 PATH 中包含带有空格的 Windows 路径，有可能会导致编译失败，请在 <code>make</code> 前面加上：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin</span><br></pre></td></tr></table></figure>

<h2 id="macOS-原生系统进行编译"><a href="#macOS-原生系统进行编译" class="headerlink" title="macOS 原生系统进行编译"></a>macOS 原生系统进行编译</h2><ol>
<li><p>在 AppStore 中安装 Xcode</p>
</li>
<li><p>安装 Homebrew：</p>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/bin/ruby -e <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>&quot;</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>使用 Homebrew 安装工具链、依赖与基础软件包:</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew <span class="built_in">unlink</span> awk</span><br><span class="line">brew install coreutils diffutils findutils gawk gnu-getopt gnu-tar grep make ncurses pkg-config wget quilt xz</span><br><span class="line">brew install gcc@11</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>然后输入以下命令，添加到系统环境变量中：</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;export PATH=&quot;/usr/local/opt/coreutils/libexec/gnubin:$PATH&quot;&#x27;</span> &gt;&gt; ~/.bashrc</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;export PATH=&quot;/usr/local/opt/findutils/libexec/gnubin:$PATH&quot;&#x27;</span> &gt;&gt; ~/.bashrc</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;export PATH=&quot;/usr/local/opt/gnu-getopt/bin:$PATH&quot;&#x27;</span> &gt;&gt; ~/.bashrc</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;export PATH=&quot;/usr/local/opt/gnu-tar/libexec/gnubin:$PATH&quot;&#x27;</span> &gt;&gt; ~/.bashrc</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;export PATH=&quot;/usr/local/opt/grep/libexec/gnubin:$PATH&quot;&#x27;</span> &gt;&gt; ~/.bashrc</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;export PATH=&quot;/usr/local/opt/gnu-sed/libexec/gnubin:$PATH&quot;&#x27;</span> &gt;&gt; ~/.bashrc</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;export PATH=&quot;/usr/local/opt/make/libexec/gnubin:$PATH&quot;&#x27;</span> &gt;&gt; ~/.bashrc</span><br></pre></td></tr></table></figure>

<ol start="5">
<li>重新加载一下 shell 启动文件 <code>source ~/.bashrc</code>，然后输入 <code>bash</code> 进入 bash shell，就可以和 Linux 一样正常编译了</li>
</ol>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>Openwrt</tag>
      </tags>
  </entry>
  <entry>
    <title>PVE安装iStoreOS</title>
    <url>/undefined/d167335e.html</url>
    <content><![CDATA[<h1 id="首先X86机器已经安装好PVE机器，且能正常联网；"><a href="#首先X86机器已经安装好PVE机器，且能正常联网；" class="headerlink" title="首先X86机器已经安装好PVE机器，且能正常联网；"></a>首先X86机器已经安装好PVE机器，且能正常联网；</h1><ul>
<li>这里不提供X86机器安装pve教程，自行科普。</li>
</ul>
<h1 id="下载固件"><a href="#下载固件" class="headerlink" title="下载固件"></a>下载固件</h1><ul>
<li><a href="https://fw.koolcenter.com/iStoreOS/x86_64/">固件下载(opens new window)</a></li>
<li><a href="https://fw.koolcenter.com/iStoreOS/x86_64_efi/">固件下载-EFI(opens new window)</a></li>
</ul>
<p>越后面的版本越新，下载最新的版本。下载完成之后不需要解压。</p>
<h1 id="在PVE里新建虚拟机；"><a href="#在PVE里新建虚拟机；" class="headerlink" title="在PVE里新建虚拟机；"></a>在PVE里新建虚拟机；</h1><ul>
<li>进入PVE系统管理界面，右上角“新建虚拟机”；</li>
</ul>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312031646065.jpeg"></p>
<ul>
<li>只填写名称，VM ID即为虚拟机ID，自动排序的，也可自定义，其余不管，下一步：</li>
</ul>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312031646686.jpeg"></p>
<ul>
<li>勾选“不使用任何介质”，其余不管，下一步；</li>
</ul>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312031646138.jpeg"></p>
<ul>
<li>如果是下载的EFI固件，BIOS选择“OVMF(UEFI)”，EFI存储选择PVE的虚拟盘，其余不管，下一步：</li>
</ul>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312031646135.jpeg"></p>
<p>如果下载的非EFI固件，此页面不用管，直接下一步；</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312031646944.jpeg"></p>
<ul>
<li>磁盘，不需要创建，直接删掉，下一步；</li>
</ul>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312031646104.jpeg"></p>
<ul>
<li>CPU核心，根据你的实机CPU核设置(比如实机是6核12线程，大于等于1且小于等于12都成)，类别建议选host；</li>
</ul>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312031646942.jpeg"></p>
<ul>
<li>内存根据实际需求设置；</li>
</ul>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312031646040.jpg" alt="download"></p>
<ul>
<li>网络默认即可，默认已经选了PVE的虚拟LAN；</li>
</ul>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312031646342.jpeg"></p>
<ul>
<li>完成，等待虚拟机创建好。</li>
</ul>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312031647835.jpeg"></p>
<h1 id="往刚创建的虚拟机里写入固件；"><a href="#往刚创建的虚拟机里写入固件；" class="headerlink" title="往刚创建的虚拟机里写入固件；"></a>往刚创建的虚拟机里写入固件；</h1><ul>
<li>利用WinSCP等工具，把下载好的固件(教程用的EFI固件)和img2kvm工具放入root目录下；</li>
<li><a href="https://fw.koolcenter.com/binary/other-tools/">img2kvm工具下载(opens new window)</a></li>
<li>终端登录PVE系统后台，终端输入命令：<code>chmod 777 ./img2kvm</code></li>
<li>继续终端输入：<code>./img2kvm 固件完整名 虚拟机ID</code></li>
</ul>
<p>比如教程所示的虚拟机ID是104，下载的固件完整名：istoreos-21.02.3-2022092019-x86-64-squashfs-combined-efi.img.gz</p>
<p>所以输入的命令就是：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./img2kvm istoreos-21.02.3-2022092019-x86-64-squashfs-combined-efi.img.gz 104</span><br></pre></td></tr></table></figure>

<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312031647302.jpeg"></p>
<p>然后看PVE虚拟机104的硬件界面，会出现一个未添加的硬盘，双击添加：</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312031647806.jpeg"></p>
<p>不用设置直接添加：</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312031647609.jpeg"></p>
<p>添加完成，会出现一个硬盘：</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312031647016.jpeg"></p>
<p>选项——引导顺序，双击进入编辑：</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312031647797.jpeg"></p>
<p>把刚添加的硬盘作为第一启动：</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312031647908.jpeg"></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312031647362.jpeg"></p>
<ul>
<li>把EFI磁盘删掉，若BIOS不是UEFI，无此项设置；</li>
</ul>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312031647310.jpeg"></p>
<h1 id="启动iStoreOS："><a href="#启动iStoreOS：" class="headerlink" title="启动iStoreOS："></a>启动iStoreOS：</h1><p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312031648006.jpeg"></p>
<ul>
<li>如果前面的步骤没出错，是能正常启动的：</li>
</ul>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312031648517.jpeg"></p>
<ul>
<li>等系统启动一两分钟，然后点击此虚拟机——控制台(右上角控制台也可)：</li>
</ul>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312031648522.jpeg"></p>
<p>鼠标点在此界面，键盘回车：就会出现终端入口：</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312031648241.jpeg"></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312031648418.jpeg"></p>
<p>输入：<code>quickstart</code>，利用键盘“上下键”选择2，回车：</p>
<p>输入要分配给iStoreOS的LAN口的ip(必须是PVE虚拟LAN的IP段，比如PVE的管理IP是192.168.2.88，那么此处的IP就必须是192.168.2.XXX)，回车生效；</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312031648082.jpeg"></p>
<p>要求输入掩码(mask)，照着填：255.255.255.0，回车生效：</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312031648554.jpeg"></p>
<p>然后选择QUIT退出此界面：</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312031648466.jpeg"></p>
<ul>
<li>输入：<code>reboot</code>重启iStoreOS，这样浏览器输入我们设置的IP，就进入iStoreOS界面了。</li>
</ul>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312031648602.jpeg"></p>
<p>iStoreOS默认登录密码是：password</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312031648519.jpeg"></p>
<h1 id="配置iStoreOS："><a href="#配置iStoreOS：" class="headerlink" title="配置iStoreOS："></a>配置iStoreOS：</h1><p>此刻我们进入iStoreOS，但是目前iStoreOS是个单臂路由状态，只有一个LAN口。</p>
<ul>
<li>如果PVE里已有主路由系统，需要把iStoreOS配置为旁路由，在“网络向导”里配置“旁路由”即可。</li>
</ul>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312031649861.jpeg"></p>
<ul>
<li>如果需要将iStoreOS作为主路由系统，就需要添加网口：</li>
</ul>
<p>首先在PVE里关闭iStoreOS虚拟机，然后硬件——添加一个PVE的网口作为WAN口；</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312031649410.jpeg"></p>
<ul>
<li>然后再确认2个IP，首先确认：PVE的虚拟LAN管理IP，比如是192.168.2.88，那么就必须把iStoreOS的IP改成192.168.2.1~192.168.2.77之间，比如把PVE的IP放在iStoreOS主路由LAN口IP之后，不然PVE无法联网。</li>
<li>然后启动iStoreOS虚拟机，进入iStoreOS后，在“网络向导”里配置联网即可。</li>
</ul>
<h1 id="安装离线插件："><a href="#安装离线插件：" class="headerlink" title="安装离线插件："></a>安装离线插件：</h1><p><strong>注意，上述软件包安装，部分依赖依然要通过opkg软件源在线安装。如果安装失败，检查路由器自身的网络情况，特别是旁路由模式下最容易出现网络问题。</strong><br><strong>再三注意需要路由器自身联网正常</strong></p>
<ul>
<li><p>下载地址</p>
<p><a href="https://github.com/bcseputetto/Are-u-ok">https://github.com/bcseputetto/Are-u-ok</a></p>
</li>
<li><p>如何安装<br>下载后，来到iStore应用商店页面，点击手动安装，点击选择上传或者直接拖放文件<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312031649689.png"></p>
</li>
</ul>
<p>对于没有iStore应用商店的OpenWrt也可以使用以下方法。<br>将 .run 文件上传到路由器上，然后在终端环境执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sh 包名.run</span><br></pre></td></tr></table></figure>



<p>例</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sh PassWall4.71-2_x86_all_sdk_22.03.5.run</span><br></pre></td></tr></table></figure>



<p>如果文件不在当前路径记得填写路径，下例</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sh /tmp/upload/PassWall4.71-2_x86_all_sdk_22.03.5.run</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>路由器</tag>
      </tags>
  </entry>
  <entry>
    <title>Qexo 一个美观、强大的在线 静态博客 管理器</title>
    <url>/undefined/8277e0e6.html</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><strong>Hexo</strong> 是一款快速、高效的静态博客框架。通过 <a href="http://daringfireball.net/projects/markdown/">Markdown</a> 语法，只需几秒便可生成高质量的静态网页。</p>
<p>最近，我成功实现了在多设备间灵活管理博客并发布内容。一位网友提到 <strong>Qexo</strong>，一个为 Hexo 增加后台功能的工具，它让发布博客变得像发微博一样简单。深入了解后，我发现它非常强大，不仅可以用手机随时随地发表文章，还极大提升了操作便捷性。</p>
<p>尽管安装过程中遇到了一些问题，但最终都顺利解决。我将整理经验分享，希望能帮助更多人。</p>
<hr>
<h1 id="Qexo-简介"><a href="#Qexo-简介" class="headerlink" title="Qexo 简介"></a>Qexo 简介</h1><p><strong>Qexo</strong> 是一个快速、美观且功能丰富的在线 Hexo 管理器，支持通过 Vercel 免费部署，仅需配置一个数据库即可使用。</p>
<h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><ul>
<li>自定义图床上传图片</li>
<li>在线编辑与页面管理</li>
<li>开放 API 接口</li>
<li>自动检查更新并一键更新</li>
<li>快速管理友情链接</li>
<li>短文分享（类似微博功能）</li>
<li>自动填充文章模板</li>
</ul>
<p><strong>项目地址</strong>：<a href="https://www.oplog.cn/qexo/start.html">Qexo 官方文档</a></p>
<hr>
<h1 id="一、配置-GitHub-自动化部署"><a href="#一、配置-GitHub-自动化部署" class="headerlink" title="一、配置 GitHub 自动化部署"></a>一、配置 GitHub 自动化部署</h1><h2 id="1-获取-GitHub-Token"><a href="#1-获取-GitHub-Token" class="headerlink" title="1. 获取 GitHub Token"></a>1. 获取 GitHub Token</h2><ol>
<li>打开 <strong>Personal settings</strong> -&gt; <strong>Developer settings</strong> -&gt; <strong>Personal access tokens</strong></li>
<li>设置权限为 <strong>repo</strong> 和 <strong>public repo</strong></li>
</ol>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202412291101351.png" alt="313f2ca0d7d3ea811d7e7be8ad6bcd4b"></p>
<ol>
<li>保存生成的 Token（丢失后无法恢复，只能重新生成）</li>
<li>在博客代码仓库的 <strong>Secrets</strong> 中添加名为 <strong>PERSONAL_TOKEN</strong> 的变量，后续步骤将用到。</li>
</ol>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202412291102866.png" alt="f69e8dd9266ba1336ddddff00a67ffc6"></p>
<h2 id="2-创建-GitHub-Actions"><a href="#2-创建-GitHub-Actions" class="headerlink" title="2. 创建 GitHub Actions"></a>2. 创建 GitHub Actions</h2><ol>
<li>在博客仓库页面，点击 <strong>Actions</strong>。</li>
<li>选择 <strong>Set up a workflow yourself</strong>。</li>
</ol>
<p><a href="https://13fe9ff.webp.li/2024/11/b425061c44375abea8ca5a8a01091038.png"><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202412291104224.png" alt="img"></a></p>
<ol>
<li>输入以下 YAML 配置并点击 <strong>Start commit</strong> ：</li>
</ol>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">Hexo</span> <span class="string">to</span> <span class="string">GitHub</span> <span class="string">Pages</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">main</span> <span class="comment"># 或你使用的默认分支名称</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">deploy:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span> <span class="string">blog</span> <span class="string">source</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">blog</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Set</span> <span class="string">up</span> <span class="string">Node.js</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">&quot;16&quot;</span> <span class="comment"># 设置 Node.js 版本</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Cache</span> <span class="string">dependencies</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/cache@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">node_modules</span></span><br><span class="line">          <span class="attr">key:</span> <span class="string">$&#123;&#123;</span> <span class="string">runner.os</span> <span class="string">&#125;&#125;-node-$&#123;&#123;</span> <span class="string">hashFiles(&#x27;**/package-lock.json&#x27;)</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">restore-keys:</span> <span class="string">|</span></span><br><span class="line"><span class="string">            $&#123;&#123; runner.os &#125;&#125;-node-</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">dependencies</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">npm</span> <span class="string">install</span></span><br><span class="line">        <span class="attr">working-directory:</span> <span class="string">./blog</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">Hexo</span> <span class="string">CLI</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">npm</span> <span class="string">install</span> <span class="string">-g</span> <span class="string">hexo-cli</span></span><br><span class="line">        <span class="attr">working-directory:</span> <span class="string">./blog</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Generate</span> <span class="string">static</span> <span class="string">pages</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">hexo</span> <span class="string">generate</span></span><br><span class="line">        <span class="attr">working-directory:</span> <span class="string">./blog</span></span><br><span class="line"></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span> <span class="string">to</span> <span class="string">GitHub</span> <span class="string">Pages</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">peaceiris/actions-gh-pages@v3</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">personal_token:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.PERSONAL_TOKEN</span> <span class="string">&#125;&#125;</span></span><br><span class="line">          <span class="attr">publish_dir:</span> <span class="string">./blog/public</span></span><br><span class="line">          <span class="attr">external_repository:</span> <span class="string">username/username.github.io</span> <span class="comment"># 更改为你的 GitHub Pages 仓库, username 是你的用户名</span></span><br><span class="line">          <span class="attr">publish_branch:</span> <span class="string">main</span> <span class="comment"># GitHub Pages 分支</span></span><br></pre></td></tr></table></figure>

<p>参考文档：</p>
<ul>
<li><a href="https://www.oplog.cn/archives/24998.html">Hexo 自动化部署教程</a></li>
<li><a href="https://hackergavin.com/2024/01/11/hexo-automate-deploy/">利用 GitHub Actions 实现自动化部署 Hexo 到 Github Pages</a></li>
</ul>
<hr>
<h1 id="二、通过-Vercel-部署-Qexo"><a href="#二、通过-Vercel-部署-Qexo" class="headerlink" title="二、通过 Vercel 部署 Qexo"></a>二、通过 Vercel 部署 Qexo</h1><h2 id="1-一键部署"><a href="#1-一键部署" class="headerlink" title="1. 一键部署"></a>1. 一键部署</h2><p>点击以下按钮完成一键部署：<a href="https://vercel.com/new/clone?repository-url=https://github.com/am-abudu/Qexo">Vercel 一键部署</a></p>
<blockquote>
<p><strong>注意</strong>：首次部署可能会出现错误提示，可忽略并继续后续步骤。</p>
</blockquote>
<h2 id="2-修改-Node-js-版本"><a href="#2-修改-Node-js-版本" class="headerlink" title="2. 修改 Node.js 版本"></a>2. 修改 Node.js 版本</h2><p>由于 <strong><a href="https://vercel.com/docs/functions/runtimes/python#python-dependencies">Vercel 的已知问题</a>，需将项目的 Node.js 版本调整为</strong> <strong>18.x</strong>。<br>路径：<strong>Settings -&gt; General -&gt; Node.js Version</strong></p>
<h2 id="3-创建-Vercel-数据库"><a href="#3-创建-Vercel-数据库" class="headerlink" title="3. 创建 Vercel 数据库"></a>3. 创建 Vercel 数据库</h2><ol>
<li>进入<a href="https://vercel.com/dashboard/stores">Vercel Storage 页面</a>。</li>
<li>点击 *<strong>Create Database</strong>，选择 <strong>Neon</strong> ，设置区域为 <strong>Washington, DC., USA - iad1</strong>，创建免费数据库。</li>
</ol>
<h2 id="4-绑定项目"><a href="#4-绑定项目" class="headerlink" title="4. 绑定项目"></a>4. 绑定项目</h2><p>在 <strong>Projects</strong> 页面选择对应项目，点击 <strong>Connect Project</strong> 进行绑定。</p>
<h2 id="5-部署-Qexo"><a href="#5-部署-Qexo" class="headerlink" title="5. 部署 Qexo"></a>5. 部署 Qexo</h2><p>回到项目页面，点击<strong>Redeploy</strong> 开始部署。部署完成后，无报错即可访问域名进入初始化页面。</p>
<hr>
<h1 id="初始化配置"><a href="#初始化配置" class="headerlink" title="初始化配置"></a>初始化配置</h1><p><a href="https://13fe9ff.webp.li/2024/11/d14a6a28fa42dc905ad1f9572d280abb.png"><img src="https://13fe9ff.webp.li/2024/11/d14a6a28fa42dc905ad1f9572d280abb.png" alt="img"></a></p>
<p><a href="https://13fe9ff.webp.li/2024/11/8781b5e062a34509ccf39ed0000e8033.png"><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202412291104276.png" alt="img"></a></p>
<h2 id="GitHub-配置"><a href="#GitHub-配置" class="headerlink" title="GitHub 配置"></a>GitHub 配置</h2><p><a href="https://13fe9ff.webp.li/2024/11/7f4e9a472b66f4a2b73ae1c8e035b4ef.png"><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202412291104301.png" alt="img"></a><br>填写博客源码所在仓库的分支名称，例如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">plaintext</span><br><span class="line">master</span><br></pre></td></tr></table></figure>

<h2 id="GitHub-密钥"><a href="#GitHub-密钥" class="headerlink" title="GitHub 密钥"></a>GitHub 密钥</h2><p>填写生成的 GitHub Token，例如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">plaintext</span><br><span class="line">wrq_P8sYPlYA9fjMlOPEYSKA84xxxxxxxxxxxxxx</span><br></pre></td></tr></table></figure>

<h2 id="仓库路径"><a href="#仓库路径" class="headerlink" title="仓库路径"></a>仓库路径</h2><p>若 Hexo 源码在仓库根目录，则留空；否则填写路径：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">plaintext</span><br><span class="line">path/</span><br></pre></td></tr></table></figure>

<p><a href="https://13fe9ff.webp.li/2024/11/f2f7c6b57196afa6652292807698db91.png"><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202412291104319.png" alt="img"></a></p>
<p><a href="https://13fe9ff.webp.li/2024/11/5e4c876cd000a6d5f5da45bb256c963e.png"><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202412291104350.png" alt="img"></a></p>
<p><a href="https://13fe9ff.webp.li/2024/11/bcc3ab289c7a355ed8116d92faddba80.png"><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202412291104386.png" alt="img"></a></p>
<h2 id="Vercel-配置"><a href="#Vercel-配置" class="headerlink" title="Vercel 配置"></a>Vercel 配置</h2><ul>
<li><strong>VERCEL_TOKEN</strong>：在<a href="https://vercel.com/account/tokens">Vercel 账户设置</a> 中生成。</li>
<li><strong>PROJECT_ID</strong>：在 <strong>Project Settings -&gt; General -&gt; Project ID</strong> 中找到。</li>
</ul>
<p>配置完成后，即可登录后台管理博客内容。</p>
<p><a href="https://13fe9ff.webp.li/2024/11/df6b8e762d048854683e5e31f6e262f2.png"><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202412291104412.png" alt="img"></a></p>
<p><a href="https://13fe9ff.webp.li/2024/11/2fa7cd4b16b469345b8e628d88affae2.png"><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202412291104441.png" alt="img"></a></p>
<p><a href="https://13fe9ff.webp.li/2024/11/6a16b8185a435cf9b807dbcc894d92e1.png"><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202412291104466.png" alt="img"></a></p>
<h1 id=""><a href="#" class="headerlink" title=""></a></h1>]]></content>
  </entry>
  <entry>
    <title>R探长 甲骨文云开机脚本</title>
    <url>/undefined/d604b8c7.html</url>
    <content><![CDATA[<h1 id="原作者地址"><a href="#原作者地址" class="headerlink" title="原作者地址"></a>原作者地址</h1><p><a href="https://github.com/semicons/java_oci_manage/blob/main/md/install.md">https://github.com/semicons/java_oci_manage/blob/main/md/install.md</a></p>
<h1 id="debian12先要装依赖"><a href="#debian12先要装依赖" class="headerlink" title="debian12先要装依赖"></a>debian12先要装依赖</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo nano /etc/apt/sources.list</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">deb http://deb.debian.org/debian bullseye main</span><br><span class="line"></span><br><span class="line">deb-src http://deb.debian.org/debian bullseye main</span><br></pre></td></tr></table></figure>



<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">apt update</span><br><span class="line"></span><br><span class="line">apt install openjdk-17-jdk</span><br></pre></td></tr></table></figure>





<h1 id="更新环境"><a href="#更新环境" class="headerlink" title="更新环境"></a>更新环境</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">apt update -y &amp;&amp; apt install -y curl wget sudo</span><br></pre></td></tr></table></figure>





<h1 id="安装R探长"><a href="#安装R探长" class="headerlink" title="安装R探长"></a>安装R探长</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /home &amp;&amp; mkdir rbot &amp;&amp; cd rbot</span><br><span class="line"></span><br><span class="line">wget -O gz_client_bot.tar.gz https://github.com/semicons/java_oci_manage/releases/latest/download/gz_client_bot.tar.gz &amp;&amp; tar -zxvf gz_client_bot.tar.gz --exclude=client_config &amp;&amp; tar -zxvf gz_client_bot.tar.gz --skip-old-files client_config &amp;&amp; chmod +x sh_client_bot.sh</span><br></pre></td></tr></table></figure>







<h1 id="下载配置client-config模板"><a href="#下载配置client-config模板" class="headerlink" title="下载配置client_config模板"></a>下载配置client_config模板</h1><p><a href="https://github.com/kejilion/sh/blob/main/client_config">https://github.com/kejilion/sh/blob/main/client_config</a></p>
<h1 id="到甲骨文云下载API证书并获取API信息"><a href="#到甲骨文云下载API证书并获取API信息" class="headerlink" title="到甲骨文云下载API证书并获取API信息"></a>到甲骨文云下载API证书并获取API信息</h1><p><a href="https://cloud.oracle.com/">https://cloud.oracle.com/</a></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312080925335.png"></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312080925572.png"></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312080925945.png"></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312080925124.png"></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312080925243.png"></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312080925743.png"></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312080926332.png"></p>
<h1 id="key存放路径"><a href="#key存放路径" class="headerlink" title="key存放路径"></a>key存放路径</h1><p>key_file&#x3D;&#x2F;home&#x2F;rbot&#x2F;key.pem</p>
<h1 id="关注R探长频道和机器人"><a href="#关注R探长频道和机器人" class="headerlink" title="关注R探长频道和机器人"></a>关注R探长频道和机器人</h1><p>R探长频道：<a href="https://t.me/agentONE_R">https://t.me/agentONE_R</a></p>
<p>R探长机器人：<a href="https://t.me/radiance_helper_bot">https://t.me/radiance_helper_bot</a></p>
<h1 id="和机器人对话获取随机用户名和密码"><a href="#和机器人对话获取随机用户名和密码" class="headerlink" title="和机器人对话获取随机用户名和密码"></a>和机器人对话获取随机用户名和密码</h1><p>&#x2F;raninfo</p>
<h1 id="填写示例"><a href="#填写示例" class="headerlink" title="填写示例"></a>填写示例</h1><p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312080926509.png"></p>
<p>填写完成后</p>
<p>把<strong>client_config.txtclient_config.txt</strong>改为<strong>client_config</strong></p>
<p>把下载的pem文件改为<strong>key.pem</strong></p>
<p>然后上传到**&#x2F;home&#x2F;rbot&#x2F;**目录</p>
<h1 id="启动或重启"><a href="#启动或重启" class="headerlink" title="启动或重启"></a>启动或重启</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">bash sh_client_bot.sh </span><br></pre></td></tr></table></figure>



<h1 id="查看日志-ctrl-c退出日志"><a href="#查看日志-ctrl-c退出日志" class="headerlink" title="查看日志(ctrl + c退出日志)"></a>查看日志(ctrl + c退出日志)</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tail -f log_r_client.log </span><br></pre></td></tr></table></figure>



<h1 id="终止程序"><a href="#终止程序" class="headerlink" title="终止程序"></a>终止程序</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ps -ef | grep r_client.jar | grep -v grep | awk &#x27;&#123;print $2&#125;&#x27; | xargs kill -9 </span><br></pre></td></tr></table></figure>



<h1 id="卸载程序"><a href="#卸载程序" class="headerlink" title="卸载程序"></a>卸载程序</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rm -rf gz_client_bot.tar.gz client_config r_client.jar sh_client_bot.sh log_r_client.log debug-.log </span><br></pre></td></tr></table></figure>

<p>如也不需要JDK也可卸载：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">apt-get remove openjdk*</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>服务器</tag>
      </tags>
  </entry>
  <entry>
    <title>SEW MOVIPRO调试步骤</title>
    <url>/undefined/f5fecf87.html</url>
    <content><![CDATA[<h1 id="创建项目-添加设备并配置"><a href="#创建项目-添加设备并配置" class="headerlink" title="创建项目-添加设备并配置"></a>创建项目-添加设备并配置</h1><p>1、打开MOVITOOLS MotionStudio软件，创建项目；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520230954862.png" alt="image-20250520230940811"></p>
<p>2、用Ethernet线缆连接电脑和MoviPro控制器的service unit。点击“communication”，创建通讯方式；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231006027.png" alt="image-20250520230948605"></p>
<p>3、设备初始IP地址为192.168.10.4，将电脑IP地址与其设在同一网段下，点击“OK”即可建立Ethernet连接；如果设备IP地址已被更改，点击“edit”；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231113431.png" alt="image-20250520224324421"></p>
<p>4、添加新的IP地址；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231011496.png" alt="image-20250520224341744"></p>
<p>5、网络连接建立完成；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231122633.png" alt="image-20250520224354597"></p>
<p>6、扫描网络中的设备；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231131139.png" alt="image-20250520224412310"></p>
<p>7、设备扫描完成；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231137902.png" alt="image-20250520224428869"></p>
<p>8、点击设备属性；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231146176.png" alt="image-20250520224518855"></p>
<p>9、设置设备名称；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231200252.png" alt="image-20250520224532942"></p>
<p>8、进行设备硬件配置；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231153579.png" alt="image-20250520224548176"></p>
<p>11、选择需要配置的设备；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231210043.png" alt="image-20250520224559520"></p>
<p>12、点击“确定”；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231221238.png" alt="image-20250520224613368"></p>
<p>13、硬件配置完成；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231228687.png" alt="image-20250520224629428"></p>
<h1 id="配置电机参数"><a href="#配置电机参数" class="headerlink" title="配置电机参数"></a>配置电机参数</h1><p>14、进行power section初始化；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231239923.png" alt="image-20250520224645469"></p>
<p>15、点击“perform startup”，开始初始化；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231248547.png" alt="image-20250520224657723"></p>
<p>16、如果编码器中有电机的电子铭牌。选择接受编码器铭牌信息，点击“next”;<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231257891.png" alt="image-20250520224711463"></p>
<p>17、如果编码器中没有电机的电子铭牌。需要对照电机铭牌，将编码器的电子铭牌手动输入 ；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231305618.png" alt="image-20250520224722270"></p>
<p>18、对照电机铭牌，确认编码器型号，之后点击“next”；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231315922.png" alt="image-20250520224736776"></p>
<p>19、编码器配置完成，点击“next”，开始电机初始化；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231327038.png" alt="image-20250520224747069"></p>
<p>20、点击“startup set-1”,进行parameter set-1设置；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231334194.png" alt="image-20250520224801440"></p>
<p>21、选择“Execute complete start-up（执行完整的初始化）”；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231349687.png" alt="image-20250520224813064"></p>
<p>22、选择“Stand-alone motor &gt; Vector-controlled&#x2F;Servo（独立电机 &gt; 矢量控制&#x2F;伺服电机）”；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231358793.png" alt="image-20250520224822876"></p>
<p>23、参照电机铭牌，检查电机及编码器信息是否准确；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231410958.png" alt="image-20250520224837420"></p>
<p>24、检查电机类型信息；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231419435.png" alt="image-20250520224848845"></p>
<p>25、输入电源电压，定义参数P835“电机温度传感器的响应”，定义参数P530“电机温度传感器类型”（例如TF&#x2F;TH）；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231428193.png" alt="image-20250520224926604"></p>
<p>26、选择“Yes, I use the encoder.（使用编码器）”；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231436016.png" alt="image-20250520224938904"></p>
<p>27、操作模式选择“Positioning with IPOS（IPOS程序定位模式）”；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231442842.png" alt="image-20250520225002622"></p>
<p>28、选择“CFC（电流矢量控制）模式”；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231449119.png" alt="image-20250520225015957"></p>
<p>29、准确填写WEISS计算的load inertia（负载转动惯量），drive选择“With Backlash”；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231503423.png" alt="image-20250520225026004"></p>
<p>30、相关参数使用WEISS所提供参数表中的建议参数，其它参数选择“Apply Proposal（使用推荐值）”；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231511679.png" alt="image-20250520225036799"></p>
<p>31、转速控制器参数选择“Apply Proposal（使用推荐值）”；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231536940.png" alt="image-20250520225058582"></p>
<p>32、 相关参数使用WEISS所提供参数表中的建议参数，剩余参数选择“Apply Proposal（使用推荐值）”；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231544207.png" alt="image-20250520225108975"></p>
<p>33、点击“完成”，将初始化信息下载至控制器。如需配置parameter set-2，点击“download”，再进行参数包2的配置；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231552525.png" alt="image-20250520225121142"></p>
<p>34、初始化完全完成后，会跳出提示框，点击“确定”；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231600145.png" alt="image-20250520225138383"></p>
<h1 id="设置其他参数"><a href="#设置其他参数" class="headerlink" title="设置其他参数"></a>设置其他参数</h1><p>35、点击“parameter tree”，进行WEISS所提供参数表中其它相关参数的设置；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231606894.png" alt="image-20250520225149596"></p>
<p>36、例如，P911定位斜坡1，P913&#x2F;P914运转转速CW&#x2F;CCW，P916斜坡形式需设为“Jerk-Limited”；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231616480.png" alt="image-20250520225202404"></p>
<p>37、例如，P933突变时间；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231626629.png" alt="image-20250520225213331"></p>
<h1 id="手动控制"><a href="#手动控制" class="headerlink" title="手动控制"></a>手动控制</h1><p>38、参数配置为在线实时进行，完成后，点击“manual mode”手动模式；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231642297.png" alt="image-20250520225223204"></p>
<p>39、点击“Activate manual mode”，激活手动模式。此时插上jumper plug，设置速度，方向，即可进行转台正反停控制；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231656405.png" alt="image-20250520225234230"></p>
<p>40、手动模式下，转台运行正常后，将转台旋转至机械零点位置，点击“Deactivate manual mode”，退出手动模式，拔下jumper plug;	<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231705779.png" alt="image-20250520225246305"></p>
<h1 id="模块应用配置"><a href="#模块应用配置" class="headerlink" title="模块应用配置"></a>模块应用配置</h1><p>41、点击“Application Configurator”，进行模块应用配置；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231712618.png" alt="image-20250520225301025"></p>
<p>42、点击“Create new configuration”,创建新的模块应用配置；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231719182.png" alt="image-20250520225312698"></p>
<p>43、Application module 选择“transparent 6PD”;<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231726816.png" alt="image-20250520225325321"></p>
<p>44、点击“configuration”，完成后标志变绿色，点击“next”；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231734076.png" alt="image-20250520225340848"></p>
<p>45、点击“Save complete configuration”，可保存应用配置文件；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231740533.png" alt="image-20250520225402973"></p>
<p>46、点击“Document configuration”,可将应用配置保存为.pdf文件；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231747555.png" alt="image-20250520225422513"></p>
<p>47、若应用配置软件版本不同，选择“with controller software”，将软件和应用配置下载至设备。过程持续可能20分钟，注意电脑和设备此时不能断电；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231757343.png" alt="image-20250520225434600"></p>
<p>48、点击“确定”，重启设备;<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231804084.png" alt="image-20250520225445136"></p>
<p>49、应用配置完成；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231811471.png" alt="image-20250520225459428"></p>
<h1 id="配置AMA0801"><a href="#配置AMA0801" class="headerlink" title="配置AMA0801"></a>配置AMA0801</h1><p>50、创建AMA0801模块；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231822010.png" alt="image-20250520225524162"></p>
<p>51、点击“Load a configuration”，下载已保存的应用模块，或者点击“next”，开始初始化AMA0801模块；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231828978.png" alt="image-20250520225540943"></p>
<p>52、总线参数和控制器配置页面，“Application mode”选择“Binary setpoint”;<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231837827.png" alt="image-20250520225551310"></p>
<p>53、刻度计算页面，“Diameter&#x2F;spindle pitch”的单位选择“inc”;<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231844945.png" alt="image-20250520225604832"></p>
<p>54、参数和极限页面，若使用硬件限位开关，需将CW和CCW限位开关接到设备X5102_2，同时在软件上选择“YES”，“parameter tree”中将P603和P604端子功能设置为相应的限位功能。如果没有原点传感器，寻找参考点模式选择5，即将当前点作为原点。同时可根据WEISS参数表设置各种模式下极限速度；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231851607.png" alt="image-20250520225621665"></p>
<p>55、设置定位和点动模式高低速、加减速时间，以及 至设置设备行走各个位置的速度及加减速时间；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231859909.png" alt="image-20250520225632316"></p>
<p>56、设置定位窗口和设备行走的位置；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231908210.png" alt="image-20250520225645477"></p>
<p>57、设置cam switch；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231915883.png" alt="image-20250520225706528"></p>
<p>58、监控设置页面，建议使用其默认参数；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231922866.png" alt="image-20250520225717710"></p>
<p>59、点击“save configutation”，可保存AMA配置文件；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231930036.png" alt="image-20250520225728063"></p>
<p>60、点击“create documentation”，可将AMA配置保存为.pdf文件；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231936652.png" alt="image-20250520225738609"></p>
<p>61、点击“download”，将AMA应用模块配置下载至设备；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520231948547.png" alt="image-20250520225759312"></p>
<h1 id="总线控制"><a href="#总线控制" class="headerlink" title="总线控制"></a>总线控制</h1><p>62、下载完成后，软件自动跳至总线控制监视器；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520232005174.png" alt="image-20250520225808792"></p>
<p>63、点击“control”，确定弹出对话框；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520232013724.png" alt="image-20250520225818826"></p>
<p>64、插上jumper plug，控制模式选为“reference mode（寻参模式）”，点击“start”，即可将当前机械零点设为电气零点；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520232021615.png" alt="image-20250520225830987"></p>
<p>65、寻参结束后，PO2状态字中当前位置会变为0 inc;<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520232029384.png" alt="image-20250520225841553"></p>
<p>66、选择“jog mode（点动模式）”，即可模拟总线进行点动控制；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520232037665.png" alt="image-20250520225851198"></p>
<p>67、选择“positioning mode（定位模式）”，选择位置，即可模拟总线进行定位控制；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520232045036.png" alt="image-20250520225859987"></p>
<p>68、模拟总线控制转台运转正常之后，取消控制字，拔下jumper plug，点击“monitor”，退出控制模式；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520232051720.png" alt="image-20250520225909761"></p>
<h1 id="数据管理"><a href="#数据管理" class="headerlink" title="数据管理"></a>数据管理</h1><p>69、点击“Datamanagement”；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520232100983.png" alt="image-20250520225920732"></p>
<p>70、点击“upload”，将设备中数据备份到SD卡；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520232108798.png" alt="image-20250520225930647"></p>
<p>71、点击“start upload”，开始备份数据；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520232116388.png" alt="image-20250520225958505"></p>
<p>72、备份完成；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520232124675.png" alt="image-20250520225942038"></p>
<p>73、点击“export”，将power section参数导出；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520232133052.png" alt="image-20250520230018000"></p>
<p>74、点击“export”，将control and communication unit参数导出；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520232141408.png" alt="image-20250520230027041"></p>
<p>75、点击“save”，保存项目；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520232149043.png" alt="image-20250520230037252"></p>
<p>76、点击“export”，可将此项目导出为.exe文件；<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520232157540.png" alt="image-20250520230047342"></p>
<h1 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h1><p>77、若需初始化控制器，可在“parameter tree”P802中选择“delivery state”，将控制器还原为出厂状态。<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250520232205573.png" alt="image-20250520230056017"></p>
]]></content>
  </entry>
  <entry>
    <title>SEW Scope曲线监控</title>
    <url>/undefined/c4294855.html</url>
    <content><![CDATA[<h3 id="打开备份的SEW文件，点击Scope"><a href="#打开备份的SEW文件，点击Scope" class="headerlink" title="打开备份的SEW文件，点击Scope"></a>打开备份的SEW文件，点击Scope</h3><p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202501051439031.png" alt="image-20250105143536600"></p>
<h3 id="进入Scope界面"><a href="#进入Scope界面" class="headerlink" title="进入Scope界面"></a>进入Scope界面</h3><p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202501051439072.png" alt="image-20250105143550152"></p>
<h3 id="在菜单栏中点击新建文件按钮，并新创建一个模板"><a href="#在菜单栏中点击新建文件按钮，并新创建一个模板" class="headerlink" title="在菜单栏中点击新建文件按钮，并新创建一个模板"></a>在菜单栏中点击新建文件按钮，并新创建一个模板</h3><p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202501051439108.png" alt="image-20250105143632298"></p>
<h3 id="模板中设置好监控选项，并保存为名称为Scope的-sct文件"><a href="#模板中设置好监控选项，并保存为名称为Scope的-sct文件" class="headerlink" title="模板中设置好监控选项，并保存为名称为Scope的.sct文件"></a>模板中设置好监控选项，并保存为名称为Scope的.sct文件</h3><p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202501051439154.png" alt="image-20250105143656071"></p>
<h3 id="再次在Scope菜单栏中点击新建，在模板中选择我们创建的Scope模板，然后点OK，进入Scope监控界面"><a href="#再次在Scope菜单栏中点击新建，在模板中选择我们创建的Scope模板，然后点OK，进入Scope监控界面" class="headerlink" title="再次在Scope菜单栏中点击新建，在模板中选择我们创建的Scope模板，然后点OK，进入Scope监控界面"></a>再次在Scope菜单栏中点击新建，在模板中选择我们创建的Scope模板，然后点OK，进入Scope监控界面</h3><p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202501051439188.png" alt="image-20250105143719967"></p>
<h3 id="进入Scope界面后点击记录设置，出现我们刚才设置的模板，点击Start按钮准备记录Scope曲线。在HMI上手动操作滑台动作就会自动触发记录运行曲线"><a href="#进入Scope界面后点击记录设置，出现我们刚才设置的模板，点击Start按钮准备记录Scope曲线。在HMI上手动操作滑台动作就会自动触发记录运行曲线" class="headerlink" title="进入Scope界面后点击记录设置，出现我们刚才设置的模板，点击Start按钮准备记录Scope曲线。在HMI上手动操作滑台动作就会自动触发记录运行曲线"></a>进入Scope界面后点击记录设置，出现我们刚才设置的模板，点击Start按钮准备记录Scope曲线。在HMI上手动操作滑台动作就会自动触发记录运行曲线</h3><p><strong>注意：根据模板里面的设置，最大记录时间为40.96s，因此来回滑动的时间需要控制在40s以内，否则超时的那部分运行曲线无法获取。如果需要调整最大记录时间，可以调整Sample Time。</strong></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202501051439213.png" alt="image-20250105143805277"></p>
]]></content>
  </entry>
  <entry>
    <title>SEW-MDX61B变频器定位控制调试流程</title>
    <url>/undefined/e4c152dc.html</url>
    <content><![CDATA[<h1 id="一、-调试准备"><a href="#一、-调试准备" class="headerlink" title="一、 调试准备"></a>一、 调试准备</h1><h2 id="操作系统及调试软件"><a href="#操作系统及调试软件" class="headerlink" title="操作系统及调试软件"></a>操作系统及调试软件</h2><p>操作系统：Windows 7 64 位操作系统</p>
<p>调试软件：MotionStudio 6.10 SP1(6.1.0.1)</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303040926661.png" alt="image-20230304092617110"></p>
<h2 id="硬件系统"><a href="#硬件系统" class="headerlink" title="硬件系统"></a>硬件系统</h2><p>变频器:MDX61B0015-5A3</p>
<p>SEW 电机:DRL80S4BE2HR&#x2F;FG&#x2F;TF&#x2F;AS7W</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303040926342.png" alt="image-20230304092645922"></p>
<p>变频器接线图</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303040927995.png" alt="image-20230304092703871"></p>
<p>电机接线图</p>
<h1 id="二、-变频器调试"><a href="#二、-变频器调试" class="headerlink" title="二、 变频器调试"></a>二、 变频器调试</h1><h2 id="连接变频器"><a href="#连接变频器" class="headerlink" title="连接变频器"></a>连接变频器</h2><p>双击桌面图标</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303040952856.png" alt="image-20230304095222325"></p>
<p>弹出如下对话框：</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303040953210.png" alt="image-20230304095259154"></p>
<p>选择通讯方式</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303040953625.png" alt="image-20230304095323312"></p>
<p>SEW 软件提供如下几种方式与变频器进行连接（如图所示），常用的有如下几种方式：</p>
<p>1、 Serial：SEW 专用的编程电缆，可对变频器进行所有操作，电缆长度有限，有距离限制；</p>
<p>2、 Ethernet：普通网线即可连接调试，可使用无线路由器进行连接调试，现场使用方便，但部分操作无法通过网线实现；</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303040953996.png" alt="image-20230304095350111"></p>
<p>本例中使用 Ethernet 方式进行调试，还需进行如下设置；点击“Edit”按钮，出现如下画面：</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303040954982.png" alt="image-20230304095406063"></p>
<p>点击“Network adapter”按钮，选择当前与变频器连接的网卡；</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303040954180.png" alt="image-20230304095421274"></p>
<p>通讯设置完成后，扫描网络，连接 SEW 变频器；</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303040954245.png" alt="image-20230304095434251"></p>
<p>扫描出的设备如下图所示；</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303040955356.png" alt="image-20230304095521462"></p>
<p>到这里 MotionStudio 软件已经和 SEW 变频器之间建立了连接；</p>
<h2 id="电机初始化设置"><a href="#电机初始化设置" class="headerlink" title="电机初始化设置"></a>电机初始化设置</h2><p>在“Working with the unit”选项卡中选择“Startup”按钮；</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303040955983.png" alt="image-20230304095559180"></p>
<p>弹出参数初始化界面，点击“Perform startup”按钮进行参数初始化操作；</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303040956383.png" alt="image-20230304095613347"></p>
<p>点击“Start-up Set”按钮；</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303040956901.png" alt="image-20230304095626113"></p>
<p>选择“Execute complete start-up”选项，点击“下一步”；</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303040956529.png" alt="image-20230304095637652"></p>
<p>选择变频器与电机之间的控制方式：</p>
<p>1、Stand-alone motor：独立电机控制（常用控制方式）</p>
<p>1.1、Standard（V&#x2F;F）：VF 曲线控制（简单的速度控制选用）</p>
<p>1.2、Vector-controlled&#x2F;Servo：矢量控制&#x2F;伺服（带有编码器的选用）</p>
<p>2、Several identical motors：多个相同电机控制</p>
<p>3、Several different motors：多个不同电机控制</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303040956041.png" alt="image-20230304095652122"></p>
<p>电机铭牌参数</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303040957275.png" alt="image-20230304095730201"></p>
<p>选择电机类型；</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303040957021.png" alt="image-20230304095745060"></p>
<p>按照电机铭牌参数填写下列参数；</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303040958901.png" alt="image-20230304095817473"></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20230519103325.jpg"></p>
<p>选择是否使用编码器；</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303040958326.png" alt="image-20230304095829175"></p>
<p>选择应用模式</p>
<p>1、 Speed control: 速度控制</p>
<p>2、 Use hoist:举升控制（如升降机、吊具等选择此项）</p>
<p>3、 Positioniong with IPOS: IPOS-位置控制（精定位控制设备）</p>
<p>4、 Use torque control: 转矩控制（电机恒转矩输出应用）</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303040958826.png" alt="image-20230304095851579"></p>
<p>选择 CFC&#x2F;VFC 控制方式</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303040959914.png" alt="image-20230304095903084"></p>
<p>CFC 与 VFC 控制方式的区别（<strong>建议一般应用时选择 CFC，滚床、升降机、吊具等举升设备应用时选择 VFC</strong>）</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303040959527.png" alt="image-20230304095927588"></p>
<p>选择 CFC 控制模式后，出现如下界面；</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303040959383.png" alt="image-20230304095941380"></p>
<p>参数说明:</p>
<p>1、 Load inertia:负载惯量，该参数一般由电机厂家提供，如未提供该参数，可由以下方法计算：</p>
<p>a、 Jx&#x3D;m*r2，m&#x3D;质量，r&#x3D;半径；</p>
<p>b、 单击“Testing”，让设备在实际工作状态运动几次，这时变频器会自动上传测得的数据；</p>
<p>c、 经验值，水平运动设备的负载惯量为 J0 motor 的 8-15 倍，举升运动设备的负载惯量为 J0 motor 的 3-5 倍；</p>
<p>2、 Drive:输入电动机是否有减速机；</p>
<p>3、 Brake:输入电动机是否有制动；</p>
<p>4、 Z fan:输入电动机是否有高惯量风扇；</p>
<p>设置电机参数</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312111103582.png" alt="image-20230304100030601"></p>
<p>速度控制参数，建议使用系统推荐参数</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303041000456.png" alt="image-20230304100044388"></p>
<p>设置变频器参数</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303041001369.png" alt="image-20230304100103567"></p>
<p>设置完成，下载参数至变频器;（注:需在强电断开时才能下载）</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303041001845.png" alt="image-20230304100113996"></p>
<h2 id="MotionStudio-驱动电机"><a href="#MotionStudio-驱动电机" class="headerlink" title="MotionStudio 驱动电机"></a>MotionStudio 驱动电机</h2><p>设置完成变频器参数后，使用 MotionStudio 软件手动来驱动电动机，用来验证电机接线、抱闸接线、编码器接线的正确性及机械可动性；</p>
<p>在“Working with the unit”选项卡中选择“Manual mode”按钮；</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303041001886.png" alt="image-20230304100152963"></p>
<p>弹出如下画面</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303041002321.png" alt="image-20230304100211350"></p>
<h2 id="扩展总线定位模式"><a href="#扩展总线定位模式" class="headerlink" title="扩展总线定位模式"></a>扩展总线定位模式</h2><p>在“Working with the unit”选项卡中选择“Extended positioning via bus”按钮；</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303041002042.png" alt="image-20230304100235226"></p>
<p>设置通讯方式及通讯超时响应</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303041002291.png" alt="image-20230304100250403"></p>
<p>外部机械参数设定，该参数应由机械设计人员提供，参数设置只影响编码器在 PLC 中的反馈值；</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303041003278.png" alt="image-20230304100307195"></p>
<p>设置软限位，速度，寻零方式等</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303041003888.png" alt="image-20230304100322091"></p>
<p>设置完成，下载至 SEW 变频器；下载完成后需修改外部 IO 端子定义；</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303041003578.png" alt="image-20230304100333912"></p>
<p>外部 IO 端子设置如下图所示，DI00 系统默认为外部使能，无法修改，在使用外部总线通讯控制时，DI00 端子需置“1”；</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303041003141.png" alt="image-20230304100346059"></p>
<p>上图外部端子定义如下：</p>
<p>DI01：正转限位(常闭信号，高电平有效)</p>
<p>DI02：反转限位(常闭信号，高电平有效)</p>
<p>DI03：参考零点</p>
<p>实际应用过程中需根据外部硬件接线来定义外部 IO 端子功能；</p>
<p>下载完成后，进入如下界面；</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303041004444.png" alt="image-20230304100417286"></p>
<p>控制字&amp;状态字说明</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303041050162.png" alt="image-20230304105042971"></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303041051938.png" alt="image-20230304105059924"></p>
<p>控制字说明</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303041051439.png" alt="image-20230304105111411"></p>
<p>Mode high 与 Mode low 两位组合使用，表示三种控制模式：</p>
<p>10：寻零模式；01：JOG 模式；11：定位模式；</p>
<p>状态字说明</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303041051178.png" alt="image-20230304105123436"></p>
<h2 id="寻零模式说明"><a href="#寻零模式说明" class="headerlink" title="寻零模式说明"></a>寻零模式说明</h2><p>扩展总线定位模式设定完成后，变频器可在定位模式下运转，但还需要根据现场实际情况设定零点，确定寻零方式；SEW 变频器中提供了 9 种寻零的方式，需在 903 参数中设定；</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303041051271.png" alt="image-20230304105152349"></p>
<p>具体寻零型式如下列所述：</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303041052868.png" alt="image-20230304105213054"></p>
<p>除了型式 8，参考运行必须在变频器“Ready”和“Enable”状态才可进行；</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303041052111.png" alt="image-20230304105231116"></p>
<h1 id="AMA0801配置"><a href="#AMA0801配置" class="headerlink" title="AMA0801配置"></a>AMA0801配置</h1><h2 id="一字库位"><a href="#一字库位" class="headerlink" title="一字库位"></a>一字库位</h2><p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202305191047.png" alt="202305191047"></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202305191048.png" alt="202305191048"></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202305191049.png" alt="202305191049"></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202305191050.png" alt="202305191050"></p>
<h2 id="校零"><a href="#校零" class="headerlink" title="校零"></a>校零</h2><p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20230519105000.jpg" alt="20230519105000"></p>
<h1 id="附录-1：转台提速使用参数"><a href="#附录-1：转台提速使用参数" class="headerlink" title="附录 1：转台提速使用参数"></a>附录 1：转台提速使用参数</h1><p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303041055137.png" alt="image-20230304105509097"></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303041055825.png" alt="image-20230304105516864"></p>
<p>扩展总线定位模式中的设置：</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303041055879.png" alt="image-20230304105536031"></p>
<h1 id="附录-2：举升设备相关参数"><a href="#附录-2：举升设备相关参数" class="headerlink" title="附录 2：举升设备相关参数"></a>附录 2：举升设备相关参数</h1><p>升降设备需设置抱闸相关参数</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303041055375.png" alt="image-20230304105555636"></p>
<p>731：电机启动抱闸打开参数，变频器启动 0.15 秒输出正常扭矩，此时变频器认为抱闸已经打开，参数默认值 0.1，在升降设备中，若启动时设备有向下掉的动作，<strong>此参数可适当减小</strong>;</p>
<p>732：电机停止抱闸失电参数，在抱闸断电 0.35 秒后，变频器才停止工作，参数默认值 0.2，若升降设备停止时设备有向下掉的动作，<strong>此参数可适当增大</strong>;</p>
<h1 id="附录-3：常见故障解决方案"><a href="#附录-3：常见故障解决方案" class="headerlink" title="附录 3：常见故障解决方案"></a>附录 3：常见故障解决方案</h1><h2 id="1、-变频器-F08-故障，转速监视；"><a href="#1、-变频器-F08-故障，转速监视；" class="headerlink" title="1、 变频器 F08 故障，转速监视；"></a>1、 变频器 F08 故障，转速监视；</h2><p>故障现象：电机运行一段时间（时间很短，&lt;1s）,变频器即报 F08 故障；</p>
<p>故障原因：编码器连接或电机旋转方向不正确；</p>
<p>临时措施：修改 P500 或 P502 参数（关闭转速监控）；</p>
<p>后期解决：检查电机相位；检查编码器连接，成对调换 A&#x2F;A-和 B&#x2F;B-;</p>
<h2 id="2、变频器-F14-故障，编码器；"><a href="#2、变频器-F14-故障，编码器；" class="headerlink" title="2、变频器 F14 故障，编码器；"></a>2、变频器 F14 故障，编码器；</h2><p>故障现象：变频器启动运行即报 F14 故障；</p>
<p>故障原因：编码器电缆屏蔽未正确连接；</p>
<p>临时措施：断开变频器供电电源，等待一段时间再上电（如无效则需立即检查编码屏蔽）；</p>
<p>后期解决：检查编码器屏蔽层连接；编码器电缆是否存在强电干扰；</p>
<h1 id="附录4：相关文档"><a href="#附录4：相关文档" class="headerlink" title="附录4：相关文档"></a>附录4：相关文档</h1><p>MDX61B应用手册：<a href="https://www.sew-eurodrive.cn/os/dud/?tab=documents&country=CN&language=zh_cn&doc_lang=zh-CN,en-US&doc_type=G,D,F,CD,DD&search=FA362820">https://www.sew-eurodrive.cn/os/dud/?tab=documents&amp;country=CN&amp;language=zh_cn&amp;doc_lang=zh-CN,en-US&amp;doc_type=G,D,F,CD,DD&amp;search=FA362820</a></p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>SEW</tag>
      </tags>
  </entry>
  <entry>
    <title>SICK区扫调试步骤</title>
    <url>/undefined/af80d2f7.html</url>
    <content><![CDATA[<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303041357323.JPG" alt="幻灯片1"><br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303041357782.JPG" alt="幻灯片2"></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303041358093.JPG" alt="幻灯片3"></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303041358392.JPG" alt="幻灯片4"></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303041358744.JPG" alt="幻灯片5"></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303041358489.JPG" alt="幻灯片6"></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303041358180.JPG" alt="幻灯片7"></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303041358561.JPG" alt="幻灯片8"></p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>SICK</tag>
      </tags>
  </entry>
  <entry>
    <title>V2,R.a,y.A——新一代Linux客户端安装配置教程</title>
    <url>/undefined/a53fea94.html</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>上一次我们介绍的Qv2ray还是有一些同学不会安装，而且Qv2ray也不再更新了，所以我就另外去找了，刚好找到一个安装配置都非常简单的软件，也就是本章的主角——v2rayA</p>
<h1 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h1><p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304100749200.png" alt="img"></p>
<p>在官网的介绍中我们可以发现，v2rayA是一款非常强大的软件，它甚至能提供透明代理（几乎完全全局代理，目标服务器检测不到代理服务器）。好我就精简一下官方的教程教给大家怎么去安装配置Qv2ray，官网我会放到文章末尾。</p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>首页：<a href="https://v2raya.org/">https://v2raya.org/</a></p>
<h2 id="安装v2rayA"><a href="#安装v2rayA" class="headerlink" title="安装v2rayA"></a>安装v2rayA</h2><p>方法一：通过软件源安装<br>添加公钥</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -qO - https://apt.v2raya.org/key/public-key.asc | sudo tee /etc/apt/keyrings/v2raya.asc</span><br></pre></td></tr></table></figure>

<p>添加 V2RayA 软件源</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &quot;deb [signed-by=/etc/apt/keyrings/v2raya.asc] https://apt.v2raya.org/ v2raya main&quot; | sudo tee /etc/apt/sources.list.d/v2raya.list</span><br><span class="line">sudo apt update</span><br></pre></td></tr></table></figure>

<p>安装 V2RayA</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install v2raya v2ray ## 也可以使用 xray 包</span><br></pre></td></tr></table></figure>

<p>方法二：手动安装 deb 包</p>
<p>下载 deb 包</p>
<p><a href="https://github.com/v2rayA/v2rayA/releases">点我下载</a></p>
<p>然后可以使用 Gdebi、QApt 等图形化工具来安装，也可以使用命令行：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install /path/download/installer_debian_xxx_vxxx.deb ### 自行替换 deb 包所在的实际路径</span><br></pre></td></tr></table></figure>

<h1 id="启动-配置"><a href="#启动-配置" class="headerlink" title="启动&amp;配置"></a>启动&amp;配置</h1><h2 id="开机自启"><a href="#开机自启" class="headerlink" title="开机自启"></a>开机自启</h2><p>启动 v2rayA</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo systemctl start v2raya.service</span><br></pre></td></tr></table></figure>

<p>设置开机自动启动</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo systemctl enable v2raya.service</span><br></pre></td></tr></table></figure>

<h2 id="软件配置"><a href="#软件配置" class="headerlink" title="软件配置"></a>软件配置</h2><p>v2rayA的UI是以网页的形式呈现的，所以我们打开浏览器，访问v2rayA的地址<a href="http://localhost:2017/">http://localhost:2017/</a></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304100749118.png" alt="img"></p>
<p>首次打开需要创建一个管理员账号，如果遗忘，使用下面的命令重置。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo v2raya --reset-password</span><br></pre></td></tr></table></figure>

<p>以创建或导入的方式导入节点，导入支持节点链接、订阅链接、扫描二维码和批量导入等方式。</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304100749250.png" alt="img"></p>
<p>导入成功后，节点将显示在 SERVER 中，先选择要连接的节点，再点击左上角的就绪按钮就能开启代理了。</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304100749288.png" alt="img"></p>
<p>点击右边的设置，推荐像我一样设置，也是官方推荐的设置</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304100749956.png" alt="img"></p>
<p>但是还没有结束，在某些不能自动配置代理的系统中，还需要手动进行代理，以Ubuntu为例（Ubuntu无需手动设置代理，仅为了演示），进入设置–&gt;网络–&gt;网络代理–&gt;手动代理，默认端口没有改动的话按照我的填写</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304100749118.png" alt="img"></p>
<p>v2rayA的默认代理端口是</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304100755201.png" alt="img"></p>
<p>到此就完成了整个安装与配置，本篇v2rayA安装配置在别的Linux中仍然适用，如果遇到什么问题推荐看一下官网的文档。</p>
<p>官网：<a href="https://v2raya.org/">点我直达</a></p>
]]></content>
      <categories>
        <category>上网</category>
      </categories>
      <tags>
        <tag>v2</tag>
      </tags>
  </entry>
  <entry>
    <title>VPS一键脚本分享</title>
    <url>/undefined/2419758f.html</url>
    <content><![CDATA[<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202305051611537.png"></p>
<p><strong>一键脚本</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">apt update -y &amp;&amp; apt install -y wget sudo</span><br><span class="line"></span><br><span class="line">wget --no-check-certificate -O tcpx.sh https://raw.githubusercontent.com/ylx2016/Linux-NetSpeed/master/tcpx.sh</span><br><span class="line"></span><br><span class="line">chmod +x tcpx.sh</span><br><span class="line"></span><br><span class="line">./tcpx.sh</span><br></pre></td></tr></table></figure>



<p><strong>以后运行</strong>**</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./tcpx.sh</span><br></pre></td></tr></table></figure>



<p><strong>注意</strong></p>
<p>更新内核需要谨慎 使用后台运行模式最稳妥，我在SSH自动中断后失联了一台服务器。</p>
<p>推荐使用tmux后台工具</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>服务器</tag>
      </tags>
  </entry>
  <entry>
    <title>Xray最新协议Reality搭建</title>
    <url>/undefined/428849a6.html</url>
    <content><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>为了应对 TLS in TLS 和指纹识别等阻断或封禁的风险，Xray-core 团队推出了 Vision 和 Reality 两种新颖的技术方案。它们能够有效地隐藏和保护流量的特征，提高安全性和稳定性。</p>
<p><a href="https://github.com/XTLS/Xray-core/discussions/1295#discussion-4523044">Vision原理</a></p>
<p><a href="https://www.v2ray-agent.com/archives/1679292836379">Reality原理</a></p>
<p>如果你和我一样小白，那我用我的理解方式给大家解释一下，不一定准确，但方便理解。</p>
<p>1.之前TLS或者XTLS已经被墙识别，所以有了阻断或者封你443端口的情况，也就是所谓的TLS in TLS阻断</p>
<p>2、后面Vision 的协议，能解决TLS in TLS阻断，但还不够完美。</p>
<p>3、Xray1.80版本推出了最新的Reality协议，再配合之前的Vision协议，组合成了目前最牛的协议“<strong>VLESS-Vision-uTLS-REALITY”</strong></p>
<p><strong>VLESS-Vision-uTLS-REALITY优势</strong></p>
<p>1、新协议不容易被阻断或封锁</p>
<p>2、可以省去一个域名，也不用配置ssl证书</p>
<p><strong>VLESS-Vision-uTLS-REALITY劣势</strong></p>
<p>1、软件端也必须升级到xray1.80版本，VPS也要是xray1.80版本，否则不能正常使用。</p>
<p>2、部分软件目前（截至2023年4月7日）还不支持此种协议，例如Shadowrocket，passwall等插件，如果没更新，在一键导入的时候也会BUG。</p>
<p>3、理论上完美，但还未经历过实战，例如开XX大会。</p>
<p>4、Reality不支持CDN</p>
<h1 id="搭建开始"><a href="#搭建开始" class="headerlink" title="搭建开始"></a>搭建开始</h1><h2 id="方法一：常规搭建"><a href="#方法一：常规搭建" class="headerlink" title="方法一：常规搭建"></a>方法一：常规搭建</h2><p>老规矩，用<a href="https://www.v2ray-agent.com/">mack-a</a>大佬的八合一的一键脚本，这里只演示无域名的安装方式，因为这个也是<strong>VLESS-Vision-uTLS-REALITY</strong>的核心亮点</p>
<p>PS:如果你之前用过mack-a大佬八合一脚本，在执行下面这个命令后，<strong>先选择删除脚本，再重新安装</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -P /root -N --no-check-certificate &quot;https://raw.githubusercontent.com/mack-a/v2ray-agent/master/install.sh&quot; &amp;&amp; chmod 700 /root/install.sh &amp;&amp; /root/install.sh</span><br></pre></td></tr></table></figure>

<p>开始安装</p>
<p>vasma-&gt;执行脚本后-&gt;直接选择**[5.REALITY管理]**</p>
<p>1、端口直接输入<strong>443</strong></p>
<p>2、生成配置回落的域名，参考以下域名，结尾必须加 :443</p>
<blockquote>
<p># 域名推荐<br>gateway.icloud.com<br>itunes.apple.com<br>download-installer.cdn.mozilla.net<br>airbnb【这个不同的区有不同的域名建议自己搜索】<br>addons.mozilla.org<br><a href="http://www.microsoft.com/">www.microsoft.com</a><br><a href="http://www.lovelive-anime.jp/">www.lovelive-anime.jp</a></p>
<p># CDN<br>Apple:<br>swdist.apple.com<br>swcdn.apple.com<br>updates.cdn-apple.com<br>mensura.cdn-apple.com<br>osxapps.itunes.apple.com<br>aod.itunes.apple.com</p>
<p>Microsoft:<br>cdn-dynmedia-1.microsoft.com<br>update.microsoft<br>software.download.prss.microsoft.com</p>
<p>Amazon:<br>s0.awsstatic.com<br>d1.awsstatic.com<br>images-na.ssl-images-amazon.com<br>m.media-amazon.com<br>player.live-video.net</p>
<p>Google:<br>dl.google.com</p>
</blockquote>
<p>3、然后重复一次你刚才输入的那个域名，然后一路回车即可。</p>
<p>**PS：**本教程来源为<a href="https://www.v2ray-agent.com/">mack-a</a> 的教程，<a href="https://www.v2ray-agent.com/archives/1680104902581">原文链接</a></p>
<h2 id="方法二：X-UI面板搭建"><a href="#方法二：X-UI面板搭建" class="headerlink" title="方法二：X-UI面板搭建"></a>方法二：X-UI面板搭建</h2><p>作者地址 <a href="https://github.com/FranzKafkaYu/x-ui/">https://github.com/FranzKafkaYu/x-ui/</a></p>
<p>x-ui原理比较简单，有个面板，可以随意折腾各种协议</p>
<p>1、安装面板</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -Ls https://raw.githubusercontent.com/FranzKafkaYu/x-ui/master/install.sh)</span><br></pre></td></tr></table></figure>

<p>2、添加入站列表</p>
<p>参考下图</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304100740286.jpeg" alt="img"></p>
<p>3、复制链接<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304100740534.jpeg" alt="img"></p>
<h1 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h1><h2 id="v2rayN"><a href="#v2rayN" class="headerlink" title="v2rayN"></a>v2rayN</h2><ul>
<li><p><strong>支持windows</strong></p>
</li>
<li><p><a href="https://github.com/2dust/v2rayN/releases"><strong>点击下载</strong></a></p>
</li>
</ul>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304090833804.png" alt="img"></p>
<p>最后最后需要强调的</p>
<p><strong>不是用了这个协议就一定不会被封，世界上没有100%的事情</strong></p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>VPS</tag>
      </tags>
  </entry>
  <entry>
    <title>git每次操作提示输入密码问题解决</title>
    <url>/undefined/21c693ea.html</url>
    <content><![CDATA[<p><strong>提示：git每次pull提示需要密码</strong></p>
<hr>
<h1 id="错误提示"><a href="#错误提示" class="headerlink" title="错误提示"></a>错误提示</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Administrator@DEEP MINGW64 /f/code/xxx-service (master)</span><br><span class="line">$ git pull</span><br><span class="line">git@gitlab.xxx.com&#x27;s password:</span><br></pre></td></tr></table></figure>

<h1 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h1><p>只提示输入密码的情况，一般是秘钥验证失败。二种情况</p>
<hr>
<h1 id="1、公钥验证错误"><a href="#1、公钥验证错误" class="headerlink" title="1、公钥验证错误"></a>1、公钥验证错误</h1><p>  解决方法如下，以github为例</p>
<p>  在<a href="https://github.com/settings/keys">https://github.com/settings/keys</a> 界面，将生成的<a href="https://so.csdn.net/so/search?q=%E5%85%AC%E9%92%A5&spm=1001.2101.3001.7020">公钥</a>添加到SSH keys项中</p>
<p>  如没有则使用<a href="https://so.csdn.net/so/search?q=ssh-keygen&spm=1001.2101.3001.7020">ssh-keygen</a>命令生成</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;Your Email Address&quot; -f &quot;~/.ssh/gitlab_id_rsa&quot;</span><br></pre></td></tr></table></figure>

<h1 id="2、私钥验证错误"><a href="#2、私钥验证错误" class="headerlink" title="2、私钥验证错误"></a>2、私钥验证错误</h1><p>git拉取代码时没有配置私钥认证</p>
<p>使用以下命令添加认证到ssh</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-add ~/.ssh/gitlab_id_rsa</span><br></pre></td></tr></table></figure>

<p>使用以上命令，只能对当前环境生效，重启或新开终端会继续提示输入密码</p>
<p>永久解决：在<code>~/.ssh/config</code>文件中（没有则新建），指定对应git服务使用的认证秘钥文件即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># GitLab.com 密钥</span><br><span class="line">Host github.com</span><br><span class="line">  Preferredauthentications publickey</span><br><span class="line">  IdentityFile ~/.ssh/github_id_rsa</span><br><span class="line"># GitLab.com 密钥</span><br><span class="line">Host gitlab.xxx.com</span><br><span class="line">  Preferredauthentications publickey</span><br><span class="line">  IdentityFile ~/.ssh/gitlab_id_rsa</span><br></pre></td></tr></table></figure>



<hr>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ol>
<li>直接提示输入密码的，为秘钥认证失败，使用以上方法即可解决</li>
<li>提示输入账号和密码的，为账号认证失败，使用<code>git config --global credential.helper store</code>命令，可输入一次密码后永久存储</li>
</ol>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>hysteria2与reality共存安装</title>
    <url>/undefined/756577dc.html</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>1.目前伪装最好的两种协议，一个代表tcp协议（reality）的目前巅峰，一个新型UDP协议（hysteria2）的宠儿。<br>2.这次用的sing-box搭建 <a href="https://sing-box.sagernet.org/zh">https://sing-box.sagernet.org/zh</a> 因为简单。之前一直用八合一，最大的问题就是各种伪装后，机器就只能拿来科学上网了，因为安装Nginx，搭建个网页啥的都很麻烦。<br>3.教程亮点，无需自备域名。<br>3.passwall发现没有类似的设置教程，所以出一个。</p>
<h1 id="安装sing-box"><a href="#安装sing-box" class="headerlink" title="安装sing-box"></a>安装sing-box</h1><p>直接安装预发布版（支持hysteria2）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash -c &quot;$(curl -L https://sing-box.vercel.app)&quot; @ install --beta</span><br></pre></td></tr></table></figure>

<p>如何需要卸载</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash -c &quot;$(curl -L https://sing-box.vercel.app)&quot; @ remove</span><br></pre></td></tr></table></figure>

<p>等会用得到的指令<br>重启</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart sing-box</span><br></pre></td></tr></table></figure>

<p>状态</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl status sing-box</span><br></pre></td></tr></table></figure>

<p>实时日志</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">journalctl -u sing-box -o cat -f</span><br></pre></td></tr></table></figure>

<h1 id="服务端vps搭建"><a href="#服务端vps搭建" class="headerlink" title="服务端vps搭建"></a>服务端vps搭建</h1><p><strong>自签证书申请，这里申请的是bing.com，申请了10年，可以用到你vps商家跑路了</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir -p /etc/hysteria &amp;&amp; openssl ecparam -genkey -name prime256v1 -out /etc/hysteria/private.key &amp;&amp; openssl req -new -x509 -days 3650 -key /etc/hysteria/private.key -out /etc/hysteria/cert.pem -subj &quot;/CN=bing.com&quot;</span><br></pre></td></tr></table></figure>

<p><strong>搭建组合选择</strong><br>参考网站 <a href="https://github.com/chika0801/sing-box-examples">https://github.com/chika0801/sing-box-examples</a> 后期可以根据需求自由组合<br>为什么选择reality和hysteria2<br>1.reality目前是TCP协议里面号称最安全的<br>2.hysteria2作者是最用心的，教程写得很清楚 <a href="https://v2.hysteria.network/zh/">https://v2.hysteria.network/zh/</a><br>开始<br>编辑confing文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nano /usr/local/etc/sing-box/config.json</span><br></pre></td></tr></table></figure>

<p>按照以下修改</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;inbounds&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;type&quot;: &quot;hysteria2&quot;,</span><br><span class="line">            &quot;listen&quot;: &quot;::&quot;,</span><br><span class="line">            &quot;listen_port&quot;: 8443,</span><br><span class="line">            &quot;users&quot;: [</span><br><span class="line">                &#123;</span><br><span class="line">                    &quot;password&quot;: &quot;&quot; //你的密码</span><br><span class="line">                &#125;</span><br><span class="line">            ],</span><br><span class="line">            &quot;masquerade&quot;: &quot;https://bing.com&quot;,</span><br><span class="line">            &quot;tls&quot;: &#123;</span><br><span class="line">                &quot;enabled&quot;: true,</span><br><span class="line">                &quot;alpn&quot;: [</span><br><span class="line">                    &quot;h3&quot;</span><br><span class="line">                ],</span><br><span class="line">                &quot;certificate_path&quot;: &quot;/etc/hysteria/cert.pem&quot;,</span><br><span class="line">                &quot;key_path&quot;: &quot;/etc/hysteria/private.key&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;type&quot;: &quot;vless&quot;,</span><br><span class="line">            &quot;listen&quot;: &quot;::&quot;,</span><br><span class="line">            &quot;listen_port&quot;: 443,</span><br><span class="line">            &quot;users&quot;: [</span><br><span class="line">                &#123;</span><br><span class="line">                    &quot;uuid&quot;: &quot;&quot;, //vps上执行sing-box generate uuid</span><br><span class="line">                    &quot;flow&quot;: &quot;xtls-rprx-vision&quot;</span><br><span class="line">                &#125;</span><br><span class="line">            ],</span><br><span class="line">            &quot;tls&quot;: &#123;</span><br><span class="line">                &quot;enabled&quot;: true,</span><br><span class="line">                &quot;server_name&quot;: &quot;www.tesla.com&quot;,</span><br><span class="line">                &quot;reality&quot;: &#123;</span><br><span class="line">                    &quot;enabled&quot;: true,</span><br><span class="line">                    &quot;handshake&quot;: &#123;</span><br><span class="line">                        &quot;server&quot;: &quot;www.tesla.com&quot;,</span><br><span class="line">                        &quot;server_port&quot;: 443</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &quot;private_key&quot;: &quot;&quot;, //vps上执行sing-box generate reality-keypair</span><br><span class="line">                    &quot;short_id&quot;: [</span><br><span class="line">                        &quot;0123456789abcdef&quot;// 0到f，长度为2的倍数，长度上限为16，默认这个也可以</span><br><span class="line">                    ]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;outbounds&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;type&quot;: &quot;direct&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然后重启</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl restart sing-box</span><br></pre></td></tr></table></figure>

<p>再查看日志</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">journalctl -u sing-box -o cat -f</span><br></pre></td></tr></table></figure>

<p>没问题就OK拉，开始导入passwall了因为申请的是自签证书，所有设置，都是<strong>开启允许不安全连接</strong></p>
<h1 id="hysteria2客户端配置文件"><a href="#hysteria2客户端配置文件" class="headerlink" title="hysteria2客户端配置文件"></a>hysteria2客户端配置文件</h1><h2 id="客户端配置文件"><a href="#客户端配置文件" class="headerlink" title="客户端配置文件"></a>客户端配置文件</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span> <span class="string">ip:443</span></span><br><span class="line"><span class="attr">auth:</span> <span class="number">123456</span></span><br><span class="line"></span><br><span class="line"><span class="attr">bandwidth:</span></span><br><span class="line">  <span class="attr">up:</span> <span class="number">20</span> <span class="string">mbps</span></span><br><span class="line">  <span class="attr">down:</span> <span class="number">100</span> <span class="string">mbps</span></span><br><span class="line">  </span><br><span class="line"><span class="attr">tls:</span></span><br><span class="line">  <span class="attr">sni:</span> <span class="string">a.com</span></span><br><span class="line">  <span class="attr">insecure:</span> <span class="literal">false</span> <span class="comment">#使用自签域名时需要改成true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">socks5:</span></span><br><span class="line">  <span class="attr">listen:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:1080</span></span><br><span class="line"><span class="attr">http:</span></span><br><span class="line">  <span class="attr">listen:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:8080</span></span><br></pre></td></tr></table></figure>

<h2 id="sing-box配置文件-Android-IOS"><a href="#sing-box配置文件-Android-IOS" class="headerlink" title="sing-box配置文件(Android&#x2F;IOS)"></a>sing-box配置文件(Android&#x2F;IOS)</h2><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;dns&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;servers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cf&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://1.1.1.1/dns-query&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;local&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;223.5.5.5&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;detour&quot;</span><span class="punctuation">:</span> <span class="string">&quot;direct&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;block&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;rcode://success&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;rules&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;geosite&quot;</span><span class="punctuation">:</span> <span class="string">&quot;category-ads-all&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;server&quot;</span><span class="punctuation">:</span> <span class="string">&quot;block&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;disable_cache&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;outbound&quot;</span><span class="punctuation">:</span> <span class="string">&quot;any&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;server&quot;</span><span class="punctuation">:</span> <span class="string">&quot;local&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;geosite&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cn&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;server&quot;</span><span class="punctuation">:</span> <span class="string">&quot;local&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;strategy&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ipv4_only&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;inbounds&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tun&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;inet4_address&quot;</span><span class="punctuation">:</span> <span class="string">&quot;172.19.0.1/30&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;auto_route&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;strict_route&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;sniff&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;outbounds&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hysteria2&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;proxy&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;server&quot;</span><span class="punctuation">:</span> <span class="string">&quot;这里填ip&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;server_port&quot;</span><span class="punctuation">:</span> <span class="number">443</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;up_mbps&quot;</span><span class="punctuation">:</span> <span class="number">20</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;down_mbps&quot;</span><span class="punctuation">:</span> <span class="number">100</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;password&quot;</span><span class="punctuation">:</span> <span class="string">&quot;这里填密码&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;tls&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;enabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;server_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;a.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;insecure&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;direct&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;direct&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;block&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;block&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dns&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;tag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dns-out&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;route&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;rules&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;protocol&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dns&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;outbound&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dns-out&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;geosite&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cn&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;geoip&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="string">&quot;private&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;cn&quot;</span></span><br><span class="line">        <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;outbound&quot;</span><span class="punctuation">:</span> <span class="string">&quot;direct&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;geosite&quot;</span><span class="punctuation">:</span> <span class="string">&quot;category-ads-all&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;outbound&quot;</span><span class="punctuation">:</span> <span class="string">&quot;block&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;auto_detect_interface&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h1 id="相关链接"><a href="#相关链接" class="headerlink" title="相关链接"></a>相关链接</h1><h2 id="客户端下载"><a href="#客户端下载" class="headerlink" title="客户端下载"></a>客户端下载</h2><p>v2rayN 下载：<a href="https://bulianglin.com/g/aHR0cHM6Ly9naXRodWIuY29tLzJkdXN0L3YycmF5Ti9yZWxlYXNlcy9sYXRlc3Q">https://github.com/2dust/v2rayN/releases/latest</a><br>Hysteria 2下载：<a href="https://bulianglin.com/g/aHR0cHM6Ly9naXRodWIuY29tL2FwZXJuZXQvaHlzdGVyaWEvcmVsZWFzZXM">https://github.com/apernet/hysteria/releases</a><br>Hysteria 2文档：<a href="https://bulianglin.com/g/aHR0cHM6Ly92Mi5oeXN0ZXJpYS5uZXR3b3JrL3poLw">https://v2.hysteria.network/zh/</a><br>sing-box文档：<a href="https://bulianglin.com/g/aHR0cHM6Ly9zaW5nLWJveC5zYWdlcm5ldC5vcmcvemgv">https://sing-box.sagernet.org/zh/</a><br>Android客户端（SFA）：<a href="https://bulianglin.com/g/aHR0cHM6Ly9pbnN0YWxsLmFwcGNlbnRlci5tcy91c2Vycy9uZWtvaGFzZWthaS9hcHBzL3NmYS9kaXN0cmlidXRpb25fZ3JvdXBzL3B1YmxpY3Rlc3Q">https://install.appcenter.ms/users/nekohasekai/apps/sfa/distribution_groups&#x2F;publictest</a><br>IOS客户端（TestFlight）：<a href="https://bulianglin.com/g/aHR0cHM6Ly90ZXN0ZmxpZ2h0LmFwcGxlLmNvbS9qb2luL0FjcU80NEZI">https://testflight.apple.com/join/AcqO44FH</a> （1.5.0 beta版支持Hysteria 2）<br>IOS客户端（AppStore）：<a href="https://bulianglin.com/g/aHR0cHM6Ly9hcHBzLmFwcGxlLmNvbS91cy9hcHAvc2luZy1ib3gvaWQ2NDUxMjcyNjcz">https://apps.apple.com/us/app/sing-box/id6451272673</a> （暂不支持Hysteria 2）</p>
<h2 id="视频教程参考"><a href="#视频教程参考" class="headerlink" title="视频教程参考"></a>视频教程参考</h2><p>2023年最安全协议hysteria2和reality同时搭建 | 无需自备域名 | passwall设置hysteria2方法：<a href="https://youtu.be/S0jSGOdeTs4?si=w4vYPa44zIoQ4zHv">https://youtu.be/S0jSGOdeTs4?si=w4vYPa44zIoQ4zHv</a></p>
<p>【遥遥领先】黑科技！垃圾VPS线路网速大幅提升！第二代hysteria节点搭建教程，歇斯底里为什么可以提升网速？windows&#x2F;ios&#x2F;android手机移动端使用方式，sing-box配置hy2方式：<a href="https://youtu.be/CXj-ID33MhU?si=bgcrlIpW5BwOc9uL">https://youtu.be/CXj-ID33MhU?si=bgcrlIpW5BwOc9uL</a></p>
<h2 id="文档参考"><a href="#文档参考" class="headerlink" title="文档参考"></a>文档参考</h2><p>视频1：<a href="https://ybfl.xyz/sites/283.html">https://ybfl.xyz/sites/283.html</a></p>
<p>视频2：<a href="https://bulianglin.com/archives/hysteria2.html">https://bulianglin.com/archives/hysteria2.html</a></p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>服务器</tag>
      </tags>
  </entry>
  <entry>
    <title>tmux后台工具使用方法</title>
    <url>/undefined/3117353a.html</url>
    <content><![CDATA[<p>tmux多路后台会话功能 即使SSH断开程序也可以在内置会话中执行 实现后台稳定运行<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202305051618430.png"></p>
<p>有长时间任务或者后台程序运行需求大家可以使用tmux，比如编译程序，推流直播，SSH连接不稳定等等场景需求。你可以把这些程序存放到一个独立会话中，让他自己运作，完全不影响SSH主会话。</p>
<p>即使SSH断了，你在tmux中的程序也不会断连。</p>
<p>安装</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt update -y &amp;&amp; apt install -y tmux</span><br></pre></td></tr></table></figure>

<p>创建一个会话进入（可多开N个后台会话）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tmux new -s my1</span><br></pre></td></tr></table></figure>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202305051620536.png"></p>
<p>退出会话不中断 Crl+b然后d</p>
<p>重新进入会话</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tmux attach-session -t my1</span><br></pre></td></tr></table></figure>

<p>查看所有tmux会话</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tmux list-sessions</span><br></pre></td></tr></table></figure>

<p>删除会话</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tmux kill-session -t my1</span><br><span class="line">crl+d</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>服务器</tag>
      </tags>
  </entry>
  <entry>
    <title>x-ui最稳妥的魔术面板</title>
    <url>/undefined/af28068c.html</url>
    <content><![CDATA[<p><strong>最近经常有人被封端口，我自己搭的这个方案没被封过，现在分享出来。</strong></p>
<h2 id="系统：Debian10-11"><a href="#系统：Debian10-11" class="headerlink" title="系统：Debian10-11"></a>系统：Debian10-11</h2><p>首先要确保自己的vps是纯净的系统，不要商家预装的，在系统启动后操作DD重装脚本进行安装纯净版系统</p>
<h2 id="第一步：DD重装Debian10系统："><a href="#第一步：DD重装Debian10系统：" class="headerlink" title="第一步：DD重装Debian10系统："></a>第一步：DD重装Debian10系统：</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/qingee/dd/master/InstallNET.sh &amp;&amp; chmod +x InstallNET.sh &amp;&amp; ./InstallNET.sh -d 10 -v 64 -p &quot;notetoday&quot; -port &quot;22&quot;</span><br></pre></td></tr></table></figure>

<p>系统root密码：<code>notetoday</code><br>更改root密码：<code>passwd</code> 或者 <code>passwd root</code>输入你想要设置的密码即可，在ssh命令窗口输入密码<code>不显示是正常的</code></p>
<h2 id="第二步：安装WARP接管VPS的出站ip（加入香港节点WireGuard异常：可以去Github）"><a href="#第二步：安装WARP接管VPS的出站ip（加入香港节点WireGuard异常：可以去Github）" class="headerlink" title="第二步：安装WARP接管VPS的出站ip（加入香港节点WireGuard异常：可以去Github）"></a>第二步：安装WARP接管VPS的出站ip（加入香港节点WireGuard异常：可以去<a href="https://github.com/fscarmen/warp">Github</a>）</h2><blockquote>
<p>apt update<br>apt install curl -y<br>apt install gnupg2 -y<br>apt install wget -y<br># 自动配置 WARP WireGuard IPv4 网络<br>bash &lt;(curl -fsSL git.io&#x2F;warp.sh) 4<br>echo “1” &gt; &#x2F;proc&#x2F;sys&#x2F;net&#x2F;ipv6&#x2F;conf&#x2F;all&#x2F;disable_ipv6</p>
</blockquote>
<p>这个配置后你vps向外请求的所有ip都不是本机的真实ip，速度可能会有所影响，但是会很安全</p>
<h2 id="第三步：-安装适用于流媒体的XanMod内核开启BBR2（FQ-PIE）："><a href="#第三步：-安装适用于流媒体的XanMod内核开启BBR2（FQ-PIE）：" class="headerlink" title="第三步： 安装适用于流媒体的XanMod内核开启BBR2（FQ+PIE）："></a>第三步： 安装适用于流媒体的XanMod内核开启BBR2（FQ+PIE）：</h2><blockquote>
<ol>
<li>Register the PGP key:</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget -qO - https://dl.xanmod.org/archive.key | sudo gpg --dearmor -o /usr/share/keyrings/xanmod-archive-keyring.gpg</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>Add the repository:</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">echo &#x27;deb [signed-by=/usr/share/keyrings/xanmod-archive-keyring.gpg] http://deb.xanmod.org releases main&#x27; | sudo tee /etc/apt/sources.list.d/xanmod-release.list</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>Then update and install:  <strong>⇲</strong> Check platform compatibility in <strong>x86-64 psABI level reference</strong> below.</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt update &amp;&amp; sudo apt install linux-xanmod-x64v3</span><br></pre></td></tr></table></figure>

<ol start="4">
<li>Reboot</li>
</ol>
</blockquote>
<p>执行完命令代码后等待系统重启，重启完成后执行以下脚本开启<code>BBR2</code></p>
<blockquote>
<p>bash &lt;(curl -Lso- <a href="https://git.io/kernel.sh">https://git.io/kernel.sh</a>)</p>
</blockquote>
<p><a href=""><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202311061449957.png" alt="2022-10-22T05:09:28.png"></a><br><a href=""><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202311061450569.png" alt="2022-10-22T05:13:42.png"></a><br><a href=""><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202311061450421.png" alt="2022-10-22T05:15:10.png"></a><br>再次运行上面的代码，查看参数是否和下图一样，如果是一样的就是开启成功了<br><a href=""><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202311061450627.png" alt="2022-10-22T05:17:17.png"></a> </p>
<h2 id="第四步：安装x-ui面板"><a href="#第四步：安装x-ui面板" class="headerlink" title="第四步：安装x-ui面板"></a><strong>第四步：安装x-ui面板</strong></h2><blockquote>
</blockquote>
<h2 id="PS：安装VPS开源MW控制面板（要装就装，不装也没事）"><a href="#PS：安装VPS开源MW控制面板（要装就装，不装也没事）" class="headerlink" title="PS：安装VPS开源MW控制面板（要装就装，不装也没事）"></a><strong>PS：安装VPS开源MW控制面板（要装就装，不装也没事）</strong></h2><p>使用这套配置操作，所有IP 都是CDNip</p>
<p><a href="https://www.notetoday.net/note/111.html">Linux主机开源面板：mdserver-web，完全免费，界面仿宝塔面板</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -fsSL https://gcore.jsdelivr.net/gh/midoks/mdserver-web@latest/scripts/install.sh | bash</span><br><span class="line">curl -fsSL  https://raw.githubusercontent.com/midoks/mdserver-web/dev/scripts/update_dev.sh | bash</span><br></pre></td></tr></table></figure>

<p><a href=""><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202311061450166.png" alt="2022-10-22T05:25:00.png"></a><br>记住控制面板的信息登录上去后在安全里<code>关闭防火墙</code></p>
<p>或者海外宝塔：<a href="https://www.aapanel.com/new/download.html">https://www.aapanel.com/new/download.html</a></p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>VPN</tag>
      </tags>
  </entry>
  <entry>
    <title>一键DD纯净系统脚本 CentOS/Debian/Ubuntu</title>
    <url>/undefined/7db8067.html</url>
    <content><![CDATA[<p>基本所有的VPS服务器商家，都会提供免费的Linux系统供安装，比如CentOS、Debian、Ubuntu等。那为什么还要使用一键DD脚本重装&#x2F;更换系统呢？</p>
<ol>
<li>商家提供的系统版本有限，可能没有自己需要的版本。</li>
<li>商家的系统安装有自己不想要的服务，有的预装系统本身也有缺陷，导致很多服务安装不上</li>
<li>商家的系统无法安装特定软件，比如很挑内核的锐速。</li>
</ol>
<p>以上几种情况，一键DD脚本就可以为服务器更换一个纯净的系统，帮你解决问题。</p>
<h2 id="所需环境"><a href="#所需环境" class="headerlink" title="所需环境"></a>所需环境</h2><hr>
<p>以网络流传较广的Vicer一键DD为例，其所需环境为：</p>
<p>**架构：**KVM&#x2F;XEN，不支持OpenVZ。<br>**系统：**Debian&#x2F;Ubuntu&#x2F;CentOS</p>
<h2 id="一键DD脚本使用教程"><a href="#一键DD脚本使用教程" class="headerlink" title="一键DD脚本使用教程"></a>一键DD脚本使用教程</h2><p>注意事项：</p>
<ul>
<li><strong>Vicer脚本目前不支持重装为CentOS 7系统，支持CentOS 6.9以下版本。</strong></li>
<li><strong>重装的系统源自官方发行版。</strong></li>
<li><strong>安装过程全自动进行，无需VNC操作，无需进入救援模式。</strong></li>
<li><strong>系统安装完成后的默认用户名为root，默认密码为: <code>MoeClub.org</code></strong></li>
</ul>
<p><strong>DD脚本示例：</strong><br>由于脚本命令中需要写明目标系统版本，所以根据需求不同，最终的运行命令也各不相同。</p>
<p>下面提供几个使用范例，可以直接复制使用，也可以将命令中的系统版本替换为其它版本。</p>
<h2 id="重装为CentOS："><a href="#重装为CentOS：" class="headerlink" title="重装为CentOS："></a>重装为CentOS：</h2><p>以下命令中的 -c 后面为CentOS版本号，-v 后面为64位&#x2F;32位，可根据需求进行替换。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">CentOS 6.10 64位：</span></span><br><span class="line">bash &lt;(wget --no-check-certificate -qO- &#x27;https://raw.githubusercontent.com/notetoday/sh/main/InstallNET.sh&#x27;) -c 6.10 -v 64 -a</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">CentOS 6.10 32位：</span></span><br><span class="line">bash &lt;(wget --no-check-certificate -qO- &#x27;https://raw.githubusercontent.com/notetoday/sh/main/InstallNET.sh&#x27;) -c 6.10 -v 32 -a</span><br></pre></td></tr></table></figure>

<h2 id="重装为Debian："><a href="#重装为Debian：" class="headerlink" title="重装为Debian："></a>重装为Debian：</h2><p>以下命令中的 -d 后面为Debian版本号，-v 后面为64位&#x2F;32位，可根据需求进行替换。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Debian 8 64位：</span></span><br><span class="line">bash &lt;(wget --no-check-certificate -qO- &#x27;https://raw.githubusercontent.com/notetoday/sh/main/InstallNET.sh&#x27;) -d 8 -v 64 -a</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Debian 9 64位：</span></span><br><span class="line">bash &lt;(wget --no-check-certificate -qO- &#x27;https://raw.githubusercontent.com/notetoday/sh/main/InstallNET.sh&#x27;) -d 9 -v 64 -a</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Debian 10 64位：</span></span><br><span class="line">bash &lt;(wget --no-check-certificate -qO- &#x27;https://raw.githubusercontent.com/notetoday/sh/main/InstallNET.sh&#x27;) -d 10 -v 64 -a</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Debian 11 64位：</span></span><br><span class="line">bash &lt;(wget --no-check-certificate -qO- &#x27;https://raw.githubusercontent.com/notetoday/sh/main/InstallNET.sh&#x27;) -d 11 -v 64 -a</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Debian 11.5 64位：</span></span><br><span class="line">bash &lt;(wget --no-check-certificate -qO- &#x27;https://raw.githubusercontent.com/notetoday/sh/main/InstallNET.sh&#x27;) -d 11.5 -v 64 -a</span><br></pre></td></tr></table></figure>

<h2 id="重装为Ubuntu："><a href="#重装为Ubuntu：" class="headerlink" title="重装为Ubuntu："></a>重装为Ubuntu：</h2><p>以下命令中的 -u 后面为Ubuntu版本号，-v 后面为64位&#x2F;32位，可根据需求进行替换。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Ubuntu 12.04 64位：</span></span><br><span class="line">bash &lt;(wget --no-check-certificate -qO- &#x27;https://raw.githubusercontent.com/notetoday/sh/main/InstallNET.sh&#x27;) -u 12.04 -v 64 -a</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Ubuntu 14.04 64位：</span></span><br><span class="line">bash &lt;(wget --no-check-certificate -qO- &#x27;https://raw.githubusercontent.com/notetoday/sh/main/InstallNET.sh&#x27;) -u 14.04 -v 64 -a</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Ubuntu 16.04 64位：</span></span><br><span class="line">bash &lt;(wget --no-check-certificate -qO- &#x27;https://raw.githubusercontent.com/notetoday/sh/main/InstallNET.sh&#x27;) -u 16.04 -v 64 -a</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Ubuntu 18.04 64位：</span></span><br><span class="line">bash &lt;(wget --no-check-certificate -qO- &#x27;https://raw.githubusercontent.com/notetoday/sh/main/InstallNET.sh&#x27;) -u 18.04 -v 64 -a</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Ubuntu 20.04 64位：</span></span><br><span class="line">bash &lt;(wget --no-check-certificate -qO- &#x27;https://raw.githubusercontent.com/notetoday/sh/main/InstallNET.sh&#x27;) -u 20.04 -v 64 -a</span><br></pre></td></tr></table></figure>

<h2 id="关于系统重装过程"><a href="#关于系统重装过程" class="headerlink" title="关于系统重装过程"></a>关于系统重装过程</h2><hr>
<p>运行包含正确系统版本号的脚本后，新系统的安装会自动进行，无需人工干预。</p>
<h2 id="可能的三种情况："><a href="#可能的三种情况：" class="headerlink" title="可能的三种情况："></a>可能的三种情况：</h2><p>正常情况下10分钟左右就可以安装成功了，期间可以在VNC中观察安装过程：<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202311061444304.png"></p>
<p>如果安装CentOS 7版本，会出现下图提示，表示不支持：<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202311061444408.png"><br>如果输入了其它不支持或不存在的系统版本，则会出现下图提示，中止安装：<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202311061444207.png"></p>
<hr>
<p>重装系统后更改root密码<br>耐心等待系统安装成功后，出于安全考虑，建议立即更改默认密码。</p>
<h2 id="具体方法："><a href="#具体方法：" class="headerlink" title="具体方法："></a>具体方法：</h2><p>1、使用Putty以上文提供的默认密码登录，输入以下命令：<strong><code>passwd root</code></strong></p>
<p>2、接下来会分两次要求输入新的密码，可以手动输入，也可以在其它位置复制一个密码，然后在Putty界面右键点击即可粘贴上去。</p>
<h2 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h2><p>输入新密码时并不会直接显示出来，光标也不会移动，这是正常的。</p>
<p>3、再次登录系统时，记得使用新的root密码。</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>服务器</tag>
      </tags>
  </entry>
  <entry>
    <title>中星微随身Wifi去后门刷全功能后台</title>
    <url>/undefined/f9dbe722.html</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>买到棒子先不要插自己卡，需要进行屏蔽操作防止被远程操作，这里我买的是狗东某沃中星微。</p>
<h1 id="刷入全功能后台"><a href="#刷入全功能后台" class="headerlink" title="刷入全功能后台"></a>刷入全功能后台</h1><p>首先开启 ADB<br>插到电脑上电 192.168.0.1 访问成功 密码 admin<br>通电后用工具捅 USB 插头的小孔 灯灭会自动重启，重启完成即可进入 ADB 模式</p>
<h2 id="下载工具"><a href="#下载工具" class="headerlink" title="下载工具"></a>下载工具</h2><p>链接：<a href="https://pan.baidu.com/s/1lCwsg7kMmHVNbWOP7KRT3Q">https://pan.baidu.com/s/1lCwsg7kMmHVNbWOP7KRT3Q</a><br>提取码：8888</p>
<h2 id="刷入步骤"><a href="#刷入步骤" class="headerlink" title="刷入步骤"></a>刷入步骤</h2><p>先执行 【1：中兴微通用备份】 对棒子进行备份<br>然后执行 【2：中兴微通用后台刷入】 刷入全功能后台</p>
<h1 id="去除远程控制"><a href="#去除远程控制" class="headerlink" title="去除远程控制"></a>去除远程控制</h1><p>执行 8：打开 CMD 终端</p>
<p>进入 shell 进行操作，以下均在 cmd 窗口内进行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">adb shell</span><br></pre></td></tr></table></figure>

<p>可查看所有参数 再进行修改</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nv show</span><br></pre></td></tr></table></figure>

<p>下面第一条有的新版本有这个参数，有的没有，可以执行没啥问题，最好去执行上一条命令查看所有参数再修改。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nv set mqtt_host=127.0.0.1</span><br></pre></td></tr></table></figure>

<p>禁止固件下载</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nv set fota_updateMode=0</span><br></pre></td></tr></table></figure>

<p>禁止系统网址</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nv set os_url=http://127.0.0.1</span><br></pre></td></tr></table></figure>

<p>禁止内置卡服务</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nv set lpa_trigger_host=127.0.1</span><br></pre></td></tr></table></figure>

<p>禁止定位</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nv set safecare_hostname=127.0.0.1</span><br></pre></td></tr></table></figure>

<p>禁用云服务</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nv set safecare_mobsite=http://127.0.0.1</span><br></pre></td></tr></table></figure>

<p>禁用云服务</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nv set TM_SERVER_NAME=127.0.0.1</span><br></pre></td></tr></table></figure>

<p>修改一些网页目录为根目录,防止未知访问</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nv set lpa_trigger_updata_url=/</span><br><span class="line">nv set lpa_trigger_event_url=/</span><br><span class="line">nv set URI_FIELD=/</span><br></pre></td></tr></table></figure>

<p>未知服务修改掉再说有影响还原 原参数 hostName&#x3D;dm.wo.com.cn</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nv set hostName=127.0.0.1</span><br></pre></td></tr></table></figure>

<p>未知服务修改掉再说有影响还原 原参数 HOST_FIELD&#x3D;Host: mt.chenjiariji.top</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nv set HOST_FIELD=&#x27;Host: 127.0.0.1&#x27;</span><br></pre></td></tr></table></figure>

<p>保存设置以上所有设置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nv save</span><br></pre></td></tr></table></figure>

<p>进阶设置</p>
<p>设置 root 密码 这里默认 vps333 自己设置复杂一点</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nv set root_Password=vps333</span><br></pre></td></tr></table></figure>

<p>保存设置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nv save</span><br></pre></td></tr></table></figure>

<p>到这里可以屏蔽与云服务相关的连接了,输入 reboot 进行重启</p>
<h1 id="其他设置"><a href="#其他设置" class="headerlink" title="其他设置"></a>其他设置</h1><p>先进入后台去修改掉 imei 为其他的不要为默认的 imei,修改后重启一遍看看是否是修改的 emei<br>然后登录 访问以下网址获取解锁 sim 卡槽密码</p>
<p><a href="http://192.168.0.1/goform/goform_get_cmd_process?cmd=unlock_network_code">http://192.168.0.1/goform/goform_get_cmd_process?cmd=unlock_network_code</a></p>
<p>开启 ADB 命令 这里我没有使用</p>
<p><a href="http://192.168.0.1/goform/goform_set_cmd_process?goformId=SET_DEVICE_MODE&debug_enable=1">http://192.168.0.1/goform/goform_set_cmd_process?goformId=SET_DEVICE_MODE&amp;debug_enable=1</a></p>
<p>获取到这这个密码输入到解锁 sim 卡服务的地方即可。<br>解锁后再拔掉开机，看到 SIM 已解锁。<br>然后插入 SIM 就可以上网了，如果恢复出厂需要再执行以上操作。</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>随身WiFi</tag>
      </tags>
  </entry>
  <entry>
    <title>利用CF Workers搭建Github加速服务</title>
    <url>/undefined/ee2e5bab.html</url>
    <content><![CDATA[<h1 id="利用CF-Workers搭建GH-Proxy服务"><a href="#利用CF-Workers搭建GH-Proxy服务" class="headerlink" title="利用CF Workers搭建GH-Proxy服务"></a>利用CF Workers搭建GH-Proxy服务</h1><blockquote>
<p>项目地址：<a href="https://github.com/hunshcn/gh-proxy">hunshcn&#x2F;gh-proxy: github release、archive以及项目文件的加速项目</a><br>项目简介：github release、archive以及项目文件的加速项目，支持clone，有Cloudflare Workers无服务器版本以及Python版本</p>
</blockquote>
<ol>
<li>注册一个CloudFlare账户</li>
<li>进入<a href="https://workers.cloudflare.com/">CF Workers</a>页面，点击 <strong>创建应用程序 <img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312120902203.png" alt="img"></strong></li>
<li>点击 <strong>创建Worker <img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312120902204.png" alt="img"></strong></li>
<li>按需填写 <strong>名称</strong>，点击右下角 <strong>部署</strong><br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312120902205.png" alt="img"></li>
<li>点击 <strong>编辑代码</strong><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312120902206.png" alt="img"></li>
<li>将代码<strong>复制并替换编辑框里的内容</strong>，点击右边的 <strong>保存并部署</strong>，返回刚才的管理页面</li>
</ol>
<blockquote>
<p>代码地址：<a href="https://cdn.jsdelivr.net/gh/hunshcn/gh-proxy@master/index.js">cdn.jsdelivr.net&#x2F;gh&#x2F;hunshcn&#x2F;gh-proxy@master&#x2F;index.js</a></p>
</blockquote>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312120902207.png" alt="img"></p>
<ol>
<li>点击<strong>查看链接</strong>，显示如下界面即为成功<img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312120902208.png" alt="img"></li>
</ol>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312120902209.png" alt="img"></p>
<blockquote>
<h2 id="Cloudflare-Workers计费"><a href="#Cloudflare-Workers计费" class="headerlink" title="Cloudflare Workers计费"></a>Cloudflare Workers计费</h2><p>到 <code>overview</code> 页面可参看使用情况。免费版每天有 10 万次免费请求，并且有每分钟1000次请求的限制。</p>
<p>如果不够用，可升级到 $5 的高级版本，每月可用 1000 万次请求（超出部分 $0.5&#x2F;百万次请求）。</p>
</blockquote>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>网站</tag>
      </tags>
  </entry>
  <entry>
    <title>在WSL2中使用Clash Verge代理连接</title>
    <url>/undefined/af89448b.html</url>
    <content><![CDATA[<blockquote>
<p>本文撰写时基于的系统和版本是 Ubuntu 22.04, 如果你使用其他版本或其他发行版，则下文提到的部分步骤与你的实际情况可能有所出入。</p>
</blockquote>
<blockquote>
<p>在 WSL2 中配置环境时，依赖下载经常因为网络问题极其缓慢甚至失败。在整合了各方资料及个人实践后，我总结了在 WSL2 中通过 Clash Verge 设置代理的方法，供大家参考。</p>
</blockquote>
<h1 id="在-Clash-客户端内的操作"><a href="#在-Clash-客户端内的操作" class="headerlink" title="在 Clash 客户端内的操作"></a>在 Clash 客户端内的操作</h1><p>打开客户端的局域网连接开关。<br>记录下客户端内的端口，如这里是 <code>7897</code>. 一般默认端口为 <code>7897</code>。</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312131053554.png"></p>
<h1 id="修改-bashrc"><a href="#修改-bashrc" class="headerlink" title="修改 .bashrc"></a>修改 <code>.bashrc</code></h1><p>使用文本编辑器编辑 <code>.bashrc</code>，在文件末尾根据第 1 步记录的数据，加入三行内容：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nano ~/.bashrc</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">host_ip=$(<span class="built_in">cat</span> /etc/resolv.conf |grep <span class="string">&quot;nameserver&quot;</span> |<span class="built_in">cut</span> -f 2 -d <span class="string">&quot; &quot;</span>)</span><br><span class="line"><span class="built_in">export</span> http_proxy=<span class="string">&quot;http://<span class="variable">$host_ip</span>:[端口]&quot;</span></span><br><span class="line"><span class="built_in">export</span> https_proxy=<span class="string">&quot;http://<span class="variable">$host_ip</span>:[端口]&quot;</span></span><br></pre></td></tr></table></figure>

<p>如图所示，修改完后保存即可。<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312131053167.png"></p>
<h1 id="使-root-用户保留先前设置的环境变量"><a href="#使-root-用户保留先前设置的环境变量" class="headerlink" title="使 root 用户保留先前设置的环境变量"></a>使 root 用户保留先前设置的环境变量</h1><p>在使用 <code>sudo</code> 执行命令时，之前设置的环境变量并不会生效，需要进一步设置。<br>输入 <code>sudo visudo</code></p>
<p>取消相应行的注释 (删除行首的 <code>#</code>) 即可.<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312131053399.png"></p>
<p>如果你使用 Ubuntu 20.04, 加入以下内容并保存。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Defaults env_keep=<span class="string">&quot;http_proxy https_proxy&quot;</span></span><br></pre></td></tr></table></figure>

<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202312131053583.png"></p>
<h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>输入 <code>source ~/.bashrc</code> 使文件修改生效。</p>
<p>可以通过输入 <code>echo $http_proxy</code> 验证修改是否成功。<br>输入 <code>wget www.google.com</code>, 可以发现连接成功，至此大功告成，如图所示。<br><img src="https://s2.loli.net/2022/10/05/UIQ8LhuROaXq6S2.png"></p>
<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p><a href="https://zhuanlan.zhihu.com/p/153124468">为 WSL2 一键设置代理 (zhihu.com)</a><br><a href="https://www.chenyudong.com/archives/sudo-keep-env.html">sudo保持前用用户的env环境变量 (chenyudong.com, 已失效)</a></p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>科学上网</tag>
      </tags>
  </entry>
  <entry>
    <title>备份Hexo博客到开源仓库</title>
    <url>/undefined/5836c89e.html</url>
    <content><![CDATA[<p>本教程以 gitee 举例，GitHub 同理。</p>
<h1 id="创建-gitee-仓库"><a href="#创建-gitee-仓库" class="headerlink" title="创建 gitee 仓库"></a>创建 gitee 仓库</h1><p>直接 gitee 官网右上角创建仓库即可，名字什么的自定义，最好创建私人仓库。</p>
<h1 id="初始化本地仓库"><a href="#初始化本地仓库" class="headerlink" title="初始化本地仓库"></a>初始化本地仓库</h1><p>在本地 hexo 目录运行命令行</p>
<p>输入</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure>

<p>然后输入</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">git remote add origin git@gitee.com:yuqi15/blog-backup.git</span><br></pre></td></tr></table></figure>

<p>注意：这里是使用你自己创建仓库的链接，刚创建好会在页面上提示</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303031601529.png"></p>
<h1 id="上传到-gitee"><a href="#上传到-gitee" class="headerlink" title="上传到 gitee"></a>上传到 gitee</h1><p>依次在命令行里面运行下面命令</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;update&quot;</span><br><span class="line">git push origin master --force</span><br></pre></td></tr></table></figure>

<p>运行成功就上传完成了</p>
<h1 id="新设备恢复-hexo-博客"><a href="#新设备恢复-hexo-博客" class="headerlink" title="新设备恢复 hexo 博客"></a>新设备恢复 hexo 博客</h1><p>1、安装 node</p>
<p>2、安装 Git</p>
<p>3、在你需要恢复博客的文件夹里面使用命令行执行</p>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">cnpm install hexo-cli -g</span><br><span class="line">git clone 你备份的仓库地址</span><br><span class="line">cnpm install</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓14 + HttpCanary 抓包设置</title>
    <url>/undefined/5fb4c97d.html</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这两天使用 HttpCanary 抓包，无法安装证书，如下图，搜索找到了解决办法。本教程适合安卓14 + 无法安装证书，以及解决“系统证书”和“目标App使用固定证书”的问题。</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202311130929372.jpg"></p>
<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ol>
<li><p>手机需要root，安装好 Magisk 和 Xposed 框架（比如 LSPosed）；</p>
</li>
<li><p>下载安装 <a href="http://www.coolapk.com/apk/bin.mt.plus">【MT管理器】</a> （或其他类似文件管理器），并授予 root 权限。点这里 <a href="https://www.123pan.com/s/bAORVv-Epkl.html">查看链接</a> 下载里面3个文件，安装 HttpCanary_3.3.5.apk，其他两个待用。</p>
</li>
</ol>
<p>说明：HttpCanary_3.3.5.apk：HttpCanary 安装包，原版无修改；HttpCanary根证书.zip：Magisk 模块，将HttpCanary根证书添加至系统CA目录，证书文件需自己添加；TrustMeAlready_1.11.apk：Xposed模块，解决“目标app使用固定证书，无法抓包”。</p>
<h1 id="安装证书"><a href="#安装证书" class="headerlink" title="安装证书"></a>安装证书</h1><p>1.安装 HttpCanary 后，打开软件，若“安装根证书”无法安装点“跳过”即可，进入软件后，即可退出软件；<br>2.MT管理器打开 &#x2F;data&#x2F;user&#x2F;0&#x2F;com.guoshi.httpcanary&#x2F;cache，新建名为 HttpCanary.jks 的空文件；然后把 HttpCanary.p12 和 HttpCanary.pem 两个文件复制到其他文件夹里（比如 Download 文件夹），后面要用到，如下图。</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202311130932355.gif"></p>
<p>3.打开 设置→安全→加密与凭据→安装证书，不同机型可能不同，也可以在设置搜索”安装证书”打开。这里需要安装三个证书（本人测试安装“CA 证书”即可，推荐全部安装）：</p>
<ol>
<li>点击 <strong>CA 证书</strong>，它会提示<strong>您的数据将不再是私密的</strong>，点<strong>仍然安装</strong>。找到刚才放证书的文件夹，选择 HttpCanary.pem 。 显示<strong>已安装CA证书</strong>。</li>
<li>点击 <strong>xxx和应用用户证书</strong>，选择 HttpCanary.p12 ，密码为 HttpCanary（推荐复制，避免输错），证书名称为 <strong>xxx and Apps</strong>（xxx看图）。</li>
<li>点击<strong>WLAN证书</strong>，选择 HttpCanary.p12 ，密码为 HttpCanary，证书名称为 WiFi。</li>
</ol>
<p>至此，用户证书安装完毕，点开用户凭据会看到有三个证书，如下图。<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202311130934065.jpg"></p>
<h1 id="添加根证书至系统"><a href="#添加根证书至系统" class="headerlink" title="添加根证书至系统"></a>添加根证书至系统</h1><p>由于从Android 7.0版本开始，系统不再信任安装的用户证书，可能会导致无法抓取SSL&#x2F;TLS加密数据包或者无网络等问题，如下图。因此需要将HttpCanary根证书添加至系统CA目录，此操作需要在Root设备上进行。<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202311130935681.jpg"><br>1.直接移动根证书<br>打开 HttpCanary→设置→HttpCanary根证书→添加根证书至系统（Root）→移动。若成功，则可以跳过此部分；若显示下图，则说明 system 分区没有解锁，可以通过 Magisk 模块移动根证书，接着看下面内容。<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202311130935077.jpg"><br>2.通过 Magisk 模块移动根证书<br>(1) MT管理器打开 &#x2F;data&#x2F;misc&#x2F;user&#x2F;0&#x2F;cacerts-added&#x2F; ，安装完用户证书后，这个路径下面会生成一个 .0格式证书文件。在MT管理器另一侧窗口打开之前下载好的 HttpCanary根证书.zip ，打开到 HttpCanary根证书.zip&#x2F;system&#x2F;etc&#x2F;security&#x2F;cacerts&#x2F; 路径。<br>然后长按 .0格式文件，添加到 HttpCanary根证书.zip&#x2F;system&#x2F;etc&#x2F;security&#x2F;cacerts&#x2F; 里，如下图。<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202311130936670.gif"><br>(2) 打开 Magisk→模块→从本地安装→选择“HttpCanary根证书.zip”→确定安装，安装完成后重启手机。<br>如下图，若打开 &#x2F;system&#x2F;etc&#x2F;security&#x2F;cacerts&#x2F; 路径，可以找到和 &#x2F;data&#x2F;misc&#x2F;user&#x2F;0&#x2F;cacerts-added&#x2F; 路径下相同的 .0文件，说明已成功把 HttpCanary根证书添加至系统CA目录。<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202311130936693.jpg"></p>
<h1 id="解决“目标App使用固定证书”问题"><a href="#解决“目标App使用固定证书”问题" class="headerlink" title="解决“目标App使用固定证书”问题"></a>解决“目标App使用固定证书”问题</h1><p>如下图，在将HttpCanary根证书添加至系统CA目录后，对部分APP抓包仍会报错：目标App使用固定证书。<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202311130937716.jpg"><br>解决办法是：安装前面下载好的“TrustMeAlready_1.11.apk”，安装完成在 LSPosed 中启用模块，勾选系统框架和需要抓包的APP，如下图。重启手机，一定要重启手机，否则不会生效。<br><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202311130937034.jpg"><br>在完成上面设置后就可以愉快地抓包了。</p>
<h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p><a href="https://www.coolapk.com/feed/45789599?shareKey=Yjc1OGRiZDAwOWYwNjU1MTc5ZTk~&shareUid=922742&shareFrom=com.coolapk.market_13.3.6">https://www.coolapk.com/feed/45789599?shareKey=Yjc1OGRiZDAwOWYwNjU1MTc5ZTk~&amp;shareUid=922742&amp;shareFrom=com.coolapk.market_13.3.6</a></p>
<p><a href="https://www.coolapk.com/feed/43608693">https://www.coolapk.com/feed/43608693</a></p>
<h1 id="非系统SLL库抓包"><a href="#非系统SLL库抓包" class="headerlink" title="非系统SLL库抓包"></a>非系统SLL库抓包</h1><p>某些应用用的是非系统SLL库，比如某音，此教程无效。可以参考下面教程：<br><a href="https://bbs.kanxue.com/thread-271968.htm">https://bbs.kanxue.com/thread-271968.htm</a> </p>
<p><a href="https://bbs.kanxue.com/thread-276015.htm">https://bbs.kanxue.com/thread-276015.htm</a> </p>
<h1 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h1><p>HttpCanary 太久没有更新了，问题很多。大家可以关注一下同作者的新作 Reqable，未来会出安卓版，官网 <a href="https://reqable.com/zh-CN/">https://reqable.com/zh-CN/</a> 。</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>手机</tag>
      </tags>
  </entry>
  <entry>
    <title>安装了VMware Tools，但无法实现文件的拖拽和复制粘贴---解决方案</title>
    <url>/undefined/a580ef34.html</url>
    <content><![CDATA[<p>环境：Windows11，VMware17Pro，ubuntu-23.10.1</p>
<p>我给虚拟机装好Ubuntu系统后，它默认是安装好vmtools的</p>
<p>而且这些选项默认是勾选的，但是我无法实现宿主机和虚拟机之间文件的拖拽和复制粘贴</p>
<p>如果你遇到了和我一样的问题，且网上很多博文提供的解决方案都无法解决你的问题，那么请往下看</p>
<p>我试了各路大神的解决方案，基本都行不通</p>
<p>只有一篇标题和这个问题相关度不高的文章，提到了一种重装VMware tools的方法，我试了一下终于解决了问题</p>
<p> 这里要说一下，网上的很多文章用cd里带的VMware tools压缩包来重新安装（还要手动输yes的那个方法），我试了，根本没有用</p>
<p>毕竟初始安装的就是那个版本，再重新安装一下并没有意义</p>
<p>真正的解决方案其实很方便：</p>
<p>打开终端</p>
<p>1.卸载VMware Tools</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get autoremove open-vm-tools</span><br></pre></td></tr></table></figure>

<p>2.联网安装VMware tools</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install open-vm-tools-desktop</span><br></pre></td></tr></table></figure>

<p>如果出错了，就执行下面两行命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install open-vm-tools-desktop fuse</span><br></pre></td></tr></table></figure>

<p>3.重启虚拟机即可</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>虚拟机</tag>
      </tags>
  </entry>
  <entry>
    <title>常用VPS脚本</title>
    <url>/undefined/6469b43f.html</url>
    <content><![CDATA[<h2 id="1、DD重装脚本"><a href="#1、DD重装脚本" class="headerlink" title="1、DD重装脚本"></a>1、DD重装脚本</h2><p>史上最强脚本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate -qO InstallNET.sh &#x27;https://raw.githubusercontent.com/leitbogioro/Tools/master/Linux_reinstall/InstallNET.sh&#x27; &amp;&amp; chmod a+x InstallNET.sh &amp;&amp; bash InstallNET.sh -debian 12 -pwd &#x27;password&#x27;</span><br></pre></td></tr></table></figure>

<p>萌咖大佬的脚本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash &lt;(wget --no-check-certificate -qO- &#x27;https://raw.githubusercontent.com/MoeClub/Note/master/InstallNET.sh&#x27;) -d 11 -v 64 -p 密码 -port 端口 -a -firmware</span><br></pre></td></tr></table></figure>

<p>beta.gs大佬的脚本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate -O NewReinstall.sh https://raw.githubusercontent.com/fcurrk/reinstall/master/NewReinstall.sh &amp;&amp; chmod a+x NewReinstall.sh &amp;&amp; bash NewReinstall.sh</span><br></pre></td></tr></table></figure>

<p>DD windows（使用史上最强DD脚本）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -sSL https://raw.githubusercontent.com/leitbogioro/Tools/master/Linux_reinstall/InstallNET.sh) -windows 10  -lang &quot;cn&quot;</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">账户：Administrator</span><br><span class="line">密码：Teddysun.com</span><br></pre></td></tr></table></figure>

<h2 id="2、综合测试脚本"><a href="#2、综合测试脚本" class="headerlink" title="2、综合测试脚本"></a>2、综合测试脚本</h2><p>LemonBench</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -qO- https://raw.githubusercontent.com/LemonBench/LemonBench/main/LemonBench.sh | bash -s -- --fast</span><br></pre></td></tr></table></figure>

<p>融合怪</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash &lt;(wget -qO- --no-check-certificate https://gitlab.com/spiritysdx/za/-/raw/main/ecs.sh)</span><br></pre></td></tr></table></figure>

<p>NodeBench</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -sL https://raw.githubusercontent.com/LloydAsp/NodeBench/main/NodeBench.sh)</span><br></pre></td></tr></table></figure>

<h2 id="3、性能测试"><a href="#3、性能测试" class="headerlink" title="3、性能测试"></a>3、性能测试</h2><p>GB6 跑分脚本，附带宽测试：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -sL yabs.sh | bash</span><br></pre></td></tr></table></figure>

<p>GB6 剔除带宽测试，因为都是国外节点测试，国内跑没多大意义：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -sL yabs.sh | bash -s -- -i</span><br></pre></td></tr></table></figure>

<p>GB5 跑分脚本，附带宽测试：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -sL yabs.sh | bash -5</span><br></pre></td></tr></table></figure>

<p>GB5 剔除带宽测试：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -sL yabs.sh | bash -s -- -i -5</span><br></pre></td></tr></table></figure>

<h2 id="4、流媒体及IP质量测试"><a href="#4、流媒体及IP质量测试" class="headerlink" title="4、流媒体及IP质量测试"></a>4、流媒体及IP质量测试</h2><p>最常用版本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -L -s check.unlock.media)</span><br></pre></td></tr></table></figure>

<p>原生检测脚本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -sL Media.Check.Place)</span><br></pre></td></tr></table></figure>

<p>准确度最高</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -L -s https://github.com/1-stream/RegionRestrictionCheck/raw/main/check.sh)</span><br></pre></td></tr></table></figure>

<p>IP质量体检脚本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -sL IP.Check.Place)</span><br></pre></td></tr></table></figure>

<h2 id="5、测速脚本"><a href="#5、测速脚本" class="headerlink" title="5、测速脚本"></a>5、测速脚本</h2><p>Speedtest</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -sL bash.icu/speedtest)</span><br></pre></td></tr></table></figure>

<p>Taier</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -sL res.yserver.ink/taier.sh)</span><br></pre></td></tr></table></figure>

<p>hyperspeed</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -Lso- https://bench.im/hyperspeed)</span><br></pre></td></tr></table></figure>

<p>全球测速</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -sL network-speed.xyz | bash</span><br></pre></td></tr></table></figure>

<h2 id="6、回程测试"><a href="#6、回程测试" class="headerlink" title="6、回程测试"></a>6、回程测试</h2><p>直接显示回程（小白用这个）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl https://raw.githubusercontent.com/ludashi2020/backtrace/main/install.sh -sSf | sh</span><br></pre></td></tr></table></figure>

<p>回程详细测试（推荐）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/Chennhaoo/Shell_Bash/master/AutoTrace.sh &amp;&amp; chmod +x AutoTrace.sh &amp;&amp; bash AutoTrace.sh</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget https://ghproxy.com/https://raw.githubusercontent.com/vpsxb/testrace/main/testrace.sh -O testrace.sh &amp;&amp; bash testrace.sh</span><br></pre></td></tr></table></figure>

<h2 id="7、功能脚本"><a href="#7、功能脚本" class="headerlink" title="7、功能脚本"></a>7、功能脚本</h2><p>添加SWAP</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget https://www.moerats.com/usr/shell/swap.sh &amp;&amp; bash swap.sh</span><br></pre></td></tr></table></figure>

<p>Fail2ban</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate https://raw.githubusercontent.com/FunctionClub/Fail2ban/master/fail2ban.sh &amp;&amp; bash fail2ban.sh 2&gt;&amp;1 | tee fail2ban.log</span><br></pre></td></tr></table></figure>

<p>一键开启BBR，适用于较新的Debian、Ubuntu</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &quot;net.core.default_qdisc=fq&quot; &gt;&gt; /etc/sysctl.conf</span><br><span class="line">echo &quot;net.ipv4.tcp_congestion_control=bbr&quot; &gt;&gt; /etc/sysctl.conf</span><br><span class="line">sysctl -p</span><br><span class="line">sysctl net.ipv4.tcp_available_congestion_control</span><br><span class="line">lsmod | grep bbr</span><br></pre></td></tr></table></figure>

<p>多功能BBR安装脚本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -N --no-check-certificate &quot;https://gist.github.com/zeruns/a0ec603f20d1b86de6a774a8ba27588f/raw/4f9957ae23f5efb2bb7c57a198ae2cffebfb1c56/tcp.sh&quot; &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh</span><br></pre></td></tr></table></figure>

<p>锐速&#x2F;BBRPLUS&#x2F;BBR2&#x2F;BBR3</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -O tcpx.sh &quot;https://github.com/ylx2016/Linux-NetSpeed/raw/master/tcpx.sh&quot; &amp;&amp; chmod +x tcpx.sh &amp;&amp; ./tcpx.sh</span><br></pre></td></tr></table></figure>

<p>TCP窗口调优</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget http://sh.nekoneko.cloud/tools.sh -O tools.sh &amp;&amp; bash tools.sh</span><br></pre></td></tr></table></figure>

<p>添加warp</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -N https://gitlab.com/fscarmen/warp/-/raw/main/menu.sh &amp;&amp; bash menu.sh [option] [lisence/url/token]</span><br></pre></td></tr></table></figure>

<p>25端口开放测试</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">telnet smtp.aol.com 25</span><br></pre></td></tr></table></figure>

<h2 id="8、一键安装常用环境及软件"><a href="#8、一键安装常用环境及软件" class="headerlink" title="8、一键安装常用环境及软件"></a>8、一键安装常用环境及软件</h2><p>docker</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -sSL https://get.daocloud.io/docker | sh</span><br></pre></td></tr></table></figure>

<p>Python</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -O https://raw.githubusercontent.com/lx969788249/lxspacepy/master/pyinstall.sh &amp;&amp; chmod +x pyinstall.sh &amp;&amp; ./pyinstall.sh</span><br></pre></td></tr></table></figure>

<p>iperf3</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt install iperf3</span><br></pre></td></tr></table></figure>

<p>realm</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -L https://raw.githubusercontent.com/zhouh047/realm-oneclick-install/main/realm.sh) -i</span><br></pre></td></tr></table></figure>

<p>gost</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget --no-check-certificate -O gost.sh https://raw.githubusercontent.com/qqrrooty/EZgost/main/gost.sh &amp;&amp; chmod +x gost.sh &amp;&amp; ./gost.sh</span><br></pre></td></tr></table></figure>

<p>极光面板</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -fsSL https://raw.githubusercontent.com/Aurora-Admin-Panel/deploy/main/install.sh)</span><br></pre></td></tr></table></figure>

<p>哪吒监控</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -L https://raw.githubusercontent.com/naiba/nezha/master/script/install.sh  -o nezha.sh &amp;&amp; chmod +x nezha.sh &amp;&amp; sudo ./nezha.sh</span><br></pre></td></tr></table></figure>

<p>WARP</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -N https://gitlab.com/fscarmen/warp/-/raw/main/menu.sh &amp;&amp; bash menu.sh</span><br></pre></td></tr></table></figure>

<p>Aria2</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -N git.io/aria2.sh &amp;&amp; chmod +x aria2.sh &amp;&amp; ./aria2.sh</span><br></pre></td></tr></table></figure>

<p>宝塔</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -O install.sh http://v7.hostcli.com/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh</span><br></pre></td></tr></table></figure>

<p>PVE虚拟化</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash &lt;(wget -qO- --no-check-certificate https://raw.githubusercontent.com/oneclickvirt/pve/main/scripts/build_backend.sh)</span><br></pre></td></tr></table></figure>

<p>Argox</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bash &lt;(wget -qO- https://raw.githubusercontent.com/fscarmen/argox/main/argox.sh)</span><br></pre></td></tr></table></figure>

<h2 id="9、综合功能脚本"><a href="#9、综合功能脚本" class="headerlink" title="9、综合功能脚本"></a>9、综合功能脚本</h2><p>科技lion</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt update -y  &amp;&amp; apt install -y curl</span><br><span class="line"></span><br><span class="line">bash &lt;(curl -sL kejilion.sh)</span><br></pre></td></tr></table></figure>

<p>SKY-BOX</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget -O box.sh https://raw.githubusercontent.com/BlueSkyXN/SKY-BOX/main/box.sh &amp;&amp; chmod +x box.sh &amp;&amp; clear &amp;&amp; ./box.sh</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>最佳免费NPV方式-workers搭建vless使用</title>
    <url>/undefined/1b7388f.html</url>
    <content><![CDATA[<h2 id="资源："><a href="#资源：" class="headerlink" title="资源："></a>资源：</h2><h6 id="WIN"><a href="#WIN" class="headerlink" title="WIN:"></a><strong>WIN:</strong></h6><p>v2rayN 最新版<a href="https://github.com/2dust/v2rayN/releases">下载地址&gt;&gt;</a></p>
<p>cloudflare<a href="https://dash.cloudflare.com/">网站链接&gt;&gt;</a></p>
<p>临时邮箱：<a href="https://www.linshiyouxiang.net/">https://www.linshiyouxiang.net/</a></p>
<p>部署代码：<a href="https://github.com/zizifn/edgetunnel/blob/main/src/worker-vless.js">https://github.com/zizifn/edgetunnel/blob/main/src/worker-vless.js</a></p>
<p>uuid生成：<a href="https://1024tools.com/uuid">https://1024tools.com/uuid</a></p>
<p>workers win专用ip优选：<a href="https://jdssl.top/wp-content/uploads/2023/07/works%E4%B8%93%E7%94%A8ip%E4%BC%98%E9%80%89.zip">下载地址&gt;&gt;</a></p>
<p>ip查看：<a href="https://whatismyipaddress.com/">https://whatismyipaddress.com/</a></p>
<p>cf ip优选；<a href="https://stock.hostmonit.com/CloudFlareYes">https://stock.hostmonit.com/CloudFlareYes</a></p>
<p>网络测速：<a href="https://www.speedtest.net/result/14952074175">https://www.speedtest.net/result/14952074175</a></p>
<p>openclash转换订阅网址：<a href="https://sub-web.netlify.app/">https://sub-web.netlify.app/</a></p>
<h5 id="cdn加速"><a href="#cdn加速" class="headerlink" title="cdn加速"></a>cdn加速</h5><p>cdn-all.xn–b6gac.eu.org<br>cdn.xn–b6gac.eu.org<br>cdn-b100.xn–b6gac.eu.org<br>edgetunnel.anycast.eu.org<br>cdn.anycast.eu.org （亚洲地区）</p>
<h6 id="MAC"><a href="#MAC" class="headerlink" title="MAC:"></a>MAC:</h6><p>v2rayu: <a href="https://github.com/yanue/V2rayU/releases/tag/v3.8.0">下载链接&gt;&gt;</a></p>
<h5 id="cloudflarest-ip优化："><a href="#cloudflarest-ip优化：" class="headerlink" title="cloudflarest ip优化："></a>cloudflarest ip优化：</h5><p>mac inter :<a href="https://github.com/XIU2/CloudflareSpeedTest/releases/download/v2.2.4/CloudflareST_darwin_amd64.zip">下载地址&gt;&gt;</a></p>
<p>mac arm :<a href="https://github.com/XIU2/CloudflareSpeedTest/releases/download/v2.2.4/CloudflareST_darwin_arm64.zip">下载地址&gt;&gt;</a></p>
<p>cloudflarest ip段：<a href="https://zip.baipiao.eu.org/">下载地址&gt;&gt;</a></p>
<p>备注：需要自行下载上方CDN IP段否则只能延迟测速。</p>
<p>终端：</p>
<p>cd &#x2F;xxxx&#x2F;xxxxx&#x2F;CloudfareST_darwin_amd64</p>
<p>无法使用以下代码或报错请赋予权限：</p>
<p>chmod a+x CloudflareST</p>
<p>若实在无法解决该问题请使用这个网站进行优选ip <em><a href="https://vfarid.github.io/cf-ip-scanner/?max=30">点击优选ip&gt;&gt;</a>)</em></p>
<p><a href=""><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202311061021358.png" alt="img"></a></p>
<p>普通ip优选</p>
<p>sudo .&#x2F;CloudflareST</p>
<p>10 个平均延迟低于 200 ms且下载速度高于3MB&#x2F;s的IP</p>
<p>sudo .&#x2F;CloudflareST -url <a href="https://jp.cloudflarest.link/">https://jp.cloudflarest.link</a> -tl 200 -sl 3 -dn 10</p>
<p>sudo .&#x2F;CloudflareST -url <a href="https://hkcs.cloudflarest.link/">https://hkcs.cloudflarest.link</a> -tl 200 -sl 3 -dn 10</p>
<h2 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h2><h3 id="一、注册cloudflare账：https-dash-cloudflare-com-login"><a href="#一、注册cloudflare账：https-dash-cloudflare-com-login" class="headerlink" title="一、注册cloudflare账：https://dash.cloudflare.com/login"></a>一、注册cloudflare账：<a href="https://dash.cloudflare.com/login">https://dash.cloudflare.com/login</a></h3><p>点击Workers 和 Pages，创建Workers</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202311061022123.png"></p>
<p>写上备注或者名字</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202311061022475.png"></p>
<h3 id="二、代码部署"><a href="#二、代码部署" class="headerlink" title="二、代码部署"></a>二、代码部署</h3><p>复制代码到编辑器：<a href="https://github.com/zizifn/edgetunnel/blob/main/src/worker-vless.js">https://github.com/zizifn/edgetunnel/blob/main/src/worker-vless.js</a></p>
<p>修改userid–生成：<a href="https://1024tools.com/uuid">https://1024tools.com/uuid</a></p>
<p>修改proxyip–cdn加速（随便选一个）</p>
<p>cdn-all.xn–b6gac.eu.org<br>cdn.xn–b6gac.eu.org<br>cdn-b100.xn–b6gac.eu.org<br>edgetunnel.anycast.eu.org<br>cdn.anycast.eu.org （亚洲地区）</p>
<p>或**(113.64.186.198或者103.200.112.108或者199.15.76.35)**</p>
<p><strong>通过issues进行proxyip查找：<a href="https://github.com/zizifn/edgetunnel/issues/162">https://github.com/zizifn/edgetunnel/issues/162</a></strong></p>
<p><a href=""><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202311061023400.webp" alt="img"></a></p>
<h3 id="三、点击部署运行，然后在浏览器输入地址【网站域名-和刚刚修改的uuid】"><a href="#三、点击部署运行，然后在浏览器输入地址【网站域名-和刚刚修改的uuid】" class="headerlink" title="三、点击部署运行，然后在浏览器输入地址【网站域名 &#x2F; 和刚刚修改的uuid】"></a>三、点击部署运行，然后在浏览器输入地址【网站域名 &#x2F; 和刚刚修改的uuid】</h3><p>如noisevless.workers.dev&#x2F;c55-08e2-46fa-9d21-2e6020d9acd9，得到配置信息</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202311061025196.png"></p>
<p>复制v2ray显示的信息，然后在v2ray中下拉菜单中选择从粘贴板导入，然后查看服务器列表是否有该地址</p>
<p><a href=""><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202311061026907.webp" alt="img"></a></p>
<h3 id="四、配置ip优选"><a href="#四、配置ip优选" class="headerlink" title="四、配置ip优选"></a>四、配置ip优选</h3><p>本地拉取ip优选 Github：<a href="https://github.com/XIU2/CloudflareSpeedTest">https://github.com/XIU2/CloudflareSpeedTest</a></p>
<p>下载：<a href="https://github.com/XIU2/CloudflareSpeedTest/releases">https://github.com/XIU2/CloudflareSpeedTest/releases</a></p>
<p>国内用户建议从蓝奏云下载：<a href="https://pan.lanzouj.com/b0742hkxe">https://pan.lanzouj.com/b0742hkxe</a></p>
<p>支持win、Mac、linux【注意：退出所有代理软件】</p>
<p>提示：MAC 系统下如果遇到提示：open ip.txt: no such file or directory 说明你没有在软件所在目录下运行。</p>
<p>如果平均延迟非常低（如 0.xx），则说明 CloudflareST 测速时走了代理，请先关闭代理软件后再测速。</p>
<p>如果在路由器上运行，请先关闭路由器内的代理（或将其排除），否则测速结果可能会不准确&#x2F;无法使用。</p>
<p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p>
<p>脚本【cfst_host.sh】的作用是 CloudflareST 测速后获取最快 IP 并替换 Hosts 中的 Cloudflare CDN IP。</p>
<p>使用前请先阅读：<a href="https://github.com/XIU2/CloudflareSpeedTest/discussions/312#discussioncomment-5161577">https://github.com/XIU2/CloudflareSpeedTest/discussions/312#discussioncomment-5161577</a></p>
<p>&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</p>
<p>ip.txt 为 IPv4 数据文件<br>ipv6.txt 为 IPv6 数据文件</p>
<p>可以使用 -f xx.txt 参数来指定不同的 IP 数据文件（支持 IPv4 + IPv6 混合测速），如：<br>.&#x2F;CloudflareST -f ipv6.txt</p>
<p>也可以直接通过参数指定要测速的 IP，如：<br>.&#x2F;CloudflareST -ip 1.1.1.1,2606:4700::&#x2F;32</p>
<p>Mac：终端：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /xxxx/xxxxx/CloudfareST\_darwin\_amd64</span><br></pre></td></tr></table></figure>

<p>无法使用以下代码或报错请赋予权限：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chmod a+x CloudflareST</span><br></pre></td></tr></table></figure>

<p>然后运行 <code>sudo ./CloudflareST</code></p>
<p><a href=""><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202311061026875.jpeg" alt="img"></a></p>
<h3 id="五、v2rayu软件设置"><a href="#五、v2rayu软件设置" class="headerlink" title="五、v2rayu软件设置"></a>五、v2rayu软件设置</h3><h2 id="不设置自定义域名解析（没tls加密，80或者2052端口）："><a href="#不设置自定义域名解析（没tls加密，80或者2052端口）：" class="headerlink" title="不设置自定义域名解析（没tls加密，80或者2052端口）："></a>不设置自定义域名解析（没tls加密，80或者2052端口）：</h2><p>选择延迟最低的ip地址填入v2rayu设置中，<strong>注意：v2ray,shadowrocket等客户端要去掉tls加密，端口改为80或者2052，地址修为优选 ip，host为你部署works的地址</strong></p>
<p><a href=""><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202311061026600.webp" alt="img"></a></p>
<p>点击on开启v2rayu，选择全局模式即可</p>
<p>win端选择优选服务器后开启活动服务器</p>
<p><a href=""><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202311061026578.webp" alt="img"></a></p>
<p><a href=""><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202311061026372.webp" alt="img"></a></p>
<h2 id="有域名（有tls加密，443端口-："><a href="#有域名（有tls加密，443端口-：" class="headerlink" title="有域名（有tls加密，443端口)："></a>有域名（有tls加密，443端口)：</h2><p>works配置域名：在触发器中添加自定义域名，然后在二级域名后加&#x2F;UUID，就能看到VLESS节点URL和Clash-meta配置<br>在v2rayN导入URL，地址栏改为优选ip，secrurity为pls，端口配置443，host为解析的域名地址，</p>
<p><a href=""><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202311061026359.webp" alt="img"></a></p>
<p>确认之后就生成v2ray和clash-meta节点配置信息</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202311061027942.png"></p>
<p><strong>3大运营商优选IP，根据自身运营商选择延迟最低IP</strong> <a href="https://stock.hostmonit.com/CloudFlareYes">点击直达</a></p>
<p>再按照上面介绍的正确填写信息即可，别名地址都是我们自定义后的域名</p>
<p><a href=""><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202311061027451.webp" alt="img"></a></p>
<h2 id="附加"><a href="#附加" class="headerlink" title="附加"></a>附加</h2><p>v2ray的正确信息修改</p>
<p>1、修改地址,改成自己运营商的优选IP</p>
<p>2、端口修改为2052或者80</p>
<p>3、关闭tls</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202311061028951.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line">clash-meta的正确信息修改</span><br></pre></td></tr></table></figure>

<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202311061029359.png"></p>
<p>如果有域名的：<br>只需要替换优选ip，然后sni和host检查时自己的域名哦</p>
<p>**speedtest測速-**<a href="https://www.speedtest.net/">https://www.speedtest.net/</a></p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>NPV</tag>
      </tags>
  </entry>
  <entry>
    <title>李跳跳2.2正式版</title>
    <url>/undefined/f5caf0fa.html</url>
    <content><![CDATA[<p><strong>无论你是哪个版本的李跳跳，都建议更新啊喂。</strong></p>
<h1 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h1><p>1.省电优化。</p>
<p>2.响应速度优化。</p>
<p>3.内置算法优化。</p>
<p>4.适配更多APP。</p>
<p>5.修复已知BUG。</p>
<p>6.修复用户反馈的问题。</p>
<p>7.适配圆形倒计时广告。</p>
<p>8.优化微信自动勾选原图。</p>
<p>9.新增无障碍服务异常检测。</p>
<p>10.自定义规则优化，支持关闭任意个连续弹窗。</p>
<p>11.自定义规则优化，支持同一弹窗点击多个位置。</p>
<p>12.自定义规则优化，遇到流氓弹窗容易误点广告的问题。</p>
<p>13.优化短时间内弹出多个弹窗无法全部关闭的问题。</p>
<p>14.过滤一些不合理输入，减少系统资源损耗。</p>
<p>15.自定义规则支持CheckBox状态判断。</p>
<p>16.修复华为系统下的特定BUG。</p>
<p>17.适配华为系统下的特定广告。</p>
<p>18.特定APP新增特定算法。</p>
<p>19.适配特定系统的优化。</p>
<p>20.支持自定义点击序列。</p>
<p>21.优化节点过滤逻辑。</p>
<p>22.支持覆盖内置规则。</p>
<p>23.无障碍标签完善。</p>
<p>24.优化部分文案。</p>
<p>25.更换新图标。</p>
<p>26.更换包名(无奈之举)。</p>
<h1 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h1><p>免登陆下载：<a href="https://www.123pan.com/s/bAORVv-QGQl.html">https://www.123pan.com/s/bAORVv-QGQl.html</a></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304091214921.png" alt="image-20230409121412470"></p>
]]></content>
      <categories>
        <category>软件分享</category>
      </categories>
      <tags>
        <tag>安卓软件</tag>
      </tags>
  </entry>
  <entry>
    <title>电脑谷歌浏览器糖心使用教程</title>
    <url>/undefined/77efc3f1.html</url>
    <content><![CDATA[<p>1、先安装油猴插件<br><a href="https://greasyfork.org/scripts/461743-%E7%B3%96%E5%BF%83/code/%E7%B3%96%E5%BF%83.user.js">油猴插件</a><br>2、安装更改 ua 插件（挂梯子扶墙，打开 chrome 应用商店安装）<br><a href="https://chrome.google.com/webstore/detail/user-agent-switcher-and-m/bhchdcejhohfmigjafbampogmaanbfkg">https://chrome.google.com/webstore/detail/user-agent-switcher-and-m/bhchdcejhohfmigjafbampogmaanbfkg</a><br>3、按照这个教程(使用拓展插件进行修改)设置 ua<br><a href="https://blog.csdn.net/m0_46665077/article/details/125713310#22__31">https://blog.csdn.net/m0_46665077/article/details/125713310#22__31</a><br>下面是 UA：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Mozilla/5.0(iPhone;CPUiPhoneOS11_4_1likeMacOSX)AppleWebKit/537.36(KHTML,likeGecko)Chrome/77.0.3865.116MobileSafari/11.0Mobile/58.0Firefox/12F70Safari/537.36Quark/3.8.4.128UCBrowser/12.0.4.985baiduboxapp/3.2.5.10MQQBrowser/7.2.1.2965XiaoMi/MiuiBrowser/11.9.2SearchCraft/2.0.0ALiSearchApp/2.4AliApp(TB/9.5.6)BingWeb/6.2TBS/537.36Weiyun/6.9.37(Android)Weiyun(zh-Hans)/537.36</span><br></pre></td></tr></table></figure>

<p>4、最后打开网址<a href="https://txh016.com/">https://txh016.com</a>奔放</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>18+</tag>
      </tags>
  </entry>
  <entry>
    <title>短信转发神器,合宙 Air780E,700E 开发板刷机教程</title>
    <url>/undefined/15b05887.html</url>
    <content><![CDATA[<p>此教程只针对拿板子做短信转发器用，其他高阶操作（定位、联网、语音）需要自由拓展发挥。</p>
<h1 id="官网资料"><a href="#官网资料" class="headerlink" title="官网资料"></a>官网资料</h1><p>Air780E : <a href="https://doc.openluat.com/wiki/37?wiki_page_id=4454">https://doc.openluat.com/wiki/37?wiki_page_id=4454</a></p>
<p>Air700E : <a href="https://doc.openluat.com/wiki/44?wiki_page_id=4730">https://doc.openluat.com/wiki/44?wiki_page_id=4730</a></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303300802872.webp" alt="img"></p>
<h1 id="刷机前的准备"><a href="#刷机前的准备" class="headerlink" title="刷机前的准备"></a>刷机前的准备</h1><h2 id="下载Lua固件烧录工具Luatools-v2-7z"><a href="#下载Lua固件烧录工具Luatools-v2-7z" class="headerlink" title="下载Lua固件烧录工具Luatools_v2.7z"></a>下载Lua固件烧录工具Luatools_v2.7z</h2><p>下载地址：<a href="https://luatos.com/luatools/download/last">https://luatos.com/luatools/download/last</a></p>
<p>大概看一下这个工具的安装使用教程<a href="https://doc.openluat.com/wiki/37?wiki_page_id=4489">https://doc.openluat.com/wiki/37?wiki_page_id=4489</a></p>
<h2 id="下载EC618芯片的固件"><a href="#下载EC618芯片的固件" class="headerlink" title="下载EC618芯片的固件"></a>下载EC618芯片的固件</h2><p>这一步也可以省略，第三步的脚本里面包含最新固件</p>
<p>直接下载合宙编译发布的正式版内核固件：打开<a href="https://gitee.com/openLuat/LuatOS/releases">https://gitee.com/openLuat/LuatOS/releases</a> 后，搜索LuatOS-SoC#EC618下载需要的版本；</p>
<p>截至2023.3.15固件最新版本LuatOS-SoC#EC618 V1105 <a href="https://gitee.com/openLuat/LuatOS/releases/download/v0007.ec618.v1105/core_V1105.zip">https://gitee.com/openLuat/LuatOS/releases/download/v0007.ec618.v1105/core_V1105.zip</a></p>
<p>（#是替换符，替换@，便于阅读）</p>
<h2 id="下载软件脚本"><a href="#下载软件脚本" class="headerlink" title="下载软件脚本"></a>下载软件脚本</h2><p><a href="https://github.com/lageev/air780e-forwarder">https://github.com/lageev/air780e-forwarder</a></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303300803714.webp" alt="img"></p>
<p>一般直接压缩压缩包就可以，如果你想后续跟着这个仓库更新，可以用git克隆到本地。</p>
<p>这个github仓库里有两个文件夹，core里面放的是固件，script里面放的是脚本。</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303300803027.webp" alt="img"></p>
<p>soc后缀的是固件，lua后缀的是脚本。</p>
<p>选择固件的时候，任选一个，固件的文件名写了固件不同的功能和版本，有的是基础固件，有的是带TTS的，RNDIS是带网卡能力的，一般选FULL（全都有）就可以了。</p>
<p>选择脚本的时候，需要全选。</p>
<p>这里说的「选」，是指第二步，烧录的时候选择「文件」，这里先不管。</p>
<p>脚本在烧录之前需要手动改一下config.lua 文件的代码，填写你自己的token或者webhook地址</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303300803773.webp" alt="img"></p>
<p>如上图，需要先填写「NOTIFY_TYPE」字段，这里支持多选，支持上面注释的例子里面的渠道。</p>
<p>比如你想同时推送到bark和钉钉,第四行代码就是NOTIFY_TYPE&#x3D;{“bark”,”dingtalk”}，以此类推，只有一个推送渠道的时候，大括号可以省略。</p>
<p>改写完「NOTIFY_TYPE」字段，还需要改下面的webhook地址，需要你去对应的软件获取，具体方法自己解决，代码里已经给了相关的文档地址。</p>
<p>这里举个bark的例子，如果你的iOS设备上安装了bark，</p>
<p>打开首页会有很多网址</p>
<p>比如 <a href="https://api.day.app/xxxxxxxxxx">https://api.day.app/xxxxxxxxxx</a></p>
<p>xxxxxxx所代表的就是bark的key，只需要把这个key复制到config.lua 中 BARK_KEY中即可，API字段不用变（如果你没有自己部署Bark的话）。</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303300803629.webp" alt="img"></p>
<p>在config.lua 代码中填写完你自己的配置，保存之后，其他的就不要动了。</p>
<h1 id="烧录固件和脚本"><a href="#烧录固件和脚本" class="headerlink" title="烧录固件和脚本"></a>烧录固件和脚本</h1><p>这里的烧录固件就相当于刷机，刷ROM，脚本就相当于安装App。</p>
<p>由于开发板自身没有用户界面，所以所有的安装操作都是通过烧录完成的。需要用USB-C数据线将电脑和开发板连接，剩下的所有操作都在LuaTool里面。</p>
<p>首先将开发板连接电脑，先不要开机。</p>
<p>按照下图步骤操作</p>
<p>1、勾选「4G模块USB打印」</p>
<p>2、选择右上方「项目管理按钮」</p>
<p>3、创建项目，项目名随意，主要是区分每次刷的脚本和固件</p>
<p>4、选择电脑中已经下载好的固件</p>
<p>5、选择电脑中已经下载好的脚本</p>
<p>6、点击「下载底层和脚本」</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303300803467.webp" alt="img"></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303300804588.webp" alt="img">点击「下载底层和脚本」之后，软件会有文字提示，「正在准备xxx」「正在下载xxx」</p>
<p>这时候，同时按住电源键和BOOT键，软件有反应了再松手（提示「发现下载端口」），这时候固件和脚本会自动刷入，知道提示下载完成。</p>
<p>提示：700E和780E的按键一样，可以参考文章开头的大图，从左往右依次是「电源键」「重置键」「BOOT键」</p>
<p>这时，烧录操作全部完成，可以开机使用了。</p>
<p>这里多说一句，如果以后你想刷别的脚本，就直接新建项目选择背的脚本就行了，然后刷的时候点击「下载脚本」就行了，固件不用选，因为你只是更换脚本。</p>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>日常使用插卡，接上电源即可（普通的USB-C接5V USB即可）。需要看日志可以连接电脑，使用Luatools查看。记得打开上面说的「4G模块USB打印」。</p>
<p>现在Air700E官网仅售9.9，780E仅售39。</p>
<p>700仅支持移动卡，780E支持移动＋联通。</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>短信转发</tag>
      </tags>
  </entry>
  <entry>
    <title>神秘模块入门教程（Android端）</title>
    <url>/undefined/d7b14abe.html</url>
    <content><![CDATA[<p><strong>使用前提</strong><br>1.已经安装Magisk或KernelSU的安卓设备</p>
<p>2.安卓6.0以上</p>
<h1 id="一-安装node"><a href="#一-安装node" class="headerlink" title="一 安装node"></a>一 安装node</h1><h2 id="下载Tetmux"><a href="#下载Tetmux" class="headerlink" title="下载Tetmux"></a>下载Tetmux</h2><p><a href="https://github.com/termux/termux-app/releases">https://github.com/termux/termux-app/releases</a></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304220807195.jpeg" alt="img"></p>
<p>默认下第2个，其他根据自己的系统架构选择</p>
<h2 id="设置国内镜像"><a href="#设置国内镜像" class="headerlink" title="设置国内镜像"></a>设置国内镜像</h2><p>命令行输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">termux-change-repo</span><br></pre></td></tr></table></figure>

<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304220920955.jpg"></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304220920451.jpg"></p>
<h2 id="apt更新所有包"><a href="#apt更新所有包" class="headerlink" title="apt更新所有包"></a>apt更新所有包</h2><p>apt update &amp;&amp; apt upgrade</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304220921028.jpg"></p>
<p>看到输入Y</p>
<h2 id="重新设置国内镜像"><a href="#重新设置国内镜像" class="headerlink" title="重新设置国内镜像"></a>重新设置国内镜像</h2><p>termux-change-repo</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304220922420.jpg"></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304220922620.jpg"></p>
<h2 id="安装node"><a href="#安装node" class="headerlink" title="安装node"></a>安装node</h2><p>apt install nodejs</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304220923571.jpg"></p>
<p>看到输入Y</p>
<h2 id="检查node"><a href="#检查node" class="headerlink" title="检查node"></a>检查node</h2><p>node -v</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304220923747.jpg"></p>
<p>返回版本号就安装成功了</p>
<h1 id="第二步-模块刷入"><a href="#第二步-模块刷入" class="headerlink" title="第二步 模块刷入"></a>第二步 模块刷入</h1><p>在发布页下载最新的神秘模块 一般其名称应为 神秘_android_发布时间.zip </p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304220923727.jpg"></p>
<p>TG群组链接：<a href="https://t.me/blowh2o">https://t.me/blowh2o</a></p>
<p>123云盘下载链接：<a href="https://www.123pan.com/s/bAORVv-8XQl.html">https://www.123pan.com/s/bAORVv-8XQl.html</a></p>
<h2 id="安装模块"><a href="#安装模块" class="headerlink" title="安装模块"></a>安装模块</h2><p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304220924515.jpg"></p>
<h2 id="进入面板"><a href="#进入面板" class="headerlink" title="进入面板"></a>进入面板</h2><p>打开<a href="http://127.0.0.1:23333/">127.0.0.1:23333</a></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304220924533.jpg"></p>
<h1 id="配置神秘"><a href="#配置神秘" class="headerlink" title="配置神秘"></a>配置神秘</h1><h2 id="第一步-选择-涂涂改改"><a href="#第一步-选择-涂涂改改" class="headerlink" title="第一步 选择 涂涂改改"></a>第一步 选择 <strong>涂涂改改</strong></h2><p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304220924025.jpg"></p>
<h2 id="第二步-选择星盘"><a href="#第二步-选择星盘" class="headerlink" title="第二步 选择星盘"></a>第二步 选择<strong>星盘</strong></h2><p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304220924598.jpg"></p>
<p>新建<strong>星盘</strong></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304220925165.jpg"></p>
<p>选<strong>召唤类星盘</strong></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304220925718.jpg"></p>
<p>填 <strong>星盘名称</strong> <strong>召唤法阵</strong>其他看需求的</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304220925292.jpg"></p>
<h2 id="第三步-在涂涂改改-传送阵"><a href="#第三步-在涂涂改改-传送阵" class="headerlink" title="第三步 在涂涂改改-传送阵"></a>第三步 在<strong>涂涂改改-传送阵</strong></h2><p>新建<strong>传送阵</strong></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304220925886.jpg"></p>
<p>选择<strong>定向司南</strong></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304220925674.jpg"></p>
<p>选择创建的<strong>星盘</strong></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304220926756.jpg"></p>
<h2 id="第四步-自动测速（非必选）"><a href="#第四步-自动测速（非必选）" class="headerlink" title="第四步 自动测速（非必选）"></a>第四步 自动测速（非必选）</h2><p>新建<strong>传送阵</strong></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304220926790.jpg"></p>
<p>选择<strong>随缘司南</strong></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304220926064.jpg"></p>
<p>选择想<strong>自动测速</strong>的<strong>星盘</strong></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304220926035.jpg"></p>
<h2 id="第五步-传送阵套娃"><a href="#第五步-传送阵套娃" class="headerlink" title="第五步 传送阵套娃"></a>第五步 传送阵套娃</h2><p>根据<strong>传送阵</strong>选择合适的<strong>传送阵套娃</strong></p>
<p>国外选择proxy，国内选择domestic</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304220926822.jpg"></p>
<p>选择你想<strong>套娃</strong>的<strong>传送阵</strong></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304220926289.jpg"></p>
<h2 id="第六步-更新"><a href="#第六步-更新" class="headerlink" title="第六步 更新"></a>第六步 更新</h2><p>选择你想更新的<strong>星盘</strong>当然可以全部更新</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304220927381.jpg"></p>
<p>提示处理完成就成功更新了</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304220927523.jpg"></p>
<h2 id="第七步-使用"><a href="#第七步-使用" class="headerlink" title="第七步 使用"></a>第七步 使用</h2><p>选择查<strong>星盘</strong></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304220927279.jpg"></p>
<p>左边选择代理</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304220927139.jpg"></p>
<p>找到<strong>传送阵套娃名称</strong>选<strong>传送阵</strong>最好自动测<strong>速</strong></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304220927912.jpg"></p>
<h1 id="第三步-国内外分流-基础正则使用"><a href="#第三步-国内外分流-基础正则使用" class="headerlink" title="第三步 国内外分流&amp;基础正则使用"></a>第三步 <strong>国内外分流&amp;基础正则使用</strong></h1><p>注:一般一个机场都是国内国外节点混合，我们要用正则进行过滤</p>
<h2 id="1-新建传送阵"><a href="#1-新建传送阵" class="headerlink" title="1.新建传送阵"></a>1.新建<strong>传送阵</strong></h2><p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304220928845.jpg"></p>
<p>注:名称不要同名</p>
<p><strong>传送阵类型</strong>选择<strong>定向司南</strong></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304220928143.jpg"></p>
<p>选择你要筛选的<strong>星盘</strong></p>
<p>例:cn|深圳 筛选CN和深圳的节点名称</p>
<p>“|”进行分隔，切记请不要“|”后面空白，否则将筛选全部</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304220928466.jpg"></p>
<h2 id="2-自动测速（非必选）"><a href="#2-自动测速（非必选）" class="headerlink" title="2.自动测速（非必选）"></a>2.自动测速（非必选）</h2><p>新建个<strong>传送阵</strong>，<strong>传送阵</strong>类型选择<strong>随缘司</strong>南</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304220928724.jpg"></p>
<p>正则如上</p>
<p>选择你要筛选的<strong>星盘</strong></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304220928156.png"></p>
<p>注:只选填红框内，其他无管</p>
<p>根据<strong>传送阵</strong>选择合适的<strong>传送阵套娃</strong></p>
<p>国外选择proxy，国内选择domestic</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304220929488.jpg"></p>
<p>选择合适的<strong>传送阵</strong></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304220929174.jpg"></p>
<h1 id="第四步-热点模式"><a href="#第四步-热点模式" class="headerlink" title="第四步 热点模式"></a>第四步 <strong>热点模式</strong></h1><p><strong>热点模式</strong>和<strong>兼容模式</strong>打开</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202304220929159.jpg"></p>
<h1 id="第五步-常见问题（非必选）"><a href="#第五步-常见问题（非必选）" class="headerlink" title="第五步 常见问题（非必选）"></a>第五步 <strong>常见问题（非必选）</strong></h1><p>正在施工中</p>
<h1 id="第六步-神秘文字解释（非必选）"><a href="#第六步-神秘文字解释（非必选）" class="headerlink" title="第六步 神秘文字解释（非必选）"></a>第六步 神秘文字解释（非必选）</h1><p><strong>1.神秘面板主页</strong></p>
<p><strong>不唱了</strong>→<strong>停止</strong></p>
<p><strong>歇一会</strong>→<strong>重启</strong></p>
<p>查<strong>星盘</strong>→查看<strong>yacd面板</strong>&amp;<strong>神秘实验室面板</strong></p>
<p><strong>涂涂改改</strong>→<strong>设置</strong></p>
<p><strong>召唤</strong>→<strong>单独更新订阅</strong></p>
<p><strong>全部施法</strong>→<strong>更新所有订阅</strong></p>
<p><strong>2.涂涂改改（设置）</strong></p>
<p><strong>一.星盘（订阅）</strong></p>
<p><strong>星盘类型</strong> <strong>召唤类星盘</strong>→<strong>订阅链接</strong></p>
<p><strong>献祭类星盘</strong>→<strong>本地文件</strong></p>
<p><strong>召唤星盘时查询星盘法力剩余→查询订阅链接的流量详情</strong></p>
<p><strong>二.传送阵（出站）</strong></p>
<p><strong>传送阵类型</strong> <strong>定向司南</strong>→<strong>分组</strong></p>
<p><strong>随缘司南</strong>→<strong>自动测速分组</strong></p>
<p><strong>传送阵套娃</strong>→<strong>引用传送阵</strong></p>
<p><strong>我不是什么星盘都用的</strong>→<strong>引用订阅类型</strong></p>
<p><strong>对类型挑食</strong>→<strong>保留匹配的协议</strong></p>
<p><strong>对端口挑食</strong>→<strong>保留匹配的端口</strong></p>
<h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p><strong>三.子星图（未知）</strong></p>
<p><strong>四.星图（未知）</strong></p>
<p><strong>五.书之灵（未知）</strong></p>
<p><strong>六.神秘（设置）</strong></p>
<p><strong>神秘领域</strong>→<strong>访问神秘</strong> </p>
<p><strong>仅本机→仅本机访问神秘</strong> </p>
<p><strong>全领域→所有可访问神秘</strong></p>
<p><strong>神秘咒语</strong>→<strong>访问密码</strong></p>
<p><strong>切换唱法</strong>→<strong>模式</strong></p>
<p><strong>看情况</strong>→<strong>分流</strong></p>
<p><strong>学院派</strong>→<strong>全局</strong></p>
<p><strong>大白嗓</strong>→<strong>直连</strong></p>
<p><strong>七.朝圣池（未知）</strong></p>
<p><strong>八.辅助灵（未知）</strong></p>
<p><strong>九.日记（日志）</strong></p>
<p><strong>十.时之锚（Ntp时间校准）</strong></p>
<h1 id="订阅转换-机场推荐"><a href="#订阅转换-机场推荐" class="headerlink" title="订阅转换&amp;机场推荐"></a>订阅转换&amp;机场推荐</h1><p>免流骚订阅转换<a href="http://zhuan.mlsao.ml/">http://zhuan.mlsao.ml/</a></p>
<p>记得订阅转换为第二个选项clash的</p>
<p>魔法学院转换<a href="https://sub.v2.lu/">https://sub.v2.lu/</a></p>
<p>中国国际机场<a href="https://cnnic.pub/#/register?code=gr8guOWR">https://cnnic.pub/#/register?code=gr8guOWR</a></p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>免流</tag>
        <tag>CFM</tag>
      </tags>
  </entry>
  <entry>
    <title>记中兴MF932改串</title>
    <url>/undefined/27cbce44.html</url>
    <content><![CDATA[<h1 id="注意！"><a href="#注意！" class="headerlink" title="注意！"></a>注意！</h1><p><strong>改串需要自己将串号写入NV文件中，我也不知道怎么写入，本教程只做参考，不会生成改串的NV文件就不用再往下看了。</strong>**</p>
<h1 id="下载资料包"><a href="#下载资料包" class="headerlink" title="下载资料包"></a>下载资料包</h1><a class="btn-beautify green larger" href="https://www.123pan.com/s/bAORVv-LSEl.html" title="点击下载"><i class="far fa-hand-point-right"></i><span>点击下载</span></a>

<h1 id="安装驱动以及AT工具"><a href="#安装驱动以及AT工具" class="headerlink" title="安装驱动以及AT工具"></a>安装驱动以及AT工具</h1><p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303232019930.png"></p>
<p>安装驱动和AT工具都是一直默认下一步，驱动的话安装完成会有弹窗，再次点击Update Driver就行，安装完成关闭即可。</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303232027379.png" alt="image-20230323202701458"></p>
<h1 id="改串步骤"><a href="#改串步骤" class="headerlink" title="改串步骤"></a>改串步骤</h1><p>随身WiFi开机连接电脑，双击开端口.exe</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303232025428.png"></p>
<p>然后打开AT工具</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303232028866.png" alt="image-20230323202802094"></p>
<p>选择带AT的端口，波特率115200</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303232030393.png" alt="image-20230323203011060"></p>
<p>输入AT，点击发送，返回OK则连接成功</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303232031438.png" alt="image-20230323203136174"></p>
<p>输入</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">AT+zmode=1</span><br></pre></td></tr></table></figure>

<p>拔掉随身WiFi然后重连</p>
<p>在资料包文件夹打开命令提示符（CMD）,地址栏输入并回车</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303232039978.png" alt="image-20230323203952252"></p>
<p>按照下面的命令进行操作</p>
<p>备份原来NV</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adb pull /mnt/nvrofs/nvroall.bin C:\Users\YUQI\Desktop\（C:\Users\YUQI\Desktop\ 是保存的文件存放路径）</span><br></pre></td></tr></table></figure>

<p>清除设备NV</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adb shell mount -o remount,rw /mnt nvrofs</span><br><span class="line">adb shell rm -rf /mnt/nvrofs/nvroall.bin</span><br></pre></td></tr></table></figure>

<p>推送修改新imei的NV</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adb push C:\Users\YUQI\Desktop\nvroall.bin /mnt/nvrofs/ （C:\Users\YUQI\Desktop\nvroall.bin是新NV的路径）</span><br></pre></td></tr></table></figure>

<p>重启设备</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adb shell reboot</span><br></pre></td></tr></table></figure>

<p>拔掉随身WiFi再次连接</p>
<p>重复以上步骤，清除设备NV，推送修改新imei的NV，重启设备</p>
<p>完成</p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>随身WiFi</tag>
      </tags>
  </entry>
  <entry>
    <title>谷歌浏览器设置关闭搜索记录</title>
    <url>/undefined/42e51b95.html</url>
    <content><![CDATA[<p><strong>将 Chrome 的 History 文件设置为可读即可。</strong><br>操作方法：<br>1 、在 Chrome 浏览器地址栏中输入</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">chrome://version/</span><br></pre></td></tr></table></figure>

<p>2 、复制<strong>个人资料路径</strong>，关闭 Chrome 浏览器并到资源管理器中打开刚才复制的“个人资料路径”</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303062045271.png" alt="image-20230306204551884"></p>
<p>3 、找到History文件并删除，然后新建一个History文件，对History文件，右键—属性，勾选只读。</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202303062048179.png" alt="image-20230306204804357"></p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>Google浏览器</tag>
      </tags>
  </entry>
  <entry>
    <title>贵阳吉利程序解析</title>
    <url>/undefined/57946227.html</url>
    <content><![CDATA[<h1 id="程序框架"><a href="#程序框架" class="headerlink" title="程序框架"></a>程序框架</h1><p><strong>_00_Organization_Blocks</strong>：系统组织块</p>
<p><strong>_01_Initialization</strong>：初始化</p>
<p><strong>_02_HMI_OperationModes</strong>：HMI操作模式</p>
<p><strong>_07_Diagnosis</strong>：诊断</p>
<p><strong>LINE</strong>：功能块</p>
<p><strong>Main Call</strong>：模式区主调用</p>
<p><strong>MSG</strong>：模式区报警</p>
<p>工装</p>
<p><strong>Robot Zone Config</strong>：机器人干涉区配置</p>
<p>机器人</p>
<p><strong>Safety</strong>：安全程序</p>
<p><strong>ANDON</strong>：安东</p>
<p><strong>DB_USER</strong>：用户DB</p>
<p><strong>FC_User</strong>：用户FC</p>
<p><strong>SICAR</strong>：功能块</p>
<p><strong>Types_yixin</strong>：功能块</p>
<p>全局DB</p>
<h1 id="安全"><a href="#安全" class="headerlink" title="安全"></a>安全</h1><h2 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h2><p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202411222031727.png" alt="image-20241122203142738"></p>
<h2 id="注意项"><a href="#注意项" class="headerlink" title="注意项"></a>注意项</h2><h3 id="区域光栅"><a href="#区域光栅" class="headerlink" title="区域光栅"></a>区域光栅</h3><p>直接光栅复位按钮复位，用光栅对应的MLT信号做屏蔽</p>
<h3 id="急停"><a href="#急停" class="headerlink" title="急停"></a>急停</h3><p>需要对应模式区的安全门关好才可以复位，HMI急停需要所有安全门关好才可以复位</p>
<h3 id="相邻区域安全"><a href="#相邻区域安全" class="headerlink" title="相邻区域安全"></a>相邻区域安全</h3><p>区域光栅是好的就屏蔽掉相邻工位的急停和安全门</p>
<h3 id="安全供电"><a href="#安全供电" class="headerlink" title="安全供电"></a>安全供电</h3><p>安全条件满足就供安全电</p>
<h3 id="机器人安全"><a href="#机器人安全" class="headerlink" title="机器人安全"></a>机器人安全</h3><p>照着功能块填引脚即可</p>
<h3 id="安全门"><a href="#安全门" class="headerlink" title="安全门"></a>安全门</h3><p>关好门按复位即可</p>
<h3 id="光栅区扫"><a href="#光栅区扫" class="headerlink" title="光栅区扫"></a>光栅区扫</h3><p>直接光栅区扫复位按钮复位，用光栅对应的MLT信号做屏蔽</p>
<h1 id="模式"><a href="#模式" class="headerlink" title="模式"></a>模式</h1><h2 id="User-Interface-IN"><a href="#User-Interface-IN" class="headerlink" title="User_Interface_IN"></a>User_Interface_IN</h2><p><strong>H_OpMode</strong>：区域急停信号（区域报警MSG里面产生）</p>
<p><strong>M_OpMode</strong>：区域安全门信号（区域报警MSG里面产生）</p>
<p><strong>BasicStartCondition</strong>：基本启动条件（上电、急停安全门等OK）</p>
<p><strong>Pos_ImmediateStop</strong>：立即停止</p>
<p><strong>Pos_StopEndCycle</strong>：循环停止</p>
<p><strong>Pos_InitialPos</strong>：原位</p>
<p><strong>Pos_OpenDoor</strong>：开门条件</p>
<p><strong>Alarm</strong>：报警</p>
<h1 id="工装"><a href="#工装" class="headerlink" title="工装"></a>工装</h1><h2 id="头文件"><a href="#头文件" class="headerlink" title="头文件"></a>头文件</h2><p><strong>Station_No</strong>：工位号（不可重复）</p>
<p><strong>Name</strong>：工位名</p>
<p><strong>ActiveCarType</strong>：是否激活车型</p>
<p><strong>MsgWord</strong>：报警起始字（填多少在HMI报警里面就从报警字X16的地址开始找，关联到DB31的ERR_W）</p>
<h2 id="操作盒"><a href="#操作盒" class="headerlink" title="操作盒"></a>操作盒</h2><p><strong>PBStart</strong>：通过工位号和操作盒号来寻址得到</p>
<h2 id="车型条件"><a href="#车型条件" class="headerlink" title="车型条件"></a>车型条件</h2><p><strong>CanDO</strong>：不满足时自动完成当前指针</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202411241457382.png" alt="image-20241124145708336"></p>
<h2 id="传感器"><a href="#传感器" class="headerlink" title="传感器"></a>传感器</h2><p><strong>YX12_Part04_SI</strong>：传感器配置块（填有几个传感器，以及对应的信号）</p>
<p><strong>YX12_Part04_CFG</strong>：传感器状态块（配置当前工件编号（可用来区分不同车型需要用到的传感器），名字，<strong>Mask</strong>：正必为真，负必为假，0为不判断）</p>
<h2 id="工位自动程序"><a href="#工位自动程序" class="headerlink" title="工位自动程序"></a>工位自动程序</h2><p><strong>自动步尾文件</strong>：需要配置<strong>Max_S_No</strong>为Graph里面最大的步号，不然会影响HMI画面的显示</p>
<h2 id="气缸"><a href="#气缸" class="headerlink" title="气缸"></a>气缸</h2><p><strong>OBJ_No</strong>：第几个气缸</p>
<p><strong>Home_FWD</strong>     <strong>Home_BWD</strong>：气缸在什么位置为原位</p>
<p><strong>CC_FWD</strong>     <strong>CC_BWD</strong>：气缸互锁条件</p>
<p><strong>NumFWD</strong>    <strong>NumBWD</strong>：伸出缩回有几个传感器</p>
<p><strong>自动命令都是直接给到相应的背景DB里面的</strong></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202412060942646.jpg" alt="mmexport1733381636905"></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202412060942339.jpg" alt="mmexport1733381638785"></p>
<h1 id="机器人"><a href="#机器人" class="headerlink" title="机器人"></a>机器人</h1><h2 id="干涉区配置"><a href="#干涉区配置" class="headerlink" title="干涉区配置"></a>干涉区配置</h2><p>预留16个干涉区可以配置</p>
<p><strong>Zone_No</strong>：干涉区编号,1-64</p>
<p><strong>Group_No</strong>：分组编号，每干涉区1-7个分组</p>
<p><strong>Rbt_No</strong>：使用此干涉区分组的全局唯一机器人编号</p>
<p><strong>Robot Zone Config最后一段</strong></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202411232118218.png" alt="lQLPJv-xoZjBRrXNA5_NBMGwcPS1H1Hy8mgHJ13FDetXAA_1217_927"></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202411232119180.png" alt="3992cc222d6053827c4fd067201c547e"></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202411232119734.png" alt="5dbddaf77fdeede3327ad7701238b5f4"></p>
<h2 id="头文件-1"><a href="#头文件-1" class="headerlink" title="头文件"></a>头文件</h2><p><strong>RBT_No</strong>：机器人编号（不可重复）</p>
<p><strong>Name</strong>：机器人名称</p>
<p><strong>ActiveCarType</strong>：是否激活车型</p>
<p><strong>MsgWord</strong>：报警起始字（填多少在HMI报警里面就从报警字X16的地址开始找，关联到DB31的ERR_W）</p>
<h2 id="车型条件-1"><a href="#车型条件-1" class="headerlink" title="车型条件"></a>车型条件</h2><p><strong>CanDO</strong>：不满足时自动完成当前指针</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202411241457382.png" alt="image-20241124145708336"></p>
<h2 id="轨迹段进入编号"><a href="#轨迹段进入编号" class="headerlink" title="轨迹段进入编号"></a>轨迹段进入编号</h2><p><strong>YX09_RBT_SEG</strong>：10个轨迹段 进入工位编号（全局编号1-50），&lt; 0为与工位无关或不比对车型</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202411241519872.png" alt="img"></p>
<h1 id="订单消耗方式"><a href="#订单消耗方式" class="headerlink" title="订单消耗方式"></a>订单消耗方式</h1><p>FC1061    55段</p>
<p><strong>CanDO</strong></p>
<p><strong>WorkDone</strong>&#x3D;<strong>CycleFinish</strong></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202411232118947.png" alt="lQLPKHtxhR0Mcq3NA7TNBwKw1LGGsFn66VsHJoT6gosnAA_1794_948"></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202411232118949.png" alt="lQLPJyCXjWlXwW3NA8DNB16wjeqcDDPadp4HJoX6ffQgAA_1886_960"></p>
<p><strong>机器人完成的两种方式</strong></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202411232118013.png" alt="58b13f519e1f2c0683f8023456b0c6f7"></p>
<h1 id="注意项-1"><a href="#注意项-1" class="headerlink" title="注意项"></a>注意项</h1><h2 id="复制HMI时注意更改变量"><a href="#复制HMI时注意更改变量" class="headerlink" title="复制HMI时注意更改变量"></a>复制HMI时注意更改变量</h2><p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202411232118744.png" alt="img"></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202411241538795.png" alt="image-20241124153800238"></p>
<h2 id="车型下发"><a href="#车型下发" class="headerlink" title="车型下发"></a>车型下发</h2><p>DB31    PIS</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202411241521830.png" alt="image-20241124152128605"></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202411241521719.png" alt="e739d18a14c4b0d2ce600a075e30dfef"></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202411241522739.png" alt="d2bc26b41eeffd610cbe2e14b645f283"></p>
<h2 id="指针寻址找写入点方法"><a href="#指针寻址找写入点方法" class="headerlink" title="指针寻址找写入点方法"></a>指针寻址找写入点方法</h2><p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202411241535437.png" alt="image-20241124152944611"></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202411241535985.png" alt="image-20241124153050321"></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202411241536675.png" alt="image-20241124153306459"></p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/202411241536972.png" alt="image-20241124153505708"></p>
<h1 id="画面"><a href="#画面" class="headerlink" title="画面"></a>画面</h1>]]></content>
  </entry>
  <entry>
    <title>针对Prodiag现场License弹窗的解决方法</title>
    <url>/undefined/2622eae5.html</url>
    <content><![CDATA[<p>问题：触摸屏报缺少相关的License Key</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250510170721371.png" alt="image-20250510165712437"></p>
<p>打开2018版EKB秘钥（无法找到秘钥，请更换此2018秘钥）</p>
<p> <img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250510170736105.png" alt="image-20250510165723510"></p>
<p>选择此秘钥，安装长秘钥，</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250510170745318.png" alt="image-20250510165728998"></p>
<p>方法一：</p>
<p>打开软件</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250510170755265.png" alt="image-20250510165801227"></p>
<p>选择下图秘钥—</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250510170801052.png" alt="image-20250510165808104"></p>
<p>找到下图秘钥–右键点击Transfer</p>
<p>打开Tansfer 窗口，电脑与HMI屏幕连接后，可以找到需要下载的HMI设备（有具体IP地址），OK确认</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250510170807531.png" alt="image-20250510165818850"></p>
<p>方法二：也可以右键相关HMI的此属性，打开授权许可</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250510170813884.png" alt="image-20250510165826870"></p>
<p>找到相关HMI设备。</p>
<p><img src="https://pan.yuqi.fun/d/%E5%A4%A9%E7%BF%BC%E4%BA%91%E7%9B%98/img/20250510170821004.png" alt="image-20250510165833281"></p>
<p>注意：授权传送之后会提示成功，传送成功后授权若消失重新使用EKb安装一遍即可出现。</p>
]]></content>
  </entry>
</search>
